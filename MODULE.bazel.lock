{
  "lockFileVersion": 18,
  "registryFileHashes": {
    "https://bcr.bazel.build/bazel_registry.json": "8a28e4aff06ee60aed2a8c281907fb8bcbf3b753c91fb5a5c57da3215d5b3497",
    "https://bcr.bazel.build/modules/abseil-cpp/20210324.2/MODULE.bazel": "7cd0312e064fde87c8d1cd79ba06c876bd23630c83466e9500321be55c96ace2",
    "https://bcr.bazel.build/modules/abseil-cpp/20211102.0/MODULE.bazel": "70390338f7a5106231d20620712f7cccb659cd0e9d073d1991c038eb9fc57589",
    "https://bcr.bazel.build/modules/abseil-cpp/20230125.1/MODULE.bazel": "89047429cb0207707b2dface14ba7f8df85273d484c2572755be4bab7ce9c3a0",
    "https://bcr.bazel.build/modules/abseil-cpp/20230802.0.bcr.1/MODULE.bazel": "1c8cec495288dccd14fdae6e3f95f772c1c91857047a098fad772034264cc8cb",
    "https://bcr.bazel.build/modules/abseil-cpp/20230802.0/MODULE.bazel": "d253ae36a8bd9ee3c5955384096ccb6baf16a1b1e93e858370da0a3b94f77c16",
    "https://bcr.bazel.build/modules/abseil-cpp/20230802.1/MODULE.bazel": "fa92e2eb41a04df73cdabeec37107316f7e5272650f81d6cc096418fe647b915",
    "https://bcr.bazel.build/modules/abseil-cpp/20240116.1/MODULE.bazel": "37bcdb4440fbb61df6a1c296ae01b327f19e9bb521f9b8e26ec854b6f97309ed",
    "https://bcr.bazel.build/modules/abseil-cpp/20240116.2/MODULE.bazel": "73939767a4686cd9a520d16af5ab440071ed75cec1a876bf2fcfaf1f71987a16",
    "https://bcr.bazel.build/modules/abseil-cpp/20250127.1/MODULE.bazel": "c4a89e7ceb9bf1e25cf84a9f830ff6b817b72874088bf5141b314726e46a57c1",
    "https://bcr.bazel.build/modules/abseil-cpp/20250127.1/source.json": "03c90ee57977264436d3231676dcddae116c4769a5d02b6fc16c2c9e019b583a",
    "https://bcr.bazel.build/modules/apple_support/1.15.1/MODULE.bazel": "a0556fefca0b1bb2de8567b8827518f94db6a6e7e7d632b4c48dc5f865bc7c85",
    "https://bcr.bazel.build/modules/apple_support/1.17.1/MODULE.bazel": "655c922ab1209978a94ef6ca7d9d43e940cd97d9c172fb55f94d91ac53f8610b",
    "https://bcr.bazel.build/modules/apple_support/1.17.1/source.json": "6b2b8c74d14e8d485528a938e44bdb72a5ba17632b9e14ef6e68a5ee96c8347f",
    "https://bcr.bazel.build/modules/aspect_bazel_lib/2.13.0/MODULE.bazel": "af4a546cb88c618f2e241721d2d76b70b7ecfaa1d58fe27b9187d3edb9e418da",
    "https://bcr.bazel.build/modules/aspect_bazel_lib/2.13.0/source.json": "5538ef77a1ecff41c119e040d4bc0148c83e9e79464a165ec86a1aa3171a5535",
    "https://bcr.bazel.build/modules/aspect_bazel_lib/2.7.2/MODULE.bazel": "780d1a6522b28f5edb7ea09630748720721dfe27690d65a2d33aa7509de77e07",
    "https://bcr.bazel.build/modules/bazel_features/1.1.1/MODULE.bazel": "27b8c79ef57efe08efccbd9dd6ef70d61b4798320b8d3c134fd571f78963dbcd",
    "https://bcr.bazel.build/modules/bazel_features/1.10.0/MODULE.bazel": "f75e8807570484a99be90abcd52b5e1f390362c258bcb73106f4544957a48101",
    "https://bcr.bazel.build/modules/bazel_features/1.11.0/MODULE.bazel": "f9382337dd5a474c3b7d334c2f83e50b6eaedc284253334cf823044a26de03e8",
    "https://bcr.bazel.build/modules/bazel_features/1.15.0/MODULE.bazel": "d38ff6e517149dc509406aca0db3ad1efdd890a85e049585b7234d04238e2a4d",
    "https://bcr.bazel.build/modules/bazel_features/1.17.0/MODULE.bazel": "039de32d21b816b47bd42c778e0454217e9c9caac4a3cf8e15c7231ee3ddee4d",
    "https://bcr.bazel.build/modules/bazel_features/1.18.0/MODULE.bazel": "1be0ae2557ab3a72a57aeb31b29be347bcdc5d2b1eb1e70f39e3851a7e97041a",
    "https://bcr.bazel.build/modules/bazel_features/1.19.0/MODULE.bazel": "59adcdf28230d220f0067b1f435b8537dd033bfff8db21335ef9217919c7fb58",
    "https://bcr.bazel.build/modules/bazel_features/1.21.0/MODULE.bazel": "675642261665d8eea09989aa3b8afb5c37627f1be178382c320d1b46afba5e3b",
    "https://bcr.bazel.build/modules/bazel_features/1.21.0/source.json": "3e8379efaaef53ce35b7b8ba419df829315a880cb0a030e5bb45c96d6d5ecb5f",
    "https://bcr.bazel.build/modules/bazel_features/1.4.1/MODULE.bazel": "e45b6bb2350aff3e442ae1111c555e27eac1d915e77775f6fdc4b351b758b5d7",
    "https://bcr.bazel.build/modules/bazel_features/1.9.0/MODULE.bazel": "885151d58d90d8d9c811eb75e3288c11f850e1d6b481a8c9f766adee4712358b",
    "https://bcr.bazel.build/modules/bazel_features/1.9.1/MODULE.bazel": "8f679097876a9b609ad1f60249c49d68bfab783dd9be012faf9d82547b14815a",
    "https://bcr.bazel.build/modules/bazel_skylib/1.0.3/MODULE.bazel": "bcb0fd896384802d1ad283b4e4eb4d718eebd8cb820b0a2c3a347fb971afd9d8",
    "https://bcr.bazel.build/modules/bazel_skylib/1.1.1/MODULE.bazel": "1add3e7d93ff2e6998f9e118022c84d163917d912f5afafb3058e3d2f1545b5e",
    "https://bcr.bazel.build/modules/bazel_skylib/1.2.0/MODULE.bazel": "44fe84260e454ed94ad326352a698422dbe372b21a1ac9f3eab76eb531223686",
    "https://bcr.bazel.build/modules/bazel_skylib/1.2.1/MODULE.bazel": "f35baf9da0efe45fa3da1696ae906eea3d615ad41e2e3def4aeb4e8bc0ef9a7a",
    "https://bcr.bazel.build/modules/bazel_skylib/1.3.0/MODULE.bazel": "20228b92868bf5cfc41bda7afc8a8ba2a543201851de39d990ec957b513579c5",
    "https://bcr.bazel.build/modules/bazel_skylib/1.4.1/MODULE.bazel": "a0dcb779424be33100dcae821e9e27e4f2901d9dfd5333efe5ac6a8d7ab75e1d",
    "https://bcr.bazel.build/modules/bazel_skylib/1.4.2/MODULE.bazel": "3bd40978e7a1fac911d5989e6b09d8f64921865a45822d8b09e815eaa726a651",
    "https://bcr.bazel.build/modules/bazel_skylib/1.5.0/MODULE.bazel": "32880f5e2945ce6a03d1fbd588e9198c0a959bb42297b2cfaf1685b7bc32e138",
    "https://bcr.bazel.build/modules/bazel_skylib/1.6.1/MODULE.bazel": "8fdee2dbaace6c252131c00e1de4b165dc65af02ea278476187765e1a617b917",
    "https://bcr.bazel.build/modules/bazel_skylib/1.7.0/MODULE.bazel": "0db596f4563de7938de764cc8deeabec291f55e8ec15299718b93c4423e9796d",
    "https://bcr.bazel.build/modules/bazel_skylib/1.7.1/MODULE.bazel": "3120d80c5861aa616222ec015332e5f8d3171e062e3e804a2a0253e1be26e59b",
    "https://bcr.bazel.build/modules/bazel_skylib/1.7.1/source.json": "f121b43eeefc7c29efbd51b83d08631e2347297c95aac9764a701f2a6a2bb953",
    "https://bcr.bazel.build/modules/boringssl/0.20250514.0/MODULE.bazel": "b69867e7340e06cbfc6fedfbba3124d4d047b1a1af207504be18d0abff4a9580",
    "https://bcr.bazel.build/modules/boringssl/0.20250514.0/source.json": "c102398dcb364d7d38e592eb525c7e1e7eac7119e7b4a5a2db9c2ac740a4e653",
    "https://bcr.bazel.build/modules/buildifier_prebuilt/8.0.1/MODULE.bazel": "66ea722b98a7ce0b790d913e82163ebe04509073b269539403936d8f65bef027",
    "https://bcr.bazel.build/modules/buildifier_prebuilt/8.0.1/source.json": "1bebf90699bb94cb232b417a6e20ac8b21ad4ccfbcb506116635825c4c87b10b",
    "https://bcr.bazel.build/modules/buildozer/7.1.2/MODULE.bazel": "2e8dd40ede9c454042645fd8d8d0cd1527966aa5c919de86661e62953cd73d84",
    "https://bcr.bazel.build/modules/buildozer/7.1.2/source.json": "c9028a501d2db85793a6996205c8de120944f50a0d570438fcae0457a5f9d1f8",
    "https://bcr.bazel.build/modules/gazelle/0.42.0/MODULE.bazel": "fa140a7c019f3a22779ba7c6132ffff9d2d10a51dba2f3304dee61523d11fef4",
    "https://bcr.bazel.build/modules/gazelle/0.42.0/source.json": "eb6f7b0cb76c52d2679164910a01fa6ddcee409e6a7fee06e602ef259f65165c",
    "https://bcr.bazel.build/modules/glib/2.82.2.bcr.5/MODULE.bazel": "1f58891f8460e88d29ca57df3104d575a21751557cd8c2141c720873b3f62031",
    "https://bcr.bazel.build/modules/glib/2.82.2.bcr.5/source.json": "055d26d7aeb295cfe7e1a7d3b9284b4484595c2bb4e8ac0628d09221c8b991f8",
    "https://bcr.bazel.build/modules/google_benchmark/1.8.2/MODULE.bazel": "a70cf1bba851000ba93b58ae2f6d76490a9feb74192e57ab8e8ff13c34ec50cb",
    "https://bcr.bazel.build/modules/googletest/1.11.0/MODULE.bazel": "3a83f095183f66345ca86aa13c58b59f9f94a2f81999c093d4eeaa2d262d12f4",
    "https://bcr.bazel.build/modules/googletest/1.14.0.bcr.1/MODULE.bazel": "22c31a561553727960057361aa33bf20fb2e98584bc4fec007906e27053f80c6",
    "https://bcr.bazel.build/modules/googletest/1.14.0/MODULE.bazel": "cfbcbf3e6eac06ef9d85900f64424708cc08687d1b527f0ef65aa7517af8118f",
    "https://bcr.bazel.build/modules/googletest/1.15.2/MODULE.bazel": "6de1edc1d26cafb0ea1a6ab3f4d4192d91a312fd2d360b63adaa213cd00b2108",
    "https://bcr.bazel.build/modules/googletest/1.17.0/MODULE.bazel": "dbec758171594a705933a29fcf69293d2468c49ec1f2ebca65c36f504d72df46",
    "https://bcr.bazel.build/modules/googletest/1.17.0/source.json": "38e4454b25fc30f15439c0378e57909ab1fd0a443158aa35aec685da727cd713",
    "https://bcr.bazel.build/modules/jsoncpp/1.9.5/MODULE.bazel": "31271aedc59e815656f5736f282bb7509a97c7ecb43e927ac1a37966e0578075",
    "https://bcr.bazel.build/modules/jsoncpp/1.9.5/source.json": "4108ee5085dd2885a341c7fab149429db457b3169b86eb081fa245eadf69169d",
    "https://bcr.bazel.build/modules/libffi/3.4.7.bcr.3/MODULE.bazel": "2aaa0e32669002a26ffe421e98913ed70fa5ee21c36fc51d2d51053a5ed07420",
    "https://bcr.bazel.build/modules/libffi/3.4.7.bcr.3/source.json": "fdffd7d4e35124905988e03a5f7ced705df34f5e5134445b7f17f1ecaede9df2",
    "https://bcr.bazel.build/modules/libpfm/4.11.0/MODULE.bazel": "45061ff025b301940f1e30d2c16bea596c25b176c8b6b3087e92615adbd52902",
    "https://bcr.bazel.build/modules/pcre2/10.46-DEV/MODULE.bazel": "c3c40175cd5e383f02bcfb2d484560461c5ef11e5d52bfc09c7398486c2cbaa6",
    "https://bcr.bazel.build/modules/pcre2/10.46-DEV/source.json": "7d4a1e758cbef4b68046813147f3b031ed06d226a6925d64079b8d8ecdb20008",
    "https://bcr.bazel.build/modules/platforms/0.0.10/MODULE.bazel": "8cb8efaf200bdeb2150d93e162c40f388529a25852b332cec879373771e48ed5",
    "https://bcr.bazel.build/modules/platforms/0.0.11/MODULE.bazel": "0daefc49732e227caa8bfa834d65dc52e8cc18a2faf80df25e8caea151a9413f",
    "https://bcr.bazel.build/modules/platforms/0.0.11/source.json": "f7e188b79ebedebfe75e9e1d098b8845226c7992b307e28e1496f23112e8fc29",
    "https://bcr.bazel.build/modules/platforms/0.0.4/MODULE.bazel": "9b328e31ee156f53f3c416a64f8491f7eb731742655a47c9eec4703a71644aee",
    "https://bcr.bazel.build/modules/platforms/0.0.5/MODULE.bazel": "5733b54ea419d5eaf7997054bb55f6a1d0b5ff8aedf0176fef9eea44f3acda37",
    "https://bcr.bazel.build/modules/platforms/0.0.6/MODULE.bazel": "ad6eeef431dc52aefd2d77ed20a4b353f8ebf0f4ecdd26a807d2da5aa8cd0615",
    "https://bcr.bazel.build/modules/platforms/0.0.7/MODULE.bazel": "72fd4a0ede9ee5c021f6a8dd92b503e089f46c227ba2813ff183b71616034814",
    "https://bcr.bazel.build/modules/platforms/0.0.8/MODULE.bazel": "9f142c03e348f6d263719f5074b21ef3adf0b139ee4c5133e2aa35664da9eb2d",
    "https://bcr.bazel.build/modules/platforms/0.0.9/MODULE.bazel": "4a87a60c927b56ddd67db50c89acaa62f4ce2a1d2149ccb63ffd871d5ce29ebc",
    "https://bcr.bazel.build/modules/protobuf/21.7/MODULE.bazel": "a5a29bb89544f9b97edce05642fac225a808b5b7be74038ea3640fae2f8e66a7",
    "https://bcr.bazel.build/modules/protobuf/23.1/MODULE.bazel": "88b393b3eb4101d18129e5db51847cd40a5517a53e81216144a8c32dfeeca52a",
    "https://bcr.bazel.build/modules/protobuf/24.4/MODULE.bazel": "7bc7ce5f2abf36b3b7b7c8218d3acdebb9426aeb35c2257c96445756f970eb12",
    "https://bcr.bazel.build/modules/protobuf/27.0/MODULE.bazel": "7873b60be88844a0a1d8f80b9d5d20cfbd8495a689b8763e76c6372998d3f64c",
    "https://bcr.bazel.build/modules/protobuf/27.1/MODULE.bazel": "703a7b614728bb06647f965264967a8ef1c39e09e8f167b3ca0bb1fd80449c0d",
    "https://bcr.bazel.build/modules/protobuf/28.3/MODULE.bazel": "2b3764bbab2e46703412bd3b859efcf0322638ed015e88432df3bb740507a1e9",
    "https://bcr.bazel.build/modules/protobuf/29.0-rc2/MODULE.bazel": "6241d35983510143049943fc0d57937937122baf1b287862f9dc8590fc4c37df",
    "https://bcr.bazel.build/modules/protobuf/29.0-rc3/MODULE.bazel": "33c2dfa286578573afc55a7acaea3cada4122b9631007c594bf0729f41c8de92",
    "https://bcr.bazel.build/modules/protobuf/29.0/MODULE.bazel": "319dc8bf4c679ff87e71b1ccfb5a6e90a6dbc4693501d471f48662ac46d04e4e",
    "https://bcr.bazel.build/modules/protobuf/29.1/MODULE.bazel": "557c3457560ff49e122ed76c0bc3397a64af9574691cb8201b4e46d4ab2ecb95",
    "https://bcr.bazel.build/modules/protobuf/29.3/MODULE.bazel": "77480eea5fb5541903e49683f24dc3e09f4a79e0eea247414887bb9fc0066e94",
    "https://bcr.bazel.build/modules/protobuf/29.3/source.json": "c460e6550ddd24996232c7542ebf201f73c4e01d2183a31a041035fb50f19681",
    "https://bcr.bazel.build/modules/protobuf/3.19.0/MODULE.bazel": "6b5fbb433f760a99a22b18b6850ed5784ef0e9928a72668b66e4d7ccd47db9b0",
    "https://bcr.bazel.build/modules/protobuf/3.19.2/MODULE.bazel": "532ffe5f2186b69fdde039efe6df13ba726ff338c6bc82275ad433013fa10573",
    "https://bcr.bazel.build/modules/protobuf/3.19.6/MODULE.bazel": "9233edc5e1f2ee276a60de3eaa47ac4132302ef9643238f23128fea53ea12858",
    "https://bcr.bazel.build/modules/pybind11_bazel/2.11.1/MODULE.bazel": "88af1c246226d87e65be78ed49ecd1e6f5e98648558c14ce99176da041dc378e",
    "https://bcr.bazel.build/modules/pybind11_bazel/2.12.0/MODULE.bazel": "e6f4c20442eaa7c90d7190d8dc539d0ab422f95c65a57cc59562170c58ae3d34",
    "https://bcr.bazel.build/modules/pybind11_bazel/2.12.0/source.json": "6900fdc8a9e95866b8c0d4ad4aba4d4236317b5c1cd04c502df3f0d33afed680",
    "https://bcr.bazel.build/modules/re2/2023-09-01/MODULE.bazel": "cb3d511531b16cfc78a225a9e2136007a48cf8a677e4264baeab57fe78a80206",
    "https://bcr.bazel.build/modules/re2/2024-07-02.bcr.1/MODULE.bazel": "b4963dda9b31080be1905ef085ecd7dd6cd47c05c79b9cdf83ade83ab2ab271a",
    "https://bcr.bazel.build/modules/re2/2024-07-02.bcr.1/source.json": "2ff292be6ef3340325ce8a045ecc326e92cbfab47c7cbab4bd85d28971b97ac4",
    "https://bcr.bazel.build/modules/re2/2024-07-02/MODULE.bazel": "0eadc4395959969297cbcf31a249ff457f2f1d456228c67719480205aa306daa",
    "https://bcr.bazel.build/modules/rules_android/0.1.1/MODULE.bazel": "48809ab0091b07ad0182defb787c4c5328bd3a278938415c00a7b69b50c4d3a8",
    "https://bcr.bazel.build/modules/rules_android/0.1.1/source.json": "e6986b41626ee10bdc864937ffb6d6bf275bb5b9c65120e6137d56e6331f089e",
    "https://bcr.bazel.build/modules/rules_cc/0.0.1/MODULE.bazel": "cb2aa0747f84c6c3a78dad4e2049c154f08ab9d166b1273835a8174940365647",
    "https://bcr.bazel.build/modules/rules_cc/0.0.10/MODULE.bazel": "ec1705118f7eaedd6e118508d3d26deba2a4e76476ada7e0e3965211be012002",
    "https://bcr.bazel.build/modules/rules_cc/0.0.13/MODULE.bazel": "0e8529ed7b323dad0775ff924d2ae5af7640b23553dfcd4d34344c7e7a867191",
    "https://bcr.bazel.build/modules/rules_cc/0.0.14/MODULE.bazel": "5e343a3aac88b8d7af3b1b6d2093b55c347b8eefc2e7d1442f7a02dc8fea48ac",
    "https://bcr.bazel.build/modules/rules_cc/0.0.15/MODULE.bazel": "6704c35f7b4a72502ee81f61bf88706b54f06b3cbe5558ac17e2e14666cd5dcc",
    "https://bcr.bazel.build/modules/rules_cc/0.0.16/MODULE.bazel": "7661303b8fc1b4d7f532e54e9d6565771fea666fbdf839e0a86affcd02defe87",
    "https://bcr.bazel.build/modules/rules_cc/0.0.17/MODULE.bazel": "2ae1d8f4238ec67d7185d8861cb0a2cdf4bc608697c331b95bf990e69b62e64a",
    "https://bcr.bazel.build/modules/rules_cc/0.0.2/MODULE.bazel": "6915987c90970493ab97393024c156ea8fb9f3bea953b2f3ec05c34f19b5695c",
    "https://bcr.bazel.build/modules/rules_cc/0.0.6/MODULE.bazel": "abf360251023dfe3efcef65ab9d56beefa8394d4176dd29529750e1c57eaa33f",
    "https://bcr.bazel.build/modules/rules_cc/0.0.8/MODULE.bazel": "964c85c82cfeb6f3855e6a07054fdb159aced38e99a5eecf7bce9d53990afa3e",
    "https://bcr.bazel.build/modules/rules_cc/0.0.9/MODULE.bazel": "836e76439f354b89afe6a911a7adf59a6b2518fafb174483ad78a2a2fde7b1c5",
    "https://bcr.bazel.build/modules/rules_cc/0.1.1/MODULE.bazel": "2f0222a6f229f0bf44cd711dc13c858dad98c62d52bd51d8fc3a764a83125513",
    "https://bcr.bazel.build/modules/rules_cc/0.1.1/source.json": "d61627377bd7dd1da4652063e368d9366fc9a73920bfa396798ad92172cf645c",
    "https://bcr.bazel.build/modules/rules_foreign_cc/0.9.0/MODULE.bazel": "c9e8c682bf75b0e7c704166d79b599f93b72cfca5ad7477df596947891feeef6",
    "https://bcr.bazel.build/modules/rules_fuzzing/0.5.2/MODULE.bazel": "40c97d1144356f52905566c55811f13b299453a14ac7769dfba2ac38192337a8",
    "https://bcr.bazel.build/modules/rules_fuzzing/0.5.2/source.json": "c8b1e2c717646f1702290959a3302a178fb639d987ab61d548105019f11e527e",
    "https://bcr.bazel.build/modules/rules_go/0.54.0/MODULE.bazel": "ebec39ed510d0d4122b60764623dda92ca7f175479b511bf7cd5de7f38e86747",
    "https://bcr.bazel.build/modules/rules_go/0.54.0/source.json": "6eb9b4f4fc27ab5be79d84dcfcf971beea6caa91a1b02088a9ee314c88915cf3",
    "https://bcr.bazel.build/modules/rules_java/4.0.0/MODULE.bazel": "5a78a7ae82cd1a33cef56dc578c7d2a46ed0dca12643ee45edbb8417899e6f74",
    "https://bcr.bazel.build/modules/rules_java/5.3.5/MODULE.bazel": "a4ec4f2db570171e3e5eb753276ee4b389bae16b96207e9d3230895c99644b86",
    "https://bcr.bazel.build/modules/rules_java/6.0.0/MODULE.bazel": "8a43b7df601a7ec1af61d79345c17b31ea1fedc6711fd4abfd013ea612978e39",
    "https://bcr.bazel.build/modules/rules_java/6.3.0/MODULE.bazel": "a97c7678c19f236a956ad260d59c86e10a463badb7eb2eda787490f4c969b963",
    "https://bcr.bazel.build/modules/rules_java/6.4.0/MODULE.bazel": "e986a9fe25aeaa84ac17ca093ef13a4637f6107375f64667a15999f77db6c8f6",
    "https://bcr.bazel.build/modules/rules_java/6.5.2/MODULE.bazel": "1d440d262d0e08453fa0c4d8f699ba81609ed0e9a9a0f02cd10b3e7942e61e31",
    "https://bcr.bazel.build/modules/rules_java/7.1.0/MODULE.bazel": "30d9135a2b6561c761bd67bd4990da591e6bdc128790ce3e7afd6a3558b2fb64",
    "https://bcr.bazel.build/modules/rules_java/7.10.0/MODULE.bazel": "530c3beb3067e870561739f1144329a21c851ff771cd752a49e06e3dc9c2e71a",
    "https://bcr.bazel.build/modules/rules_java/7.12.2/MODULE.bazel": "579c505165ee757a4280ef83cda0150eea193eed3bef50b1004ba88b99da6de6",
    "https://bcr.bazel.build/modules/rules_java/7.2.0/MODULE.bazel": "06c0334c9be61e6cef2c8c84a7800cef502063269a5af25ceb100b192453d4ab",
    "https://bcr.bazel.build/modules/rules_java/7.3.2/MODULE.bazel": "50dece891cfdf1741ea230d001aa9c14398062f2b7c066470accace78e412bc2",
    "https://bcr.bazel.build/modules/rules_java/7.6.1/MODULE.bazel": "2f14b7e8a1aa2f67ae92bc69d1ec0fa8d9f827c4e17ff5e5f02e91caa3b2d0fe",
    "https://bcr.bazel.build/modules/rules_java/8.3.2/MODULE.bazel": "7336d5511ad5af0b8615fdc7477535a2e4e723a357b6713af439fe8cf0195017",
    "https://bcr.bazel.build/modules/rules_java/8.5.1/MODULE.bazel": "d8a9e38cc5228881f7055a6079f6f7821a073df3744d441978e7a43e20226939",
    "https://bcr.bazel.build/modules/rules_java/8.6.1/MODULE.bazel": "f4808e2ab5b0197f094cabce9f4b006a27766beb6a9975931da07099560ca9c2",
    "https://bcr.bazel.build/modules/rules_java/8.6.1/source.json": "f18d9ad3c4c54945bf422ad584fa6c5ca5b3116ff55a5b1bc77e5c1210be5960",
    "https://bcr.bazel.build/modules/rules_jvm_external/4.4.2/MODULE.bazel": "a56b85e418c83eb1839819f0b515c431010160383306d13ec21959ac412d2fe7",
    "https://bcr.bazel.build/modules/rules_jvm_external/5.1/MODULE.bazel": "33f6f999e03183f7d088c9be518a63467dfd0be94a11d0055fe2d210f89aa909",
    "https://bcr.bazel.build/modules/rules_jvm_external/5.2/MODULE.bazel": "d9351ba35217ad0de03816ef3ed63f89d411349353077348a45348b096615036",
    "https://bcr.bazel.build/modules/rules_jvm_external/5.3/MODULE.bazel": "bf93870767689637164657731849fb887ad086739bd5d360d90007a581d5527d",
    "https://bcr.bazel.build/modules/rules_jvm_external/6.1/MODULE.bazel": "75b5fec090dbd46cf9b7d8ea08cf84a0472d92ba3585b476f44c326eda8059c4",
    "https://bcr.bazel.build/modules/rules_jvm_external/6.3/MODULE.bazel": "c998e060b85f71e00de5ec552019347c8bca255062c990ac02d051bb80a38df0",
    "https://bcr.bazel.build/modules/rules_jvm_external/6.3/source.json": "6f5f5a5a4419ae4e37c35a5bb0a6ae657ed40b7abc5a5189111b47fcebe43197",
    "https://bcr.bazel.build/modules/rules_kotlin/1.9.0/MODULE.bazel": "ef85697305025e5a61f395d4eaede272a5393cee479ace6686dba707de804d59",
    "https://bcr.bazel.build/modules/rules_kotlin/1.9.6/MODULE.bazel": "d269a01a18ee74d0335450b10f62c9ed81f2321d7958a2934e44272fe82dcef3",
    "https://bcr.bazel.build/modules/rules_kotlin/1.9.6/source.json": "2faa4794364282db7c06600b7e5e34867a564ae91bda7cae7c29c64e9466b7d5",
    "https://bcr.bazel.build/modules/rules_license/0.0.3/MODULE.bazel": "627e9ab0247f7d1e05736b59dbb1b6871373de5ad31c3011880b4133cafd4bd0",
    "https://bcr.bazel.build/modules/rules_license/0.0.7/MODULE.bazel": "088fbeb0b6a419005b89cf93fe62d9517c0a2b8bb56af3244af65ecfe37e7d5d",
    "https://bcr.bazel.build/modules/rules_license/1.0.0/MODULE.bazel": "a7fda60eefdf3d8c827262ba499957e4df06f659330bbe6cdbdb975b768bb65c",
    "https://bcr.bazel.build/modules/rules_license/1.0.0/source.json": "a52c89e54cc311196e478f8382df91c15f7a2bfdf4c6cd0e2675cc2ff0b56efb",
    "https://bcr.bazel.build/modules/rules_multirun/0.10.0/MODULE.bazel": "84499e8cf17ecf490465aacf719976b7f69686d6cc2f679894eebe3b847e70be",
    "https://bcr.bazel.build/modules/rules_multirun/0.10.0/source.json": "0dcd2da6a631ea3e047a349da8a66836dd188dec54ce067a64c9585a41387055",
    "https://bcr.bazel.build/modules/rules_oci/2.2.2/MODULE.bazel": "f2afa49fbed0edb709b79d21d55db562f70450ca1a8527ff7b56fdf792bf26f7",
    "https://bcr.bazel.build/modules/rules_oci/2.2.2/source.json": "91e19c82d3311d7531b143e24fbaa72d8942f5f4e23c640eb834b0a1322ff136",
    "https://bcr.bazel.build/modules/rules_pkg/0.7.0/MODULE.bazel": "df99f03fc7934a4737122518bb87e667e62d780b610910f0447665a7e2be62dc",
    "https://bcr.bazel.build/modules/rules_pkg/1.0.1/MODULE.bazel": "5b1df97dbc29623bccdf2b0dcd0f5cb08e2f2c9050aab1092fd39a41e82686ff",
    "https://bcr.bazel.build/modules/rules_pkg/1.0.1/source.json": "bd82e5d7b9ce2d31e380dd9f50c111d678c3bdaca190cb76b0e1c71b05e1ba8a",
    "https://bcr.bazel.build/modules/rules_proto/4.0.0/MODULE.bazel": "a7a7b6ce9bee418c1a760b3d84f83a299ad6952f9903c67f19e4edd964894e06",
    "https://bcr.bazel.build/modules/rules_proto/5.3.0-21.7/MODULE.bazel": "e8dff86b0971688790ae75528fe1813f71809b5afd57facb44dad9e8eca631b7",
    "https://bcr.bazel.build/modules/rules_proto/6.0.0-rc1/MODULE.bazel": "1e5b502e2e1a9e825eef74476a5a1ee524a92297085015a052510b09a1a09483",
    "https://bcr.bazel.build/modules/rules_proto/6.0.0/MODULE.bazel": "b531d7f09f58dce456cd61b4579ce8c86b38544da75184eadaf0a7cb7966453f",
    "https://bcr.bazel.build/modules/rules_proto/6.0.2/MODULE.bazel": "ce916b775a62b90b61888052a416ccdda405212b6aaeb39522f7dc53431a5e73",
    "https://bcr.bazel.build/modules/rules_proto/7.0.2/MODULE.bazel": "bf81793bd6d2ad89a37a40693e56c61b0ee30f7a7fdbaf3eabbf5f39de47dea2",
    "https://bcr.bazel.build/modules/rules_proto/7.1.0/MODULE.bazel": "002d62d9108f75bb807cd56245d45648f38275cb3a99dcd45dfb864c5d74cb96",
    "https://bcr.bazel.build/modules/rules_proto/7.1.0/source.json": "39f89066c12c24097854e8f57ab8558929f9c8d474d34b2c00ac04630ad8940e",
    "https://bcr.bazel.build/modules/rules_proto_grpc/5.0.1/MODULE.bazel": "af7a76546e6fb5cfb37d30ece061bad276ceb785eb4ea43d6f74fc35cff71dfc",
    "https://bcr.bazel.build/modules/rules_proto_grpc/5.0.1/source.json": "eb2a5cd4344970803514e64bce3bb16840fe9476a4e9695d95c6e0475d821606",
    "https://bcr.bazel.build/modules/rules_proto_grpc_buf/5.0.1/MODULE.bazel": "9c4191770ed1f3ca9eb780e8d50eaccff4f64335d8464321236a2e798165ccfb",
    "https://bcr.bazel.build/modules/rules_proto_grpc_buf/5.0.1/source.json": "a80fd644b0249c95beccb78ac24f541af46dac511e20c858bfbe913ac29adb51",
    "https://bcr.bazel.build/modules/rules_proto_grpc_doc/5.0.1/MODULE.bazel": "2b0a43ecf9dc2a847498bf9cd36b3c270f7254b0a771cb7dcb3e2e5cff8c5d32",
    "https://bcr.bazel.build/modules/rules_proto_grpc_doc/5.0.1/source.json": "3b6f8b72e81196756859c7486595df297d7721d62ff37f71804ca9e4ed84ef8f",
    "https://bcr.bazel.build/modules/rules_python/0.10.2/MODULE.bazel": "cc82bc96f2997baa545ab3ce73f196d040ffb8756fd2d66125a530031cd90e5f",
    "https://bcr.bazel.build/modules/rules_python/0.23.1/MODULE.bazel": "49ffccf0511cb8414de28321f5fcf2a31312b47c40cc21577144b7447f2bf300",
    "https://bcr.bazel.build/modules/rules_python/0.25.0/MODULE.bazel": "72f1506841c920a1afec76975b35312410eea3aa7b63267436bfb1dd91d2d382",
    "https://bcr.bazel.build/modules/rules_python/0.28.0/MODULE.bazel": "cba2573d870babc976664a912539b320cbaa7114cd3e8f053c720171cde331ed",
    "https://bcr.bazel.build/modules/rules_python/0.31.0/MODULE.bazel": "93a43dc47ee570e6ec9f5779b2e64c1476a6ce921c48cc9a1678a91dd5f8fd58",
    "https://bcr.bazel.build/modules/rules_python/0.33.2/MODULE.bazel": "3e036c4ad8d804a4dad897d333d8dce200d943df4827cb849840055be8d2e937",
    "https://bcr.bazel.build/modules/rules_python/0.35.0/MODULE.bazel": "c3657951764cdcdb5a7370d5e885fad5e8c1583320aad18d46f9f110d2c22755",
    "https://bcr.bazel.build/modules/rules_python/0.36.0/MODULE.bazel": "a4ce1ccea92b9106c7d16ab9ee51c6183107e78ba4a37aa65055227b80cd480c",
    "https://bcr.bazel.build/modules/rules_python/0.4.0/MODULE.bazel": "9208ee05fd48bf09ac60ed269791cf17fb343db56c8226a720fbb1cdf467166c",
    "https://bcr.bazel.build/modules/rules_python/0.40.0/MODULE.bazel": "9d1a3cd88ed7d8e39583d9ffe56ae8a244f67783ae89b60caafc9f5cf318ada7",
    "https://bcr.bazel.build/modules/rules_python/1.1.0/MODULE.bazel": "57e01abae22956eb96d891572490d20e07d983e0c065de0b2170cafe5053e788",
    "https://bcr.bazel.build/modules/rules_python/1.1.0/source.json": "29f1fdfd23a40808c622f813bc93e29c3aae277333f03293f667e76159750a0f",
    "https://bcr.bazel.build/modules/rules_rust/0.57.1/MODULE.bazel": "2c9a54ba2ca856b97dc24f58089baf66e9b89ea1f5ead0f9fc36f7352e4eef03",
    "https://bcr.bazel.build/modules/rules_rust/0.57.1/source.json": "deb97fb4b4e7c04adb7d95c21e1b845d5369faa98f3f021c525d20342c3994e0",
    "https://bcr.bazel.build/modules/rules_rust_prost/0.57.1/MODULE.bazel": "1ac0fb664a882e9c73b9f260c21dea7db695729ddab1dbef2da94c92271d8e0b",
    "https://bcr.bazel.build/modules/rules_rust_prost/0.57.1/source.json": "67f031bbb73410c42a53409afdf6273cc98cf702852d752514d90bf396da08c4",
    "https://bcr.bazel.build/modules/rules_rust_protobuf/0.57.1/MODULE.bazel": "97018b549d76e34f9e7bc1cc1151db2e0be4540ff8d2036c058cb2ef4c4c74bc",
    "https://bcr.bazel.build/modules/rules_rust_protobuf/0.57.1/source.json": "43b04dc352c589d4b0916d1ab6cc83a24d5e95e0a9e36600245feac39883b47a",
    "https://bcr.bazel.build/modules/rules_shell/0.2.0/MODULE.bazel": "fda8a652ab3c7d8fee214de05e7a9916d8b28082234e8d2c0094505c5268ed3c",
    "https://bcr.bazel.build/modules/rules_shell/0.3.0/MODULE.bazel": "de4402cd12f4cc8fda2354fce179fdb068c0b9ca1ec2d2b17b3e21b24c1a937b",
    "https://bcr.bazel.build/modules/rules_shell/0.3.0/source.json": "c55ed591aa5009401ddf80ded9762ac32c358d2517ee7820be981e2de9756cf3",
    "https://bcr.bazel.build/modules/stardoc/0.5.1/MODULE.bazel": "1a05d92974d0c122f5ccf09291442580317cdd859f07a8655f1db9a60374f9f8",
    "https://bcr.bazel.build/modules/stardoc/0.5.3/MODULE.bazel": "c7f6948dae6999bf0db32c1858ae345f112cacf98f174c7a8bb707e41b974f1c",
    "https://bcr.bazel.build/modules/stardoc/0.5.4/MODULE.bazel": "6569966df04610b8520957cb8e97cf2e9faac2c0309657c537ab51c16c18a2a4",
    "https://bcr.bazel.build/modules/stardoc/0.5.6/MODULE.bazel": "c43dabc564990eeab55e25ed61c07a1aadafe9ece96a4efabb3f8bf9063b71ef",
    "https://bcr.bazel.build/modules/stardoc/0.6.2/MODULE.bazel": "7060193196395f5dd668eda046ccbeacebfd98efc77fed418dbe2b82ffaa39fd",
    "https://bcr.bazel.build/modules/stardoc/0.7.0/MODULE.bazel": "05e3d6d30c099b6770e97da986c53bd31844d7f13d41412480ea265ac9e8079c",
    "https://bcr.bazel.build/modules/stardoc/0.7.1/MODULE.bazel": "3548faea4ee5dda5580f9af150e79d0f6aea934fc60c1cc50f4efdd9420759e7",
    "https://bcr.bazel.build/modules/stardoc/0.7.2/MODULE.bazel": "fc152419aa2ea0f51c29583fab1e8c99ddefd5b3778421845606ee628629e0e5",
    "https://bcr.bazel.build/modules/stardoc/0.7.2/source.json": "58b029e5e901d6802967754adf0a9056747e8176f017cfe3607c0851f4d42216",
    "https://bcr.bazel.build/modules/toolchains_protoc/0.3.1/MODULE.bazel": "b6574a2a314cbd40cafb5ed87b03d1996e015315f80a7e33116c8b2e209cb5cf",
    "https://bcr.bazel.build/modules/toolchains_protoc/0.3.1/source.json": "b589ee1faec4c789c680afa9d500b5ccbea25422560b8b9dc4e0e6b26471f13b",
    "https://bcr.bazel.build/modules/upb/0.0.0-20220923-a547704/MODULE.bazel": "7298990c00040a0e2f121f6c32544bab27d4452f80d9ce51349b1a28f3005c43",
    "https://bcr.bazel.build/modules/upb/0.0.0-20230516-61a97ef/MODULE.bazel": "c0df5e35ad55e264160417fd0875932ee3c9dda63d9fccace35ac62f45e1b6f9",
    "https://bcr.bazel.build/modules/zlib/1.3.1/MODULE.bazel": "751c9940dcfe869f5f7274e1295422a34623555916eb98c174c1e945594bf198",
    "https://bcr.bazel.build/modules/zlib/1.3.1/source.json": "61d55210bd9e9b52fe40b438a377ed1e9594703a354ef6f24acc923571613476"
  },
  "selectedYankedVersions": {},
  "moduleExtensions": {
    "@@apple_support+//crosstool:setup.bzl%apple_cc_configure_extension": {
      "general": {
        "bzlTransitiveDigest": "xcBTf2+GaloFpg7YEh/Bv+1yAczRkiCt3DGws4K7kSk=",
        "usagesDigest": "3L+PK6aRnliv0iIS8m3kdo+LjmvjJWoFCm3qZcPSg+8=",
        "recordedFileInputs": {},
        "recordedDirentsInputs": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "local_config_apple_cc_toolchains": {
            "repoRuleId": "@@apple_support+//crosstool:setup.bzl%_apple_cc_autoconf_toolchains",
            "attributes": {}
          },
          "local_config_apple_cc": {
            "repoRuleId": "@@apple_support+//crosstool:setup.bzl%_apple_cc_autoconf",
            "attributes": {}
          }
        },
        "recordedRepoMappingEntries": [
          [
            "apple_support+",
            "bazel_tools",
            "bazel_tools"
          ],
          [
            "bazel_tools",
            "rules_cc",
            "rules_cc+"
          ]
        ]
      }
    },
    "@@buildifier_prebuilt+//:defs.bzl%buildifier_prebuilt_deps_extension": {
      "general": {
        "bzlTransitiveDigest": "iAZPs3u6yr/D7l5qY95YrItbStIZiUNP1b4Grcb0eOE=",
        "usagesDigest": "+DCF+pKaoblObvcYmMhzDybVwZu9JpS+TMSEnDEXxbo=",
        "recordedFileInputs": {},
        "recordedDirentsInputs": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "buildifier_darwin_amd64": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_file",
            "attributes": {
              "urls": [
                "https://github.com/bazelbuild/buildtools/releases/download/v8.0.1/buildifier-darwin-amd64"
              ],
              "downloaded_file_path": "buildifier",
              "executable": true,
              "sha256": "802b013211dbcf91e3c0658ba33ecb3932ef5a6f6764a0b13efcec4e2df04c83"
            }
          },
          "buildifier_darwin_arm64": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_file",
            "attributes": {
              "urls": [
                "https://github.com/bazelbuild/buildtools/releases/download/v8.0.1/buildifier-darwin-arm64"
              ],
              "downloaded_file_path": "buildifier",
              "executable": true,
              "sha256": "833e2afc331b9ad8f6b038ad3d69ceeaf97651900bf2a3a45f54f42cafe0bfd3"
            }
          },
          "buildifier_linux_amd64": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_file",
            "attributes": {
              "urls": [
                "https://github.com/bazelbuild/buildtools/releases/download/v8.0.1/buildifier-linux-amd64"
              ],
              "downloaded_file_path": "buildifier",
              "executable": true,
              "sha256": "1976053ed4decd6dd93170885b4387eddc76ec70dc2697b2e91a9af83269418a"
            }
          },
          "buildifier_linux_arm64": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_file",
            "attributes": {
              "urls": [
                "https://github.com/bazelbuild/buildtools/releases/download/v8.0.1/buildifier-linux-arm64"
              ],
              "downloaded_file_path": "buildifier",
              "executable": true,
              "sha256": "93078c57763493bdc2914ed340544500b8f3497341a62e90f00e9e184c4d9c2c"
            }
          },
          "buildifier_windows_amd64": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_file",
            "attributes": {
              "urls": [
                "https://github.com/bazelbuild/buildtools/releases/download/v8.0.1/buildifier-windows-amd64.exe"
              ],
              "downloaded_file_path": "buildifier.exe",
              "executable": true,
              "sha256": "6edc9247e6d42d27fb67b9509bb795d159a12468faa89e9f290dcadc26571c31"
            }
          },
          "buildozer_darwin_amd64": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_file",
            "attributes": {
              "urls": [
                "https://github.com/bazelbuild/buildtools/releases/download/v8.0.1/buildozer-darwin-amd64"
              ],
              "downloaded_file_path": "buildozer",
              "executable": true,
              "sha256": "799be47db682fb06bfc677438d0c910032dda783606b1eec77669f2c1a17c65a"
            }
          },
          "buildozer_darwin_arm64": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_file",
            "attributes": {
              "urls": [
                "https://github.com/bazelbuild/buildtools/releases/download/v8.0.1/buildozer-darwin-arm64"
              ],
              "downloaded_file_path": "buildozer",
              "executable": true,
              "sha256": "118f2ff581c49e03aeb77e34fddebab10923b93e381185e43e0c1835ba189cd9"
            }
          },
          "buildozer_linux_amd64": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_file",
            "attributes": {
              "urls": [
                "https://github.com/bazelbuild/buildtools/releases/download/v8.0.1/buildozer-linux-amd64"
              ],
              "downloaded_file_path": "buildozer",
              "executable": true,
              "sha256": "4f5a91d4f7fb61ff4d39cdedb7dcf93bb17f3b7737b07175ad4456dc6bdafac1"
            }
          },
          "buildozer_linux_arm64": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_file",
            "attributes": {
              "urls": [
                "https://github.com/bazelbuild/buildtools/releases/download/v8.0.1/buildozer-linux-arm64"
              ],
              "downloaded_file_path": "buildozer",
              "executable": true,
              "sha256": "a7eec1ddcf5075ef3b869f1bf476fce174f0226a35f7e20734caa5a55b10ce26"
            }
          },
          "buildozer_windows_amd64": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_file",
            "attributes": {
              "urls": [
                "https://github.com/bazelbuild/buildtools/releases/download/v8.0.1/buildozer-windows-amd64.exe"
              ],
              "downloaded_file_path": "buildozer.exe",
              "executable": true,
              "sha256": "3b51ae3dd0221eb9d43614206f0886ea36d78e6bb4f8dea69f7bc4cc285d1f15"
            }
          },
          "buildifier_prebuilt_toolchains": {
            "repoRuleId": "@@buildifier_prebuilt+//:defs.bzl%_buildifier_toolchain_setup",
            "attributes": {
              "assets_json": "[{\"arch\":\"amd64\",\"name\":\"buildifier\",\"platform\":\"darwin\",\"sha256\":\"802b013211dbcf91e3c0658ba33ecb3932ef5a6f6764a0b13efcec4e2df04c83\",\"version\":\"v8.0.1\"},{\"arch\":\"arm64\",\"name\":\"buildifier\",\"platform\":\"darwin\",\"sha256\":\"833e2afc331b9ad8f6b038ad3d69ceeaf97651900bf2a3a45f54f42cafe0bfd3\",\"version\":\"v8.0.1\"},{\"arch\":\"amd64\",\"name\":\"buildifier\",\"platform\":\"linux\",\"sha256\":\"1976053ed4decd6dd93170885b4387eddc76ec70dc2697b2e91a9af83269418a\",\"version\":\"v8.0.1\"},{\"arch\":\"arm64\",\"name\":\"buildifier\",\"platform\":\"linux\",\"sha256\":\"93078c57763493bdc2914ed340544500b8f3497341a62e90f00e9e184c4d9c2c\",\"version\":\"v8.0.1\"},{\"arch\":\"amd64\",\"name\":\"buildifier\",\"platform\":\"windows\",\"sha256\":\"6edc9247e6d42d27fb67b9509bb795d159a12468faa89e9f290dcadc26571c31\",\"version\":\"v8.0.1\"},{\"arch\":\"amd64\",\"name\":\"buildozer\",\"platform\":\"darwin\",\"sha256\":\"799be47db682fb06bfc677438d0c910032dda783606b1eec77669f2c1a17c65a\",\"version\":\"v8.0.1\"},{\"arch\":\"arm64\",\"name\":\"buildozer\",\"platform\":\"darwin\",\"sha256\":\"118f2ff581c49e03aeb77e34fddebab10923b93e381185e43e0c1835ba189cd9\",\"version\":\"v8.0.1\"},{\"arch\":\"amd64\",\"name\":\"buildozer\",\"platform\":\"linux\",\"sha256\":\"4f5a91d4f7fb61ff4d39cdedb7dcf93bb17f3b7737b07175ad4456dc6bdafac1\",\"version\":\"v8.0.1\"},{\"arch\":\"arm64\",\"name\":\"buildozer\",\"platform\":\"linux\",\"sha256\":\"a7eec1ddcf5075ef3b869f1bf476fce174f0226a35f7e20734caa5a55b10ce26\",\"version\":\"v8.0.1\"},{\"arch\":\"amd64\",\"name\":\"buildozer\",\"platform\":\"windows\",\"sha256\":\"3b51ae3dd0221eb9d43614206f0886ea36d78e6bb4f8dea69f7bc4cc285d1f15\",\"version\":\"v8.0.1\"}]"
            }
          }
        },
        "recordedRepoMappingEntries": [
          [
            "buildifier_prebuilt+",
            "bazel_skylib",
            "bazel_skylib+"
          ],
          [
            "buildifier_prebuilt+",
            "bazel_tools",
            "bazel_tools"
          ]
        ]
      }
    },
    "@@pybind11_bazel+//:internal_configure.bzl%internal_configure_extension": {
      "general": {
        "bzlTransitiveDigest": "yA4GkX1zdUTOXU4qKsh/YkjZKHAWkG8Fd7adNeGwiRc=",
        "usagesDigest": "D1r3lfzMuUBFxgG8V6o0bQTLMk3GkaGOaPzw53wrwyw=",
        "recordedFileInputs": {
          "@@pybind11_bazel+//MODULE.bazel": "e6f4c20442eaa7c90d7190d8dc539d0ab422f95c65a57cc59562170c58ae3d34"
        },
        "recordedDirentsInputs": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "pybind11": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "build_file": "@@pybind11_bazel+//:pybind11-BUILD.bazel",
              "strip_prefix": "pybind11-2.12.0",
              "urls": [
                "https://github.com/pybind/pybind11/archive/v2.12.0.zip"
              ]
            }
          }
        },
        "recordedRepoMappingEntries": [
          [
            "pybind11_bazel+",
            "bazel_tools",
            "bazel_tools"
          ]
        ]
      }
    },
    "@@rules_fuzzing+//fuzzing/private:extensions.bzl%non_module_dependencies": {
      "general": {
        "bzlTransitiveDigest": "mGiTB79hRNjmeDTQdzkpCHyzXhErMbufeAmySBt7s5s=",
        "usagesDigest": "wy6ISK6UOcBEjj/mvJ/S3WeXoO67X+1llb9yPyFtPgc=",
        "recordedFileInputs": {},
        "recordedDirentsInputs": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "platforms": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "urls": [
                "https://mirror.bazel.build/github.com/bazelbuild/platforms/releases/download/0.0.8/platforms-0.0.8.tar.gz",
                "https://github.com/bazelbuild/platforms/releases/download/0.0.8/platforms-0.0.8.tar.gz"
              ],
              "sha256": "8150406605389ececb6da07cbcb509d5637a3ab9a24bc69b1101531367d89d74"
            }
          },
          "rules_python": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "sha256": "d70cd72a7a4880f0000a6346253414825c19cdd40a28289bdf67b8e6480edff8",
              "strip_prefix": "rules_python-0.28.0",
              "url": "https://github.com/bazelbuild/rules_python/releases/download/0.28.0/rules_python-0.28.0.tar.gz"
            }
          },
          "bazel_skylib": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "sha256": "cd55a062e763b9349921f0f5db8c3933288dc8ba4f76dd9416aac68acee3cb94",
              "urls": [
                "https://mirror.bazel.build/github.com/bazelbuild/bazel-skylib/releases/download/1.5.0/bazel-skylib-1.5.0.tar.gz",
                "https://github.com/bazelbuild/bazel-skylib/releases/download/1.5.0/bazel-skylib-1.5.0.tar.gz"
              ]
            }
          },
          "com_google_absl": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "urls": [
                "https://github.com/abseil/abseil-cpp/archive/refs/tags/20240116.1.zip"
              ],
              "strip_prefix": "abseil-cpp-20240116.1",
              "integrity": "sha256-7capMWOvWyoYbUaHF/b+I2U6XLMaHmky8KugWvfXYuk="
            }
          },
          "rules_fuzzing_oss_fuzz": {
            "repoRuleId": "@@rules_fuzzing+//fuzzing/private/oss_fuzz:repository.bzl%oss_fuzz_repository",
            "attributes": {}
          },
          "honggfuzz": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "build_file": "@@rules_fuzzing+//:honggfuzz.BUILD",
              "sha256": "6b18ba13bc1f36b7b950c72d80f19ea67fbadc0ac0bb297ec89ad91f2eaa423e",
              "url": "https://github.com/google/honggfuzz/archive/2.5.zip",
              "strip_prefix": "honggfuzz-2.5"
            }
          },
          "rules_fuzzing_jazzer": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_jar",
            "attributes": {
              "sha256": "ee6feb569d88962d59cb59e8a31eb9d007c82683f3ebc64955fd5b96f277eec2",
              "url": "https://repo1.maven.org/maven2/com/code-intelligence/jazzer/0.20.1/jazzer-0.20.1.jar"
            }
          },
          "rules_fuzzing_jazzer_api": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_jar",
            "attributes": {
              "sha256": "f5a60242bc408f7fa20fccf10d6c5c5ea1fcb3c6f44642fec5af88373ae7aa1b",
              "url": "https://repo1.maven.org/maven2/com/code-intelligence/jazzer-api/0.20.1/jazzer-api-0.20.1.jar"
            }
          }
        },
        "recordedRepoMappingEntries": [
          [
            "rules_fuzzing+",
            "bazel_tools",
            "bazel_tools"
          ]
        ]
      }
    },
    "@@rules_java+//java:rules_java_deps.bzl%compatibility_proxy": {
      "general": {
        "bzlTransitiveDigest": "84xJEZ1jnXXwo8BXMprvBm++rRt4jsTu9liBxz0ivps=",
        "usagesDigest": "jTQDdLDxsS43zuRmg1faAjIEPWdLAbDAowI1pInQSoo=",
        "recordedFileInputs": {},
        "recordedDirentsInputs": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "compatibility_proxy": {
            "repoRuleId": "@@rules_java+//java:rules_java_deps.bzl%_compatibility_proxy_repo_rule",
            "attributes": {}
          }
        },
        "recordedRepoMappingEntries": [
          [
            "rules_java+",
            "bazel_tools",
            "bazel_tools"
          ]
        ]
      }
    },
    "@@rules_kotlin+//src/main/starlark/core/repositories:bzlmod_setup.bzl%rules_kotlin_extensions": {
      "general": {
        "bzlTransitiveDigest": "sFhcgPbDQehmbD1EOXzX4H1q/CD5df8zwG4kp4jbvr8=",
        "usagesDigest": "QI2z8ZUR+mqtbwsf2fLqYdJAkPOHdOV+tF2yVAUgRzw=",
        "recordedFileInputs": {},
        "recordedDirentsInputs": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "com_github_jetbrains_kotlin_git": {
            "repoRuleId": "@@rules_kotlin+//src/main/starlark/core/repositories:compiler.bzl%kotlin_compiler_git_repository",
            "attributes": {
              "urls": [
                "https://github.com/JetBrains/kotlin/releases/download/v1.9.23/kotlin-compiler-1.9.23.zip"
              ],
              "sha256": "93137d3aab9afa9b27cb06a824c2324195c6b6f6179d8a8653f440f5bd58be88"
            }
          },
          "com_github_jetbrains_kotlin": {
            "repoRuleId": "@@rules_kotlin+//src/main/starlark/core/repositories:compiler.bzl%kotlin_capabilities_repository",
            "attributes": {
              "git_repository_name": "com_github_jetbrains_kotlin_git",
              "compiler_version": "1.9.23"
            }
          },
          "com_github_google_ksp": {
            "repoRuleId": "@@rules_kotlin+//src/main/starlark/core/repositories:ksp.bzl%ksp_compiler_plugin_repository",
            "attributes": {
              "urls": [
                "https://github.com/google/ksp/releases/download/1.9.23-1.0.20/artifacts.zip"
              ],
              "sha256": "ee0618755913ef7fd6511288a232e8fad24838b9af6ea73972a76e81053c8c2d",
              "strip_version": "1.9.23-1.0.20"
            }
          },
          "com_github_pinterest_ktlint": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_file",
            "attributes": {
              "sha256": "01b2e0ef893383a50dbeb13970fe7fa3be36ca3e83259e01649945b09d736985",
              "urls": [
                "https://github.com/pinterest/ktlint/releases/download/1.3.0/ktlint"
              ],
              "executable": true
            }
          },
          "rules_android": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "sha256": "cd06d15dd8bb59926e4d65f9003bfc20f9da4b2519985c27e190cddc8b7a7806",
              "strip_prefix": "rules_android-0.1.1",
              "urls": [
                "https://github.com/bazelbuild/rules_android/archive/v0.1.1.zip"
              ]
            }
          }
        },
        "recordedRepoMappingEntries": [
          [
            "rules_kotlin+",
            "bazel_tools",
            "bazel_tools"
          ]
        ]
      }
    },
    "@@rules_oci+//oci:extensions.bzl%oci": {
      "general": {
        "bzlTransitiveDigest": "qNlcd8WTd4UyzUfM/zpvBIVgvreRoBqBDGhBZr2NxbY=",
        "usagesDigest": "468tcxI46uRPIVPIMODTE5x26VO0+2HLCKSEn3b52Yc=",
        "recordedFileInputs": {},
        "recordedDirentsInputs": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "distroless_base_linux_amd64": {
            "repoRuleId": "@@rules_oci+//oci/private:pull.bzl%oci_pull",
            "attributes": {
              "scheme": "https",
              "registry": "gcr.io",
              "repository": "distroless/base",
              "identifier": "sha256:6ae5fe659f28c6afe9cc2903aebc78a5c6ad3aaa3d9d0369760ac6aaea2529c8",
              "platform": "linux/amd64",
              "target_name": "distroless_base_linux_amd64",
              "bazel_tags": []
            }
          },
          "distroless_base_linux_arm_v7": {
            "repoRuleId": "@@rules_oci+//oci/private:pull.bzl%oci_pull",
            "attributes": {
              "scheme": "https",
              "registry": "gcr.io",
              "repository": "distroless/base",
              "identifier": "sha256:6ae5fe659f28c6afe9cc2903aebc78a5c6ad3aaa3d9d0369760ac6aaea2529c8",
              "platform": "linux/arm/v7",
              "target_name": "distroless_base_linux_arm_v7",
              "bazel_tags": []
            }
          },
          "distroless_base_linux_arm64_v8": {
            "repoRuleId": "@@rules_oci+//oci/private:pull.bzl%oci_pull",
            "attributes": {
              "scheme": "https",
              "registry": "gcr.io",
              "repository": "distroless/base",
              "identifier": "sha256:6ae5fe659f28c6afe9cc2903aebc78a5c6ad3aaa3d9d0369760ac6aaea2529c8",
              "platform": "linux/arm64/v8",
              "target_name": "distroless_base_linux_arm64_v8",
              "bazel_tags": []
            }
          },
          "distroless_base_linux_ppc64le": {
            "repoRuleId": "@@rules_oci+//oci/private:pull.bzl%oci_pull",
            "attributes": {
              "scheme": "https",
              "registry": "gcr.io",
              "repository": "distroless/base",
              "identifier": "sha256:6ae5fe659f28c6afe9cc2903aebc78a5c6ad3aaa3d9d0369760ac6aaea2529c8",
              "platform": "linux/ppc64le",
              "target_name": "distroless_base_linux_ppc64le",
              "bazel_tags": []
            }
          },
          "distroless_base_linux_s390x": {
            "repoRuleId": "@@rules_oci+//oci/private:pull.bzl%oci_pull",
            "attributes": {
              "scheme": "https",
              "registry": "gcr.io",
              "repository": "distroless/base",
              "identifier": "sha256:6ae5fe659f28c6afe9cc2903aebc78a5c6ad3aaa3d9d0369760ac6aaea2529c8",
              "platform": "linux/s390x",
              "target_name": "distroless_base_linux_s390x",
              "bazel_tags": []
            }
          },
          "distroless_base": {
            "repoRuleId": "@@rules_oci+//oci/private:pull.bzl%oci_alias",
            "attributes": {
              "target_name": "distroless_base",
              "scheme": "https",
              "registry": "gcr.io",
              "repository": "distroless/base",
              "identifier": "sha256:6ae5fe659f28c6afe9cc2903aebc78a5c6ad3aaa3d9d0369760ac6aaea2529c8",
              "platforms": {
                "@@platforms//cpu:x86_64": "@distroless_base_linux_amd64",
                "@@platforms//cpu:armv7": "@distroless_base_linux_arm_v7",
                "@@platforms//cpu:arm64": "@distroless_base_linux_arm64_v8",
                "@@platforms//cpu:ppc": "@distroless_base_linux_ppc64le",
                "@@platforms//cpu:s390x": "@distroless_base_linux_s390x"
              },
              "bzlmod_repository": "distroless_base",
              "reproducible": true
            }
          },
          "bazel_features_version": {
            "repoRuleId": "@@bazel_features+//private:version_repo.bzl%version_repo",
            "attributes": {}
          },
          "bazel_features_globals": {
            "repoRuleId": "@@bazel_features+//private:globals_repo.bzl%globals_repo",
            "attributes": {
              "globals": {
                "CcSharedLibraryInfo": "6.0.0-pre.20220630.1",
                "CcSharedLibraryHintInfo": "7.0.0-pre.20230316.2",
                "PackageSpecificationInfo": "6.4.0",
                "RunEnvironmentInfo": "5.3.0",
                "DefaultInfo": "0.0.1",
                "__TestingOnly_NeverAvailable": "1000000000.0.0"
              },
              "legacy_globals": {
                "JavaInfo": "8.0.0",
                "JavaPluginInfo": "8.0.0",
                "ProtoInfo": "8.0.0",
                "PyCcLinkParamsProvider": "8.0.0",
                "PyInfo": "8.0.0",
                "PyRuntimeInfo": "8.0.0"
              }
            }
          },
          "bazel_skylib": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "sha256": "9f38886a40548c6e96c106b752f242130ee11aaa068a56ba7e56f4511f33e4f2",
              "urls": [
                "https://mirror.bazel.build/github.com/bazelbuild/bazel-skylib/releases/download/1.6.1/bazel-skylib-1.6.1.tar.gz",
                "https://github.com/bazelbuild/bazel-skylib/releases/download/1.6.1/bazel-skylib-1.6.1.tar.gz"
              ]
            }
          },
          "jq_darwin_amd64": {
            "repoRuleId": "@@aspect_bazel_lib+//lib/private:jq_toolchain.bzl%jq_platform_repo",
            "attributes": {
              "platform": "darwin_amd64",
              "version": "1.7"
            }
          },
          "jq_darwin_arm64": {
            "repoRuleId": "@@aspect_bazel_lib+//lib/private:jq_toolchain.bzl%jq_platform_repo",
            "attributes": {
              "platform": "darwin_arm64",
              "version": "1.7"
            }
          },
          "jq_linux_amd64": {
            "repoRuleId": "@@aspect_bazel_lib+//lib/private:jq_toolchain.bzl%jq_platform_repo",
            "attributes": {
              "platform": "linux_amd64",
              "version": "1.7"
            }
          },
          "jq_linux_arm64": {
            "repoRuleId": "@@aspect_bazel_lib+//lib/private:jq_toolchain.bzl%jq_platform_repo",
            "attributes": {
              "platform": "linux_arm64",
              "version": "1.7"
            }
          },
          "jq_windows_amd64": {
            "repoRuleId": "@@aspect_bazel_lib+//lib/private:jq_toolchain.bzl%jq_platform_repo",
            "attributes": {
              "platform": "windows_amd64",
              "version": "1.7"
            }
          },
          "jq": {
            "repoRuleId": "@@aspect_bazel_lib+//lib/private:jq_toolchain.bzl%jq_host_alias_repo",
            "attributes": {}
          },
          "jq_toolchains": {
            "repoRuleId": "@@aspect_bazel_lib+//lib/private:jq_toolchain.bzl%jq_toolchains_repo",
            "attributes": {
              "user_repository_name": "jq"
            }
          },
          "bsd_tar_darwin_amd64": {
            "repoRuleId": "@@aspect_bazel_lib+//lib/private:tar_toolchain.bzl%bsdtar_binary_repo",
            "attributes": {
              "platform": "darwin_amd64"
            }
          },
          "bsd_tar_darwin_arm64": {
            "repoRuleId": "@@aspect_bazel_lib+//lib/private:tar_toolchain.bzl%bsdtar_binary_repo",
            "attributes": {
              "platform": "darwin_arm64"
            }
          },
          "bsd_tar_linux_amd64": {
            "repoRuleId": "@@aspect_bazel_lib+//lib/private:tar_toolchain.bzl%bsdtar_binary_repo",
            "attributes": {
              "platform": "linux_amd64"
            }
          },
          "bsd_tar_linux_arm64": {
            "repoRuleId": "@@aspect_bazel_lib+//lib/private:tar_toolchain.bzl%bsdtar_binary_repo",
            "attributes": {
              "platform": "linux_arm64"
            }
          },
          "bsd_tar_windows_amd64": {
            "repoRuleId": "@@aspect_bazel_lib+//lib/private:tar_toolchain.bzl%bsdtar_binary_repo",
            "attributes": {
              "platform": "windows_amd64"
            }
          },
          "bsd_tar_toolchains": {
            "repoRuleId": "@@aspect_bazel_lib+//lib/private:tar_toolchain.bzl%tar_toolchains_repo",
            "attributes": {
              "user_repository_name": "bsd_tar"
            }
          },
          "coreutils_darwin_amd64": {
            "repoRuleId": "@@aspect_bazel_lib+//lib/private:coreutils_toolchain.bzl%coreutils_platform_repo",
            "attributes": {
              "platform": "darwin_amd64",
              "version": "0.0.27"
            }
          },
          "coreutils_darwin_arm64": {
            "repoRuleId": "@@aspect_bazel_lib+//lib/private:coreutils_toolchain.bzl%coreutils_platform_repo",
            "attributes": {
              "platform": "darwin_arm64",
              "version": "0.0.27"
            }
          },
          "coreutils_linux_amd64": {
            "repoRuleId": "@@aspect_bazel_lib+//lib/private:coreutils_toolchain.bzl%coreutils_platform_repo",
            "attributes": {
              "platform": "linux_amd64",
              "version": "0.0.27"
            }
          },
          "coreutils_linux_arm64": {
            "repoRuleId": "@@aspect_bazel_lib+//lib/private:coreutils_toolchain.bzl%coreutils_platform_repo",
            "attributes": {
              "platform": "linux_arm64",
              "version": "0.0.27"
            }
          },
          "coreutils_windows_amd64": {
            "repoRuleId": "@@aspect_bazel_lib+//lib/private:coreutils_toolchain.bzl%coreutils_platform_repo",
            "attributes": {
              "platform": "windows_amd64",
              "version": "0.0.27"
            }
          },
          "coreutils_toolchains": {
            "repoRuleId": "@@aspect_bazel_lib+//lib/private:coreutils_toolchain.bzl%coreutils_toolchains_repo",
            "attributes": {
              "user_repository_name": "coreutils"
            }
          },
          "copy_to_directory_darwin_amd64": {
            "repoRuleId": "@@aspect_bazel_lib+//lib/private:copy_to_directory_toolchain.bzl%copy_to_directory_platform_repo",
            "attributes": {
              "platform": "darwin_amd64"
            }
          },
          "copy_to_directory_darwin_arm64": {
            "repoRuleId": "@@aspect_bazel_lib+//lib/private:copy_to_directory_toolchain.bzl%copy_to_directory_platform_repo",
            "attributes": {
              "platform": "darwin_arm64"
            }
          },
          "copy_to_directory_freebsd_amd64": {
            "repoRuleId": "@@aspect_bazel_lib+//lib/private:copy_to_directory_toolchain.bzl%copy_to_directory_platform_repo",
            "attributes": {
              "platform": "freebsd_amd64"
            }
          },
          "copy_to_directory_linux_amd64": {
            "repoRuleId": "@@aspect_bazel_lib+//lib/private:copy_to_directory_toolchain.bzl%copy_to_directory_platform_repo",
            "attributes": {
              "platform": "linux_amd64"
            }
          },
          "copy_to_directory_linux_arm64": {
            "repoRuleId": "@@aspect_bazel_lib+//lib/private:copy_to_directory_toolchain.bzl%copy_to_directory_platform_repo",
            "attributes": {
              "platform": "linux_arm64"
            }
          },
          "copy_to_directory_windows_amd64": {
            "repoRuleId": "@@aspect_bazel_lib+//lib/private:copy_to_directory_toolchain.bzl%copy_to_directory_platform_repo",
            "attributes": {
              "platform": "windows_amd64"
            }
          },
          "copy_to_directory_toolchains": {
            "repoRuleId": "@@aspect_bazel_lib+//lib/private:copy_to_directory_toolchain.bzl%copy_to_directory_toolchains_repo",
            "attributes": {
              "user_repository_name": "copy_to_directory"
            }
          },
          "zstd_darwin_amd64": {
            "repoRuleId": "@@aspect_bazel_lib+//lib/private:zstd_toolchain.bzl%zstd_binary_repo",
            "attributes": {
              "platform": "darwin_amd64"
            }
          },
          "zstd_darwin_arm64": {
            "repoRuleId": "@@aspect_bazel_lib+//lib/private:zstd_toolchain.bzl%zstd_binary_repo",
            "attributes": {
              "platform": "darwin_arm64"
            }
          },
          "zstd_linux_amd64": {
            "repoRuleId": "@@aspect_bazel_lib+//lib/private:zstd_toolchain.bzl%zstd_binary_repo",
            "attributes": {
              "platform": "linux_amd64"
            }
          },
          "zstd_linux_arm64": {
            "repoRuleId": "@@aspect_bazel_lib+//lib/private:zstd_toolchain.bzl%zstd_binary_repo",
            "attributes": {
              "platform": "linux_arm64"
            }
          },
          "zstd_toolchains": {
            "repoRuleId": "@@aspect_bazel_lib+//lib/private:zstd_toolchain.bzl%zstd_toolchains_repo",
            "attributes": {
              "user_repository_name": "zstd"
            }
          },
          "oci_crane_darwin_amd64": {
            "repoRuleId": "@@rules_oci+//oci:repositories.bzl%crane_repositories",
            "attributes": {
              "platform": "darwin_amd64",
              "crane_version": "v0.18.0"
            }
          },
          "oci_crane_darwin_arm64": {
            "repoRuleId": "@@rules_oci+//oci:repositories.bzl%crane_repositories",
            "attributes": {
              "platform": "darwin_arm64",
              "crane_version": "v0.18.0"
            }
          },
          "oci_crane_linux_arm64": {
            "repoRuleId": "@@rules_oci+//oci:repositories.bzl%crane_repositories",
            "attributes": {
              "platform": "linux_arm64",
              "crane_version": "v0.18.0"
            }
          },
          "oci_crane_linux_armv6": {
            "repoRuleId": "@@rules_oci+//oci:repositories.bzl%crane_repositories",
            "attributes": {
              "platform": "linux_armv6",
              "crane_version": "v0.18.0"
            }
          },
          "oci_crane_linux_i386": {
            "repoRuleId": "@@rules_oci+//oci:repositories.bzl%crane_repositories",
            "attributes": {
              "platform": "linux_i386",
              "crane_version": "v0.18.0"
            }
          },
          "oci_crane_linux_s390x": {
            "repoRuleId": "@@rules_oci+//oci:repositories.bzl%crane_repositories",
            "attributes": {
              "platform": "linux_s390x",
              "crane_version": "v0.18.0"
            }
          },
          "oci_crane_linux_amd64": {
            "repoRuleId": "@@rules_oci+//oci:repositories.bzl%crane_repositories",
            "attributes": {
              "platform": "linux_amd64",
              "crane_version": "v0.18.0"
            }
          },
          "oci_crane_windows_armv6": {
            "repoRuleId": "@@rules_oci+//oci:repositories.bzl%crane_repositories",
            "attributes": {
              "platform": "windows_armv6",
              "crane_version": "v0.18.0"
            }
          },
          "oci_crane_windows_amd64": {
            "repoRuleId": "@@rules_oci+//oci:repositories.bzl%crane_repositories",
            "attributes": {
              "platform": "windows_amd64",
              "crane_version": "v0.18.0"
            }
          },
          "oci_crane_toolchains": {
            "repoRuleId": "@@rules_oci+//oci/private:toolchains_repo.bzl%toolchains_repo",
            "attributes": {
              "toolchain_type": "@rules_oci//oci:crane_toolchain_type",
              "toolchain": "@oci_crane_{platform}//:crane_toolchain"
            }
          },
          "oci_regctl_darwin_amd64": {
            "repoRuleId": "@@rules_oci+//oci:repositories.bzl%regctl_repositories",
            "attributes": {
              "platform": "darwin_amd64"
            }
          },
          "oci_regctl_darwin_arm64": {
            "repoRuleId": "@@rules_oci+//oci:repositories.bzl%regctl_repositories",
            "attributes": {
              "platform": "darwin_arm64"
            }
          },
          "oci_regctl_linux_arm64": {
            "repoRuleId": "@@rules_oci+//oci:repositories.bzl%regctl_repositories",
            "attributes": {
              "platform": "linux_arm64"
            }
          },
          "oci_regctl_linux_s390x": {
            "repoRuleId": "@@rules_oci+//oci:repositories.bzl%regctl_repositories",
            "attributes": {
              "platform": "linux_s390x"
            }
          },
          "oci_regctl_linux_amd64": {
            "repoRuleId": "@@rules_oci+//oci:repositories.bzl%regctl_repositories",
            "attributes": {
              "platform": "linux_amd64"
            }
          },
          "oci_regctl_windows_amd64": {
            "repoRuleId": "@@rules_oci+//oci:repositories.bzl%regctl_repositories",
            "attributes": {
              "platform": "windows_amd64"
            }
          },
          "oci_regctl_toolchains": {
            "repoRuleId": "@@rules_oci+//oci/private:toolchains_repo.bzl%toolchains_repo",
            "attributes": {
              "toolchain_type": "@rules_oci//oci:regctl_toolchain_type",
              "toolchain": "@oci_regctl_{platform}//:regctl_toolchain"
            }
          }
        },
        "moduleExtensionMetadata": {
          "explicitRootModuleDirectDeps": [
            "distroless_base",
            "distroless_base_linux_amd64",
            "distroless_base_linux_arm_v7",
            "distroless_base_linux_arm64_v8",
            "distroless_base_linux_ppc64le",
            "distroless_base_linux_s390x"
          ],
          "explicitRootModuleDirectDevDeps": [],
          "useAllRepos": "NO",
          "reproducible": false
        },
        "recordedRepoMappingEntries": [
          [
            "aspect_bazel_lib+",
            "bazel_tools",
            "bazel_tools"
          ],
          [
            "bazel_features+",
            "bazel_tools",
            "bazel_tools"
          ],
          [
            "rules_oci+",
            "aspect_bazel_lib",
            "aspect_bazel_lib+"
          ],
          [
            "rules_oci+",
            "bazel_features",
            "bazel_features+"
          ],
          [
            "rules_oci+",
            "bazel_skylib",
            "bazel_skylib+"
          ]
        ]
      }
    },
    "@@rules_proto_grpc_buf+//:module_extensions.bzl%download_plugins": {
      "general": {
        "bzlTransitiveDigest": "/YUiv0Q3b+XWgAIG+YGDFWrPjIclkCLlAVnkMl8162M=",
        "usagesDigest": "J6tNS81hPRUbD3+6Wyk+edVbeKQ45Mx+L8YaIcu6haU=",
        "recordedFileInputs": {},
        "recordedDirentsInputs": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "buf_breaking_plugin_darwin_arm64": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_file",
            "attributes": {
              "executable": true,
              "sha256": "f244140c3459782b65bd2bd29a12972f116ddd2ed0c1d2a189cdd1b2c0aab1ba",
              "url": "https://github.com/bufbuild/buf/releases/download/v1.34.0/protoc-gen-buf-breaking-Darwin-Arm64"
            }
          },
          "buf_breaking_plugin_darwin_x86_64": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_file",
            "attributes": {
              "executable": true,
              "sha256": "03ccd305ebd1f9bd8af67084628797bbaf3aa6ac33048b4e4d329efc8d7bae7e",
              "url": "https://github.com/bufbuild/buf/releases/download/v1.34.0/protoc-gen-buf-breaking-Darwin-X86_64"
            }
          },
          "buf_breaking_plugin_linux_arm64": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_file",
            "attributes": {
              "executable": true,
              "sha256": "e317d99943f5f363c82fb31b33b845d8a01ffcbebe0e94e072fb3b8c0699f3f9",
              "url": "https://github.com/bufbuild/buf/releases/download/v1.34.0/protoc-gen-buf-breaking-Linux-Arm64"
            }
          },
          "buf_breaking_plugin_linux_x86_64": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_file",
            "attributes": {
              "executable": true,
              "sha256": "a1b754fb589f4362bc57b605645c29f7a3b8aca442c7ddca4c15c98f71fecbf6",
              "url": "https://github.com/bufbuild/buf/releases/download/v1.34.0/protoc-gen-buf-breaking-Linux-X86_64"
            }
          },
          "buf_breaking_plugin_windows_arm64": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_file",
            "attributes": {
              "executable": true,
              "sha256": "5f6ad60fb8cf86e944ee524d66ab5370459fd95e0f3c01e312d80a123be98ae0",
              "url": "https://github.com/bufbuild/buf/releases/download/v1.34.0/protoc-gen-buf-breaking-Windows-Arm64.exe"
            }
          },
          "buf_breaking_plugin_windows_x86_64": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_file",
            "attributes": {
              "executable": true,
              "sha256": "9d8845eb234515f62efb362e6d7d9d77e6eb12f6a97679754709de3f31968130",
              "url": "https://github.com/bufbuild/buf/releases/download/v1.34.0/protoc-gen-buf-breaking-Windows-X86_64.exe"
            }
          },
          "buf_lint_plugin_darwin_arm64": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_file",
            "attributes": {
              "executable": true,
              "sha256": "dea822195a4b092b84cfd531ba6b95923a131f2c4537b7ed29f9905619153060",
              "url": "https://github.com/bufbuild/buf/releases/download/v1.34.0/protoc-gen-buf-lint-darwin-arm64"
            }
          },
          "buf_lint_plugin_darwin_x86_64": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_file",
            "attributes": {
              "executable": true,
              "sha256": "45b3faeb82948a4876ec9ffa1f44a1ffe67845ce5d2959210c4e7d74a24b9e14",
              "url": "https://github.com/bufbuild/buf/releases/download/v1.34.0/protoc-gen-buf-lint-darwin-x86_64"
            }
          },
          "buf_lint_plugin_linux_arm64": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_file",
            "attributes": {
              "executable": true,
              "sha256": "8a7a6fc1b95780f61c92136748fb95a2ccebce56e57ed4a0ca22acb96638c9aa",
              "url": "https://github.com/bufbuild/buf/releases/download/v1.34.0/protoc-gen-buf-lint-linux-arm64"
            }
          },
          "buf_lint_plugin_linux_x86_64": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_file",
            "attributes": {
              "executable": true,
              "sha256": "af3140ab9872dc7cb0fc14f7b5577d5433d17c1c07a8ed990be1d24222877d32",
              "url": "https://github.com/bufbuild/buf/releases/download/v1.34.0/protoc-gen-buf-lint-linux-x86_64"
            }
          },
          "buf_lint_plugin_windows_arm64": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_file",
            "attributes": {
              "executable": true,
              "sha256": "1681e7ab55fbf1b6b1ef54e1def9904e30dd63d405a803a9a1debdb118b66e75",
              "url": "https://github.com/bufbuild/buf/releases/download/v1.34.0/protoc-gen-buf-lint-windows-arm64.exe"
            }
          },
          "buf_lint_plugin_windows_x86_64": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_file",
            "attributes": {
              "executable": true,
              "sha256": "c23ba1f7450abb64dc91652e9f67a75fe6189dc63b2e02d56eb4f9b44ddf6bc2",
              "url": "https://github.com/bufbuild/buf/releases/download/v1.34.0/protoc-gen-buf-lint-windows-x86_64.exe"
            }
          }
        },
        "moduleExtensionMetadata": {
          "useAllRepos": "REGULAR",
          "reproducible": false
        },
        "recordedRepoMappingEntries": [
          [
            "rules_proto_grpc_buf+",
            "bazel_tools",
            "bazel_tools"
          ]
        ]
      }
    },
    "@@rules_proto_grpc_doc+//:module_extensions.bzl%download_plugins": {
      "general": {
        "bzlTransitiveDigest": "aK8ORFfsn+ua7jzVUkvOAkLxPs1sfmdxdBQfWM98t0o=",
        "usagesDigest": "qaBMwlGp1lyH/4O0oIXGidpWf/NLBwzLzMqaOXnVP6s=",
        "recordedFileInputs": {},
        "recordedDirentsInputs": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "protoc_gen_doc_plugins_darwin_arm64": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "sha256": "6e8c737d9a67a6a873a3f1d37ed8bb2a0a9996f6dcf6701aa1048c7bd798aaf9",
              "url": "https://github.com/pseudomuto/protoc-gen-doc/releases/download/v1.5.1/protoc-gen-doc_1.5.1_darwin_arm64.tar.gz",
              "build_file_content": "exports_files(glob([\"protoc-gen-doc*\"]))"
            }
          },
          "protoc_gen_doc_plugins_darwin_x86_64": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "sha256": "f429e5a5ddd886bfb68265f2f92c1c6a509780b7adcaf7a8b3be943f28e144ba",
              "url": "https://github.com/pseudomuto/protoc-gen-doc/releases/download/v1.5.1/protoc-gen-doc_1.5.1_darwin_amd64.tar.gz",
              "build_file_content": "exports_files(glob([\"protoc-gen-doc*\"]))"
            }
          },
          "protoc_gen_doc_plugins_linux_arm64": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "sha256": "172e6a191daced8eb31ebcd90d4523a1affa6d07900a89b548421823dda796fe",
              "url": "https://github.com/pseudomuto/protoc-gen-doc/releases/download/v1.5.1/protoc-gen-doc_1.5.1_linux_arm64.tar.gz",
              "build_file_content": "exports_files(glob([\"protoc-gen-doc*\"]))"
            }
          },
          "protoc_gen_doc_plugins_linux_x86_64": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "sha256": "47cd72b07e6dab3408d686a65d37d3a6ab616da7d8b564b2bd2a2963a72b72fd",
              "url": "https://github.com/pseudomuto/protoc-gen-doc/releases/download/v1.5.1/protoc-gen-doc_1.5.1_linux_amd64.tar.gz",
              "build_file_content": "exports_files(glob([\"protoc-gen-doc*\"]))"
            }
          },
          "protoc_gen_doc_plugins_windows_arm64": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "sha256": "bf8bc651c17e64bfec663192e660655c2bcc415f6dff9e88201d8b07fb23d493",
              "url": "https://github.com/pseudomuto/protoc-gen-doc/releases/download/v1.5.1/protoc-gen-doc_1.5.1_windows_arm64.tar.gz",
              "build_file_content": "exports_files(glob([\"protoc-gen-doc*\"]))"
            }
          },
          "protoc_gen_doc_plugins_windows_x86_64": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "sha256": "8acf0bf64eda29183b4c6745c3c6a12562fd9a8ab08d61788cf56e6659c66b3b",
              "url": "https://github.com/pseudomuto/protoc-gen-doc/releases/download/v1.5.1/protoc-gen-doc_1.5.1_windows_amd64.tar.gz",
              "build_file_content": "exports_files(glob([\"protoc-gen-doc*\"]))"
            }
          }
        },
        "moduleExtensionMetadata": {
          "useAllRepos": "REGULAR",
          "reproducible": false
        },
        "recordedRepoMappingEntries": [
          [
            "rules_proto_grpc_doc+",
            "bazel_tools",
            "bazel_tools"
          ]
        ]
      }
    },
    "@@rules_python+//python/extensions:pip.bzl%pip": {
      "general": {
        "bzlTransitiveDigest": "3uITpaYo9YHOWD287yHNGWSmzNvRivTEuCwy0+VmCr8=",
        "usagesDigest": "n9jpMMhlUeIqiP6WDEMMzBeS0105RRWD8AVBgnTOvgI=",
        "recordedFileInputs": {
          "@@protobuf+//python/requirements.txt": "983be60d3cec4b319dcab6d48aeb3f5b2f7c3350f26b3a9e97486c37967c73c5",
          "@@rules_fuzzing+//fuzzing/requirements.txt": "ab04664be026b632a0d2a2446c4f65982b7654f5b6851d2f9d399a19b7242a5b",
          "@@rules_python+//tools/publish/requirements_darwin.txt": "095d4a4f3d639dce831cd493367631cd51b53665292ab20194bac2c0c6458fa8",
          "@@rules_python+//tools/publish/requirements_linux.txt": "d576e0d8542df61396a9b38deeaa183c24135ed5e8e73bb9622f298f2671811e",
          "@@rules_python+//tools/publish/requirements_windows.txt": "d18538a3982beab378fd5687f4db33162ee1ece69801f9a451661b1b64286b76"
        },
        "recordedDirentsInputs": {},
        "envVariables": {
          "RULES_PYTHON_REPO_DEBUG": null,
          "RULES_PYTHON_REPO_DEBUG_VERBOSITY": null
        },
        "generatedRepoSpecs": {
          "pip_deps_310_numpy": {
            "repoRuleId": "@@rules_python+//python/private/pypi:whl_library.bzl%whl_library",
            "attributes": {
              "dep_template": "@pip_deps//{name}:{target}",
              "python_interpreter_target": "@@rules_python++python+python_3_10_host//:python",
              "repo": "pip_deps_310",
              "requirement": "numpy<=1.26.1"
            }
          },
          "pip_deps_310_setuptools": {
            "repoRuleId": "@@rules_python+//python/private/pypi:whl_library.bzl%whl_library",
            "attributes": {
              "dep_template": "@pip_deps//{name}:{target}",
              "python_interpreter_target": "@@rules_python++python+python_3_10_host//:python",
              "repo": "pip_deps_310",
              "requirement": "setuptools<=70.3.0"
            }
          },
          "pip_deps_311_numpy": {
            "repoRuleId": "@@rules_python+//python/private/pypi:whl_library.bzl%whl_library",
            "attributes": {
              "dep_template": "@pip_deps//{name}:{target}",
              "python_interpreter_target": "@@rules_python++python+python_3_11_host//:python",
              "repo": "pip_deps_311",
              "requirement": "numpy<=1.26.1"
            }
          },
          "pip_deps_311_setuptools": {
            "repoRuleId": "@@rules_python+//python/private/pypi:whl_library.bzl%whl_library",
            "attributes": {
              "dep_template": "@pip_deps//{name}:{target}",
              "python_interpreter_target": "@@rules_python++python+python_3_11_host//:python",
              "repo": "pip_deps_311",
              "requirement": "setuptools<=70.3.0"
            }
          },
          "pip_deps_312_numpy": {
            "repoRuleId": "@@rules_python+//python/private/pypi:whl_library.bzl%whl_library",
            "attributes": {
              "dep_template": "@pip_deps//{name}:{target}",
              "python_interpreter_target": "@@rules_python++python+python_3_12_host//:python",
              "repo": "pip_deps_312",
              "requirement": "numpy<=1.26.1"
            }
          },
          "pip_deps_312_setuptools": {
            "repoRuleId": "@@rules_python+//python/private/pypi:whl_library.bzl%whl_library",
            "attributes": {
              "dep_template": "@pip_deps//{name}:{target}",
              "python_interpreter_target": "@@rules_python++python+python_3_12_host//:python",
              "repo": "pip_deps_312",
              "requirement": "setuptools<=70.3.0"
            }
          },
          "pip_deps_38_numpy": {
            "repoRuleId": "@@rules_python+//python/private/pypi:whl_library.bzl%whl_library",
            "attributes": {
              "dep_template": "@pip_deps//{name}:{target}",
              "python_interpreter_target": "@@rules_python++python+python_3_8_host//:python",
              "repo": "pip_deps_38",
              "requirement": "numpy<=1.26.1"
            }
          },
          "pip_deps_38_setuptools": {
            "repoRuleId": "@@rules_python+//python/private/pypi:whl_library.bzl%whl_library",
            "attributes": {
              "dep_template": "@pip_deps//{name}:{target}",
              "python_interpreter_target": "@@rules_python++python+python_3_8_host//:python",
              "repo": "pip_deps_38",
              "requirement": "setuptools<=70.3.0"
            }
          },
          "pip_deps_39_numpy": {
            "repoRuleId": "@@rules_python+//python/private/pypi:whl_library.bzl%whl_library",
            "attributes": {
              "dep_template": "@pip_deps//{name}:{target}",
              "python_interpreter_target": "@@rules_python++python+python_3_9_host//:python",
              "repo": "pip_deps_39",
              "requirement": "numpy<=1.26.1"
            }
          },
          "pip_deps_39_setuptools": {
            "repoRuleId": "@@rules_python+//python/private/pypi:whl_library.bzl%whl_library",
            "attributes": {
              "dep_template": "@pip_deps//{name}:{target}",
              "python_interpreter_target": "@@rules_python++python+python_3_9_host//:python",
              "repo": "pip_deps_39",
              "requirement": "setuptools<=70.3.0"
            }
          },
          "rules_fuzzing_py_deps_310_absl_py": {
            "repoRuleId": "@@rules_python+//python/private/pypi:whl_library.bzl%whl_library",
            "attributes": {
              "dep_template": "@rules_fuzzing_py_deps//{name}:{target}",
              "extra_pip_args": [
                "--require-hashes"
              ],
              "python_interpreter_target": "@@rules_python++python+python_3_10_host//:python",
              "repo": "rules_fuzzing_py_deps_310",
              "requirement": "absl-py==2.0.0 --hash=sha256:9a28abb62774ae4e8edbe2dd4c49ffcd45a6a848952a5eccc6a49f3f0fc1e2f3"
            }
          },
          "rules_fuzzing_py_deps_310_six": {
            "repoRuleId": "@@rules_python+//python/private/pypi:whl_library.bzl%whl_library",
            "attributes": {
              "dep_template": "@rules_fuzzing_py_deps//{name}:{target}",
              "extra_pip_args": [
                "--require-hashes"
              ],
              "python_interpreter_target": "@@rules_python++python+python_3_10_host//:python",
              "repo": "rules_fuzzing_py_deps_310",
              "requirement": "six==1.16.0 --hash=sha256:8abb2f1d86890a2dfb989f9a77cfcfd3e47c2a354b01111771326f8aa26e0254"
            }
          },
          "rules_fuzzing_py_deps_311_absl_py": {
            "repoRuleId": "@@rules_python+//python/private/pypi:whl_library.bzl%whl_library",
            "attributes": {
              "dep_template": "@rules_fuzzing_py_deps//{name}:{target}",
              "extra_pip_args": [
                "--require-hashes"
              ],
              "python_interpreter_target": "@@rules_python++python+python_3_11_host//:python",
              "repo": "rules_fuzzing_py_deps_311",
              "requirement": "absl-py==2.0.0 --hash=sha256:9a28abb62774ae4e8edbe2dd4c49ffcd45a6a848952a5eccc6a49f3f0fc1e2f3"
            }
          },
          "rules_fuzzing_py_deps_311_six": {
            "repoRuleId": "@@rules_python+//python/private/pypi:whl_library.bzl%whl_library",
            "attributes": {
              "dep_template": "@rules_fuzzing_py_deps//{name}:{target}",
              "extra_pip_args": [
                "--require-hashes"
              ],
              "python_interpreter_target": "@@rules_python++python+python_3_11_host//:python",
              "repo": "rules_fuzzing_py_deps_311",
              "requirement": "six==1.16.0 --hash=sha256:8abb2f1d86890a2dfb989f9a77cfcfd3e47c2a354b01111771326f8aa26e0254"
            }
          },
          "rules_fuzzing_py_deps_312_absl_py": {
            "repoRuleId": "@@rules_python+//python/private/pypi:whl_library.bzl%whl_library",
            "attributes": {
              "dep_template": "@rules_fuzzing_py_deps//{name}:{target}",
              "extra_pip_args": [
                "--require-hashes"
              ],
              "python_interpreter_target": "@@rules_python++python+python_3_12_host//:python",
              "repo": "rules_fuzzing_py_deps_312",
              "requirement": "absl-py==2.0.0 --hash=sha256:9a28abb62774ae4e8edbe2dd4c49ffcd45a6a848952a5eccc6a49f3f0fc1e2f3"
            }
          },
          "rules_fuzzing_py_deps_312_six": {
            "repoRuleId": "@@rules_python+//python/private/pypi:whl_library.bzl%whl_library",
            "attributes": {
              "dep_template": "@rules_fuzzing_py_deps//{name}:{target}",
              "extra_pip_args": [
                "--require-hashes"
              ],
              "python_interpreter_target": "@@rules_python++python+python_3_12_host//:python",
              "repo": "rules_fuzzing_py_deps_312",
              "requirement": "six==1.16.0 --hash=sha256:8abb2f1d86890a2dfb989f9a77cfcfd3e47c2a354b01111771326f8aa26e0254"
            }
          },
          "rules_fuzzing_py_deps_38_absl_py": {
            "repoRuleId": "@@rules_python+//python/private/pypi:whl_library.bzl%whl_library",
            "attributes": {
              "dep_template": "@rules_fuzzing_py_deps//{name}:{target}",
              "extra_pip_args": [
                "--require-hashes"
              ],
              "python_interpreter_target": "@@rules_python++python+python_3_8_host//:python",
              "repo": "rules_fuzzing_py_deps_38",
              "requirement": "absl-py==2.0.0 --hash=sha256:9a28abb62774ae4e8edbe2dd4c49ffcd45a6a848952a5eccc6a49f3f0fc1e2f3"
            }
          },
          "rules_fuzzing_py_deps_38_six": {
            "repoRuleId": "@@rules_python+//python/private/pypi:whl_library.bzl%whl_library",
            "attributes": {
              "dep_template": "@rules_fuzzing_py_deps//{name}:{target}",
              "extra_pip_args": [
                "--require-hashes"
              ],
              "python_interpreter_target": "@@rules_python++python+python_3_8_host//:python",
              "repo": "rules_fuzzing_py_deps_38",
              "requirement": "six==1.16.0 --hash=sha256:8abb2f1d86890a2dfb989f9a77cfcfd3e47c2a354b01111771326f8aa26e0254"
            }
          },
          "rules_fuzzing_py_deps_39_absl_py": {
            "repoRuleId": "@@rules_python+//python/private/pypi:whl_library.bzl%whl_library",
            "attributes": {
              "dep_template": "@rules_fuzzing_py_deps//{name}:{target}",
              "extra_pip_args": [
                "--require-hashes"
              ],
              "python_interpreter_target": "@@rules_python++python+python_3_9_host//:python",
              "repo": "rules_fuzzing_py_deps_39",
              "requirement": "absl-py==2.0.0 --hash=sha256:9a28abb62774ae4e8edbe2dd4c49ffcd45a6a848952a5eccc6a49f3f0fc1e2f3"
            }
          },
          "rules_fuzzing_py_deps_39_six": {
            "repoRuleId": "@@rules_python+//python/private/pypi:whl_library.bzl%whl_library",
            "attributes": {
              "dep_template": "@rules_fuzzing_py_deps//{name}:{target}",
              "extra_pip_args": [
                "--require-hashes"
              ],
              "python_interpreter_target": "@@rules_python++python+python_3_9_host//:python",
              "repo": "rules_fuzzing_py_deps_39",
              "requirement": "six==1.16.0 --hash=sha256:8abb2f1d86890a2dfb989f9a77cfcfd3e47c2a354b01111771326f8aa26e0254"
            }
          },
          "rules_python_publish_deps_311_backports_tarfile": {
            "repoRuleId": "@@rules_python+//python/private/pypi:whl_library.bzl%whl_library",
            "attributes": {
              "dep_template": "@rules_python_publish_deps//{name}:{target}",
              "extra_pip_args": [
                "--index-url",
                "https://pypi.org/simple"
              ],
              "python_interpreter_target": "@@rules_python++python+python_3_11_host//:python",
              "repo": "rules_python_publish_deps_311",
              "requirement": "backports-tarfile==1.2.0 --hash=sha256:77e284d754527b01fb1e6fa8a1afe577858ebe4e9dad8919e34c862cb399bc34 --hash=sha256:d75e02c268746e1b8144c278978b6e98e85de6ad16f8e4b0844a154557eca991"
            }
          },
          "rules_python_publish_deps_311_certifi": {
            "repoRuleId": "@@rules_python+//python/private/pypi:whl_library.bzl%whl_library",
            "attributes": {
              "dep_template": "@rules_python_publish_deps//{name}:{target}",
              "extra_pip_args": [
                "--index-url",
                "https://pypi.org/simple"
              ],
              "python_interpreter_target": "@@rules_python++python+python_3_11_host//:python",
              "repo": "rules_python_publish_deps_311",
              "requirement": "certifi==2024.8.30 --hash=sha256:922820b53db7a7257ffbda3f597266d435245903d80737e34f8a45ff3e3230d8 --hash=sha256:bec941d2aa8195e248a60b31ff9f0558284cf01a52591ceda73ea9afffd69fd9"
            }
          },
          "rules_python_publish_deps_311_cffi": {
            "repoRuleId": "@@rules_python+//python/private/pypi:whl_library.bzl%whl_library",
            "attributes": {
              "dep_template": "@rules_python_publish_deps//{name}:{target}",
              "extra_pip_args": [
                "--index-url",
                "https://pypi.org/simple"
              ],
              "python_interpreter_target": "@@rules_python++python+python_3_11_host//:python",
              "repo": "rules_python_publish_deps_311",
              "requirement": "cffi==1.17.1 --hash=sha256:045d61c734659cc045141be4bae381a41d89b741f795af1dd018bfb532fd0df8 --hash=sha256:0984a4925a435b1da406122d4d7968dd861c1385afe3b45ba82b750f229811e2 --hash=sha256:0e2b1fac190ae3ebfe37b979cc1ce69c81f4e4fe5746bb401dca63a9062cdaf1 --hash=sha256:0f048dcf80db46f0098ccac01132761580d28e28bc0f78ae0d58048063317e15 --hash=sha256:1257bdabf294dceb59f5e70c64a3e2f462c30c7ad68092d01bbbfb1c16b1ba36 --hash=sha256:1c39c6016c32bc48dd54561950ebd6836e1670f2ae46128f67cf49e789c52824 --hash=sha256:1d599671f396c4723d016dbddb72fe8e0397082b0a77a4fab8028923bec050e8 --hash=sha256:28b16024becceed8c6dfbc75629e27788d8a3f9030691a1dbf9821a128b22c36 --hash=sha256:2bb1a08b8008b281856e5971307cc386a8e9c5b625ac297e853d36da6efe9c17 --hash=sha256:30c5e0cb5ae493c04c8b42916e52ca38079f1b235c2f8ae5f4527b963c401caf --hash=sha256:31000ec67d4221a71bd3f67df918b1f88f676f1c3b535a7eb473255fdc0b83fc --hash=sha256:386c8bf53c502fff58903061338ce4f4950cbdcb23e2902d86c0f722b786bbe3 --hash=sha256:3edc8d958eb099c634dace3c7e16560ae474aa3803a5df240542b305d14e14ed --hash=sha256:45398b671ac6d70e67da8e4224a065cec6a93541bb7aebe1b198a61b58c7b702 --hash=sha256:46bf43160c1a35f7ec506d254e5c890f3c03648a4dbac12d624e4490a7046cd1 --hash=sha256:4ceb10419a9adf4460ea14cfd6bc43d08701f0835e979bf821052f1805850fe8 --hash=sha256:51392eae71afec0d0c8fb1a53b204dbb3bcabcb3c9b807eedf3e1e6ccf2de903 --hash=sha256:5da5719280082ac6bd9aa7becb3938dc9f9cbd57fac7d2871717b1feb0902ab6 --hash=sha256:610faea79c43e44c71e1ec53a554553fa22321b65fae24889706c0a84d4ad86d --hash=sha256:636062ea65bd0195bc012fea9321aca499c0504409f413dc88af450b57ffd03b --hash=sha256:6883e737d7d9e4899a8a695e00ec36bd4e5e4f18fabe0aca0efe0a4b44cdb13e --hash=sha256:6b8b4a92e1c65048ff98cfe1f735ef8f1ceb72e3d5f0c25fdb12087a23da22be --hash=sha256:6f17be4345073b0a7b8ea599688f692ac3ef23ce28e5df79c04de519dbc4912c --hash=sha256:706510fe141c86a69c8ddc029c7910003a17353970cff3b904ff0686a5927683 --hash=sha256:72e72408cad3d5419375fc87d289076ee319835bdfa2caad331e377589aebba9 --hash=sha256:733e99bc2df47476e3848417c5a4540522f234dfd4ef3ab7fafdf555b082ec0c --hash=sha256:7596d6620d3fa590f677e9ee430df2958d2d6d6de2feeae5b20e82c00b76fbf8 --hash=sha256:78122be759c3f8a014ce010908ae03364d00a1f81ab5c7f4a7a5120607ea56e1 --hash=sha256:805b4371bf7197c329fcb3ead37e710d1bca9da5d583f5073b799d5c5bd1eee4 --hash=sha256:85a950a4ac9c359340d5963966e3e0a94a676bd6245a4b55bc43949eee26a655 --hash=sha256:8f2cdc858323644ab277e9bb925ad72ae0e67f69e804f4898c070998d50b1a67 --hash=sha256:9755e4345d1ec879e3849e62222a18c7174d65a6a92d5b346b1863912168b595 --hash=sha256:98e3969bcff97cae1b2def8ba499ea3d6f31ddfdb7635374834cf89a1a08ecf0 --hash=sha256:a08d7e755f8ed21095a310a693525137cfe756ce62d066e53f502a83dc550f65 --hash=sha256:a1ed2dd2972641495a3ec98445e09766f077aee98a1c896dcb4ad0d303628e41 --hash=sha256:a24ed04c8ffd54b0729c07cee15a81d964e6fee0e3d4d342a27b020d22959dc6 --hash=sha256:a45e3c6913c5b87b3ff120dcdc03f6131fa0065027d0ed7ee6190736a74cd401 --hash=sha256:a9b15d491f3ad5d692e11f6b71f7857e7835eb677955c00cc0aefcd0669adaf6 --hash=sha256:ad9413ccdeda48c5afdae7e4fa2192157e991ff761e7ab8fdd8926f40b160cc3 --hash=sha256:b2ab587605f4ba0bf81dc0cb08a41bd1c0a5906bd59243d56bad7668a6fc6c16 --hash=sha256:b62ce867176a75d03a665bad002af8e6d54644fad99a3c70905c543130e39d93 --hash=sha256:c03e868a0b3bc35839ba98e74211ed2b05d2119be4e8a0f224fba9384f1fe02e --hash=sha256:c59d6e989d07460165cc5ad3c61f9fd8f1b4796eacbd81cee78957842b834af4 --hash=sha256:c7eac2ef9b63c79431bc4b25f1cd649d7f061a28808cbc6c47b534bd789ef964 --hash=sha256:c9c3d058ebabb74db66e431095118094d06abf53284d9c81f27300d0e0d8bc7c --hash=sha256:ca74b8dbe6e8e8263c0ffd60277de77dcee6c837a3d0881d8c1ead7268c9e576 --hash=sha256:caaf0640ef5f5517f49bc275eca1406b0ffa6aa184892812030f04c2abf589a0 --hash=sha256:cdf5ce3acdfd1661132f2a9c19cac174758dc2352bfe37d98aa7512c6b7178b3 --hash=sha256:d016c76bdd850f3c626af19b0542c9677ba156e4ee4fccfdd7848803533ef662 --hash=sha256:d01b12eeeb4427d3110de311e1774046ad344f5b1a7403101878976ecd7a10f3 --hash=sha256:d63afe322132c194cf832bfec0dc69a99fb9bb6bbd550f161a49e9e855cc78ff --hash=sha256:da95af8214998d77a98cc14e3a3bd00aa191526343078b530ceb0bd710fb48a5 --hash=sha256:dd398dbc6773384a17fe0d3e7eeb8d1a21c2200473ee6806bb5e6a8e62bb73dd --hash=sha256:de2ea4b5833625383e464549fec1bc395c1bdeeb5f25c4a3a82b5a8c756ec22f --hash=sha256:de55b766c7aa2e2a3092c51e0483d700341182f08e67c63630d5b6f200bb28e5 --hash=sha256:df8b1c11f177bc2313ec4b2d46baec87a5f3e71fc8b45dab2ee7cae86d9aba14 --hash=sha256:e03eab0a8677fa80d646b5ddece1cbeaf556c313dcfac435ba11f107ba117b5d --hash=sha256:e221cf152cff04059d011ee126477f0d9588303eb57e88923578ace7baad17f9 --hash=sha256:e31ae45bc2e29f6b2abd0de1cc3b9d5205aa847cafaecb8af1476a609a2f6eb7 --hash=sha256:edae79245293e15384b51f88b00613ba9f7198016a5948b5dddf4917d4d26382 --hash=sha256:f1e22e8c4419538cb197e4dd60acc919d7696e5ef98ee4da4e01d3f8cfa4cc5a --hash=sha256:f3a2b4222ce6b60e2e8b337bb9596923045681d71e5a082783484d845390938e --hash=sha256:f6a16c31041f09ead72d69f583767292f750d24913dadacf5756b966aacb3f1a --hash=sha256:f75c7ab1f9e4aca5414ed4d8e5c0e303a34f4421f8a0d47a4d019ceff0ab6af4 --hash=sha256:f79fc4fc25f1c8698ff97788206bb3c2598949bfe0fef03d299eb1b5356ada99 --hash=sha256:f7f5baafcc48261359e14bcd6d9bff6d4b28d9103847c9e136694cb0501aef87 --hash=sha256:fc48c783f9c87e60831201f2cce7f3b2e4846bf4d8728eabe54d60700b318a0b"
            }
          },
          "rules_python_publish_deps_311_charset_normalizer": {
            "repoRuleId": "@@rules_python+//python/private/pypi:whl_library.bzl%whl_library",
            "attributes": {
              "dep_template": "@rules_python_publish_deps//{name}:{target}",
              "extra_pip_args": [
                "--index-url",
                "https://pypi.org/simple"
              ],
              "python_interpreter_target": "@@rules_python++python+python_3_11_host//:python",
              "repo": "rules_python_publish_deps_311",
              "requirement": "charset-normalizer==3.4.0 --hash=sha256:0099d79bdfcf5c1f0c2c72f91516702ebf8b0b8ddd8905f97a8aecf49712c621 --hash=sha256:0713f3adb9d03d49d365b70b84775d0a0d18e4ab08d12bc46baa6132ba78aaf6 --hash=sha256:07afec21bbbbf8a5cc3651aa96b980afe2526e7f048fdfb7f1014d84acc8b6d8 --hash=sha256:0b309d1747110feb25d7ed6b01afdec269c647d382c857ef4663bbe6ad95a912 --hash=sha256:0d99dd8ff461990f12d6e42c7347fd9ab2532fb70e9621ba520f9e8637161d7c --hash=sha256:0de7b687289d3c1b3e8660d0741874abe7888100efe14bd0f9fd7141bcbda92b --hash=sha256:1110e22af8ca26b90bd6364fe4c763329b0ebf1ee213ba32b68c73de5752323d --hash=sha256:130272c698667a982a5d0e626851ceff662565379baf0ff2cc58067b81d4f11d --hash=sha256:136815f06a3ae311fae551c3df1f998a1ebd01ddd424aa5603a4336997629e95 --hash=sha256:14215b71a762336254351b00ec720a8e85cada43b987da5a042e4ce3e82bd68e --hash=sha256:1db4e7fefefd0f548d73e2e2e041f9df5c59e178b4c72fbac4cc6f535cfb1565 --hash=sha256:1ffd9493de4c922f2a38c2bf62b831dcec90ac673ed1ca182fe11b4d8e9f2a64 --hash=sha256:2006769bd1640bdf4d5641c69a3d63b71b81445473cac5ded39740a226fa88ab --hash=sha256:20587d20f557fe189b7947d8e7ec5afa110ccf72a3128d61a2a387c3313f46be --hash=sha256:223217c3d4f82c3ac5e29032b3f1c2eb0fb591b72161f86d93f5719079dae93e --hash=sha256:27623ba66c183eca01bf9ff833875b459cad267aeeb044477fedac35e19ba907 --hash=sha256:285e96d9d53422efc0d7a17c60e59f37fbf3dfa942073f666db4ac71e8d726d0 --hash=sha256:2de62e8801ddfff069cd5c504ce3bc9672b23266597d4e4f50eda28846c322f2 --hash=sha256:2f6c34da58ea9c1a9515621f4d9ac379871a8f21168ba1b5e09d74250de5ad62 --hash=sha256:309a7de0a0ff3040acaebb35ec45d18db4b28232f21998851cfa709eeff49d62 --hash=sha256:35c404d74c2926d0287fbd63ed5d27eb911eb9e4a3bb2c6d294f3cfd4a9e0c23 --hash=sha256:3710a9751938947e6327ea9f3ea6332a09bf0ba0c09cae9cb1f250bd1f1549bc --hash=sha256:3d59d125ffbd6d552765510e3f31ed75ebac2c7470c7274195b9161a32350284 --hash=sha256:40d3ff7fc90b98c637bda91c89d51264a3dcf210cade3a2c6f838c7268d7a4ca --hash=sha256:425c5f215d0eecee9a56cdb703203dda90423247421bf0d67125add85d0c4455 --hash=sha256:43193c5cda5d612f247172016c4bb71251c784d7a4d9314677186a838ad34858 --hash=sha256:44aeb140295a2f0659e113b31cfe92c9061622cadbc9e2a2f7b8ef6b1e29ef4b --hash=sha256:47334db71978b23ebcf3c0f9f5ee98b8d65992b65c9c4f2d34c2eaf5bcaf0594 --hash=sha256:4796efc4faf6b53a18e3d46343535caed491776a22af773f366534056c4e1fbc --hash=sha256:4a51b48f42d9358460b78725283f04bddaf44a9358197b889657deba38f329db --hash=sha256:4b67fdab07fdd3c10bb21edab3cbfe8cf5696f453afce75d815d9d7223fbe88b --hash=sha256:4ec9dd88a5b71abfc74e9df5ebe7921c35cbb3b641181a531ca65cdb5e8e4dea --hash=sha256:4f9fc98dad6c2eaa32fc3af1417d95b5e3d08aff968df0cd320066def971f9a6 --hash=sha256:54b6a92d009cbe2fb11054ba694bc9e284dad30a26757b1e372a1fdddaf21920 --hash=sha256:55f56e2ebd4e3bc50442fbc0888c9d8c94e4e06a933804e2af3e89e2f9c1c749 --hash=sha256:5726cf76c982532c1863fb64d8c6dd0e4c90b6ece9feb06c9f202417a31f7dd7 --hash=sha256:5d447056e2ca60382d460a604b6302d8db69476fd2015c81e7c35417cfabe4cd --hash=sha256:5ed2e36c3e9b4f21dd9422f6893dec0abf2cca553af509b10cd630f878d3eb99 --hash=sha256:5ff2ed8194587faf56555927b3aa10e6fb69d931e33953943bc4f837dfee2242 --hash=sha256:62f60aebecfc7f4b82e3f639a7d1433a20ec32824db2199a11ad4f5e146ef5ee --hash=sha256:63bc5c4ae26e4bc6be6469943b8253c0fd4e4186c43ad46e713ea61a0ba49129 --hash=sha256:6b40e8d38afe634559e398cc32b1472f376a4099c75fe6299ae607e404c033b2 --hash=sha256:6b493a043635eb376e50eedf7818f2f322eabbaa974e948bd8bdd29eb7ef2a51 --hash=sha256:6dba5d19c4dfab08e58d5b36304b3f92f3bd5d42c1a3fa37b5ba5cdf6dfcbcee --hash=sha256:6fd30dc99682dc2c603c2b315bded2799019cea829f8bf57dc6b61efde6611c8 --hash=sha256:707b82d19e65c9bd28b81dde95249b07bf9f5b90ebe1ef17d9b57473f8a64b7b --hash=sha256:7706f5850360ac01d80c89bcef1640683cc12ed87f42579dab6c5d3ed6888613 --hash=sha256:7782afc9b6b42200f7362858f9e73b1f8316afb276d316336c0ec3bd73312742 --hash=sha256:79983512b108e4a164b9c8d34de3992f76d48cadc9554c9e60b43f308988aabe --hash=sha256:7f683ddc7eedd742e2889d2bfb96d69573fde1d92fcb811979cdb7165bb9c7d3 --hash=sha256:82357d85de703176b5587dbe6ade8ff67f9f69a41c0733cf2425378b49954de5 --hash=sha256:84450ba661fb96e9fd67629b93d2941c871ca86fc38d835d19d4225ff946a631 --hash=sha256:86f4e8cca779080f66ff4f191a685ced73d2f72d50216f7112185dc02b90b9b7 --hash=sha256:8cda06946eac330cbe6598f77bb54e690b4ca93f593dee1568ad22b04f347c15 --hash=sha256:8ce7fd6767a1cc5a92a639b391891bf1c268b03ec7e021c7d6d902285259685c --hash=sha256:8ff4e7cdfdb1ab5698e675ca622e72d58a6fa2a8aa58195de0c0061288e6e3ea --hash=sha256:9289fd5dddcf57bab41d044f1756550f9e7cf0c8e373b8cdf0ce8773dc4bd417 --hash=sha256:92a7e36b000bf022ef3dbb9c46bfe2d52c047d5e3f3343f43204263c5addc250 --hash=sha256:92db3c28b5b2a273346bebb24857fda45601aef6ae1c011c0a997106581e8a88 --hash=sha256:95c3c157765b031331dd4db3c775e58deaee050a3042fcad72cbc4189d7c8dca --hash=sha256:980b4f289d1d90ca5efcf07958d3eb38ed9c0b7676bf2831a54d4f66f9c27dfa --hash=sha256:9ae4ef0b3f6b41bad6366fb0ea4fc1d7ed051528e113a60fa2a65a9abb5b1d99 --hash=sha256:9c98230f5042f4945f957d006edccc2af1e03ed5e37ce7c373f00a5a4daa6149 --hash=sha256:9fa2566ca27d67c86569e8c85297aaf413ffab85a8960500f12ea34ff98e4c41 --hash=sha256:a14969b8691f7998e74663b77b4c36c0337cb1df552da83d5c9004a93afdb574 --hash=sha256:a8aacce6e2e1edcb6ac625fb0f8c3a9570ccc7bfba1f63419b3769ccf6a00ed0 --hash=sha256:a8e538f46104c815be19c975572d74afb53f29650ea2025bbfaef359d2de2f7f --hash=sha256:aa41e526a5d4a9dfcfbab0716c7e8a1b215abd3f3df5a45cf18a12721d31cb5d --hash=sha256:aa693779a8b50cd97570e5a0f343538a8dbd3e496fa5dcb87e29406ad0299654 --hash=sha256:ab22fbd9765e6954bc0bcff24c25ff71dcbfdb185fcdaca49e81bac68fe724d3 --hash=sha256:ab2e5bef076f5a235c3774b4f4028a680432cded7cad37bba0fd90d64b187d19 --hash=sha256:ab973df98fc99ab39080bfb0eb3a925181454d7c3ac8a1e695fddfae696d9e90 --hash=sha256:af73657b7a68211996527dbfeffbb0864e043d270580c5aef06dc4b659a4b578 --hash=sha256:b197e7094f232959f8f20541ead1d9862ac5ebea1d58e9849c1bf979255dfac9 --hash=sha256:b295729485b06c1a0683af02a9e42d2caa9db04a373dc38a6a58cdd1e8abddf1 --hash=sha256:b8831399554b92b72af5932cdbbd4ddc55c55f631bb13ff8fe4e6536a06c5c51 --hash=sha256:b8dcd239c743aa2f9c22ce674a145e0a25cb1566c495928440a181ca1ccf6719 --hash=sha256:bcb4f8ea87d03bc51ad04add8ceaf9b0f085ac045ab4d74e73bbc2dc033f0236 --hash=sha256:bd7af3717683bea4c87acd8c0d3d5b44d56120b26fd3f8a692bdd2d5260c620a --hash=sha256:bf4475b82be41b07cc5e5ff94810e6a01f276e37c2d55571e3fe175e467a1a1c --hash=sha256:c3e446d253bd88f6377260d07c895816ebf33ffffd56c1c792b13bff9c3e1ade --hash=sha256:c57516e58fd17d03ebe67e181a4e4e2ccab1168f8c2976c6a334d4f819fe5944 --hash=sha256:c94057af19bc953643a33581844649a7fdab902624d2eb739738a30e2b3e60fc --hash=sha256:cab5d0b79d987c67f3b9e9c53f54a61360422a5a0bc075f43cab5621d530c3b6 --hash=sha256:ce031db0408e487fd2775d745ce30a7cd2923667cf3b69d48d219f1d8f5ddeb6 --hash=sha256:cee4373f4d3ad28f1ab6290684d8e2ebdb9e7a1b74fdc39e4c211995f77bec27 --hash=sha256:d5b054862739d276e09928de37c79ddeec42a6e1bfc55863be96a36ba22926f6 --hash=sha256:dbe03226baf438ac4fda9e2d0715022fd579cb641c4cf639fa40d53b2fe6f3e2 --hash=sha256:dc15e99b2d8a656f8e666854404f1ba54765871104e50c8e9813af8a7db07f12 --hash=sha256:dcaf7c1524c0542ee2fc82cc8ec337f7a9f7edee2532421ab200d2b920fc97cf --hash=sha256:dd4eda173a9fcccb5f2e2bd2a9f423d180194b1bf17cf59e3269899235b2a114 --hash=sha256:dd9a8bd8900e65504a305bf8ae6fa9fbc66de94178c420791d0293702fce2df7 --hash=sha256:de7376c29d95d6719048c194a9cf1a1b0393fbe8488a22008610b0361d834ecf --hash=sha256:e7fdd52961feb4c96507aa649550ec2a0d527c086d284749b2f582f2d40a2e0d --hash=sha256:e91f541a85298cf35433bf66f3fab2a4a2cff05c127eeca4af174f6d497f0d4b --hash=sha256:e9e3c4c9e1ed40ea53acf11e2a386383c3304212c965773704e4603d589343ed --hash=sha256:ee803480535c44e7f5ad00788526da7d85525cfefaf8acf8ab9a310000be4b03 --hash=sha256:f09cb5a7bbe1ecae6e87901a2eb23e0256bb524a79ccc53eb0b7629fbe7677c4 --hash=sha256:f19c1585933c82098c2a520f8ec1227f20e339e33aca8fa6f956f6691b784e67 --hash=sha256:f1a2f519ae173b5b6a2c9d5fa3116ce16e48b3462c8b96dfdded11055e3d6365 --hash=sha256:f28f891ccd15c514a0981f3b9db9aa23d62fe1a99997512b0491d2ed323d229a --hash=sha256:f3e73a4255342d4eb26ef6df01e3962e73aa29baa3124a8e824c5d3364a65748 --hash=sha256:f606a1881d2663630ea5b8ce2efe2111740df4b687bd78b34a8131baa007f79b --hash=sha256:fe9f97feb71aa9896b81973a7bbada8c49501dc73e58a10fcef6663af95e5079 --hash=sha256:ffc519621dce0c767e96b9c53f09c5d215578e10b02c285809f76509a3931482"
            }
          },
          "rules_python_publish_deps_311_cryptography": {
            "repoRuleId": "@@rules_python+//python/private/pypi:whl_library.bzl%whl_library",
            "attributes": {
              "dep_template": "@rules_python_publish_deps//{name}:{target}",
              "extra_pip_args": [
                "--index-url",
                "https://pypi.org/simple"
              ],
              "python_interpreter_target": "@@rules_python++python+python_3_11_host//:python",
              "repo": "rules_python_publish_deps_311",
              "requirement": "cryptography==43.0.3 --hash=sha256:0c580952eef9bf68c4747774cde7ec1d85a6e61de97281f2dba83c7d2c806362 --hash=sha256:0f996e7268af62598f2fc1204afa98a3b5712313a55c4c9d434aef49cadc91d4 --hash=sha256:1ec0bcf7e17c0c5669d881b1cd38c4972fade441b27bda1051665faaa89bdcaa --hash=sha256:281c945d0e28c92ca5e5930664c1cefd85efe80e5c0d2bc58dd63383fda29f83 --hash=sha256:2ce6fae5bdad59577b44e4dfed356944fbf1d925269114c28be377692643b4ff --hash=sha256:315b9001266a492a6ff443b61238f956b214dbec9910a081ba5b6646a055a805 --hash=sha256:443c4a81bb10daed9a8f334365fe52542771f25aedaf889fd323a853ce7377d6 --hash=sha256:4a02ded6cd4f0a5562a8887df8b3bd14e822a90f97ac5e544c162899bc467664 --hash=sha256:53a583b6637ab4c4e3591a15bc9db855b8d9dee9a669b550f311480acab6eb08 --hash=sha256:63efa177ff54aec6e1c0aefaa1a241232dcd37413835a9b674b6e3f0ae2bfd3e --hash=sha256:74f57f24754fe349223792466a709f8e0c093205ff0dca557af51072ff47ab18 --hash=sha256:7e1ce50266f4f70bf41a2c6dc4358afadae90e2a1e5342d3c08883df1675374f --hash=sha256:81ef806b1fef6b06dcebad789f988d3b37ccaee225695cf3e07648eee0fc6b73 --hash=sha256:846da004a5804145a5f441b8530b4bf35afbf7da70f82409f151695b127213d5 --hash=sha256:8ac43ae87929a5982f5948ceda07001ee5e83227fd69cf55b109144938d96984 --hash=sha256:9762ea51a8fc2a88b70cf2995e5675b38d93bf36bd67d91721c309df184f49bd --hash=sha256:a2a431ee15799d6db9fe80c82b055bae5a752bef645bba795e8e52687c69efe3 --hash=sha256:bf7a1932ac4176486eab36a19ed4c0492da5d97123f1406cf15e41b05e787d2e --hash=sha256:c2e6fc39c4ab499049df3bdf567f768a723a5e8464816e8f009f121a5a9f4405 --hash=sha256:cbeb489927bd7af4aa98d4b261af9a5bc025bd87f0e3547e11584be9e9427be2 --hash=sha256:d03b5621a135bffecad2c73e9f4deb1a0f977b9a8ffe6f8e002bf6c9d07b918c --hash=sha256:d56e96520b1020449bbace2b78b603442e7e378a9b3bd68de65c782db1507995 --hash=sha256:df6b6c6d742395dd77a23ea3728ab62f98379eff8fb61be2744d4679ab678f73 --hash=sha256:e1be4655c7ef6e1bbe6b5d0403526601323420bcf414598955968c9ef3eb7d16 --hash=sha256:f18c716be16bc1fea8e95def49edf46b82fccaa88587a45f8dc0ff6ab5d8e0a7 --hash=sha256:f46304d6f0c6ab8e52770addfa2fc41e6629495548862279641972b6215451cd --hash=sha256:f7b178f11ed3664fd0e995a47ed2b5ff0a12d893e41dd0494f406d1cf555cab7"
            }
          },
          "rules_python_publish_deps_311_docutils": {
            "repoRuleId": "@@rules_python+//python/private/pypi:whl_library.bzl%whl_library",
            "attributes": {
              "dep_template": "@rules_python_publish_deps//{name}:{target}",
              "extra_pip_args": [
                "--index-url",
                "https://pypi.org/simple"
              ],
              "python_interpreter_target": "@@rules_python++python+python_3_11_host//:python",
              "repo": "rules_python_publish_deps_311",
              "requirement": "docutils==0.21.2 --hash=sha256:3a6b18732edf182daa3cd12775bbb338cf5691468f91eeeb109deff6ebfa986f --hash=sha256:dafca5b9e384f0e419294eb4d2ff9fa826435bf15f15b7bd45723e8ad76811b2"
            }
          },
          "rules_python_publish_deps_311_idna": {
            "repoRuleId": "@@rules_python+//python/private/pypi:whl_library.bzl%whl_library",
            "attributes": {
              "dep_template": "@rules_python_publish_deps//{name}:{target}",
              "extra_pip_args": [
                "--index-url",
                "https://pypi.org/simple"
              ],
              "python_interpreter_target": "@@rules_python++python+python_3_11_host//:python",
              "repo": "rules_python_publish_deps_311",
              "requirement": "idna==3.10 --hash=sha256:12f65c9b470abda6dc35cf8e63cc574b1c52b11df2c86030af0ac09b01b13ea9 --hash=sha256:946d195a0d259cbba61165e88e65941f16e9b36ea6ddb97f00452bae8b1287d3"
            }
          },
          "rules_python_publish_deps_311_importlib_metadata": {
            "repoRuleId": "@@rules_python+//python/private/pypi:whl_library.bzl%whl_library",
            "attributes": {
              "dep_template": "@rules_python_publish_deps//{name}:{target}",
              "extra_pip_args": [
                "--index-url",
                "https://pypi.org/simple"
              ],
              "python_interpreter_target": "@@rules_python++python+python_3_11_host//:python",
              "repo": "rules_python_publish_deps_311",
              "requirement": "importlib-metadata==8.5.0 --hash=sha256:45e54197d28b7a7f1559e60b95e7c567032b602131fbd588f1497f47880aa68b --hash=sha256:71522656f0abace1d072b9e5481a48f07c138e00f079c38c8f883823f9c26bd7"
            }
          },
          "rules_python_publish_deps_311_jaraco_classes": {
            "repoRuleId": "@@rules_python+//python/private/pypi:whl_library.bzl%whl_library",
            "attributes": {
              "dep_template": "@rules_python_publish_deps//{name}:{target}",
              "extra_pip_args": [
                "--index-url",
                "https://pypi.org/simple"
              ],
              "python_interpreter_target": "@@rules_python++python+python_3_11_host//:python",
              "repo": "rules_python_publish_deps_311",
              "requirement": "jaraco-classes==3.4.0 --hash=sha256:47a024b51d0239c0dd8c8540c6c7f484be3b8fcf0b2d85c13825780d3b3f3acd --hash=sha256:f662826b6bed8cace05e7ff873ce0f9283b5c924470fe664fff1c2f00f581790"
            }
          },
          "rules_python_publish_deps_311_jaraco_context": {
            "repoRuleId": "@@rules_python+//python/private/pypi:whl_library.bzl%whl_library",
            "attributes": {
              "dep_template": "@rules_python_publish_deps//{name}:{target}",
              "extra_pip_args": [
                "--index-url",
                "https://pypi.org/simple"
              ],
              "python_interpreter_target": "@@rules_python++python+python_3_11_host//:python",
              "repo": "rules_python_publish_deps_311",
              "requirement": "jaraco-context==6.0.1 --hash=sha256:9bae4ea555cf0b14938dc0aee7c9f32ed303aa20a3b73e7dc80111628792d1b3 --hash=sha256:f797fc481b490edb305122c9181830a3a5b76d84ef6d1aef2fb9b47ab956f9e4"
            }
          },
          "rules_python_publish_deps_311_jaraco_functools": {
            "repoRuleId": "@@rules_python+//python/private/pypi:whl_library.bzl%whl_library",
            "attributes": {
              "dep_template": "@rules_python_publish_deps//{name}:{target}",
              "extra_pip_args": [
                "--index-url",
                "https://pypi.org/simple"
              ],
              "python_interpreter_target": "@@rules_python++python+python_3_11_host//:python",
              "repo": "rules_python_publish_deps_311",
              "requirement": "jaraco-functools==4.1.0 --hash=sha256:70f7e0e2ae076498e212562325e805204fc092d7b4c17e0e86c959e249701a9d --hash=sha256:ad159f13428bc4acbf5541ad6dec511f91573b90fba04df61dafa2a1231cf649"
            }
          },
          "rules_python_publish_deps_311_jeepney": {
            "repoRuleId": "@@rules_python+//python/private/pypi:whl_library.bzl%whl_library",
            "attributes": {
              "dep_template": "@rules_python_publish_deps//{name}:{target}",
              "extra_pip_args": [
                "--index-url",
                "https://pypi.org/simple"
              ],
              "python_interpreter_target": "@@rules_python++python+python_3_11_host//:python",
              "repo": "rules_python_publish_deps_311",
              "requirement": "jeepney==0.8.0 --hash=sha256:5efe48d255973902f6badc3ce55e2aa6c5c3b3bc642059ef3a91247bcfcc5806 --hash=sha256:c0a454ad016ca575060802ee4d590dd912e35c122fa04e70306de3d076cce755"
            }
          },
          "rules_python_publish_deps_311_keyring": {
            "repoRuleId": "@@rules_python+//python/private/pypi:whl_library.bzl%whl_library",
            "attributes": {
              "dep_template": "@rules_python_publish_deps//{name}:{target}",
              "extra_pip_args": [
                "--index-url",
                "https://pypi.org/simple"
              ],
              "python_interpreter_target": "@@rules_python++python+python_3_11_host//:python",
              "repo": "rules_python_publish_deps_311",
              "requirement": "keyring==25.4.1 --hash=sha256:5426f817cf7f6f007ba5ec722b1bcad95a75b27d780343772ad76b17cb47b0bf --hash=sha256:b07ebc55f3e8ed86ac81dd31ef14e81ace9dd9c3d4b5d77a6e9a2016d0d71a1b"
            }
          },
          "rules_python_publish_deps_311_markdown_it_py": {
            "repoRuleId": "@@rules_python+//python/private/pypi:whl_library.bzl%whl_library",
            "attributes": {
              "dep_template": "@rules_python_publish_deps//{name}:{target}",
              "extra_pip_args": [
                "--index-url",
                "https://pypi.org/simple"
              ],
              "python_interpreter_target": "@@rules_python++python+python_3_11_host//:python",
              "repo": "rules_python_publish_deps_311",
              "requirement": "markdown-it-py==3.0.0 --hash=sha256:355216845c60bd96232cd8d8c40e8f9765cc86f46880e43a8fd22dc1a1a8cab1 --hash=sha256:e3f60a94fa066dc52ec76661e37c851cb232d92f9886b15cb560aaada2df8feb"
            }
          },
          "rules_python_publish_deps_311_mdurl": {
            "repoRuleId": "@@rules_python+//python/private/pypi:whl_library.bzl%whl_library",
            "attributes": {
              "dep_template": "@rules_python_publish_deps//{name}:{target}",
              "extra_pip_args": [
                "--index-url",
                "https://pypi.org/simple"
              ],
              "python_interpreter_target": "@@rules_python++python+python_3_11_host//:python",
              "repo": "rules_python_publish_deps_311",
              "requirement": "mdurl==0.1.2 --hash=sha256:84008a41e51615a49fc9966191ff91509e3c40b939176e643fd50a5c2196b8f8 --hash=sha256:bb413d29f5eea38f31dd4754dd7377d4465116fb207585f97bf925588687c1ba"
            }
          },
          "rules_python_publish_deps_311_more_itertools": {
            "repoRuleId": "@@rules_python+//python/private/pypi:whl_library.bzl%whl_library",
            "attributes": {
              "dep_template": "@rules_python_publish_deps//{name}:{target}",
              "extra_pip_args": [
                "--index-url",
                "https://pypi.org/simple"
              ],
              "python_interpreter_target": "@@rules_python++python+python_3_11_host//:python",
              "repo": "rules_python_publish_deps_311",
              "requirement": "more-itertools==10.5.0 --hash=sha256:037b0d3203ce90cca8ab1defbbdac29d5f993fc20131f3664dc8d6acfa872aef --hash=sha256:5482bfef7849c25dc3c6dd53a6173ae4795da2a41a80faea6700d9f5846c5da6"
            }
          },
          "rules_python_publish_deps_311_nh3": {
            "repoRuleId": "@@rules_python+//python/private/pypi:whl_library.bzl%whl_library",
            "attributes": {
              "dep_template": "@rules_python_publish_deps//{name}:{target}",
              "extra_pip_args": [
                "--index-url",
                "https://pypi.org/simple"
              ],
              "python_interpreter_target": "@@rules_python++python+python_3_11_host//:python",
              "repo": "rules_python_publish_deps_311",
              "requirement": "nh3==0.2.18 --hash=sha256:0411beb0589eacb6734f28d5497ca2ed379eafab8ad8c84b31bb5c34072b7164 --hash=sha256:14c5a72e9fe82aea5fe3072116ad4661af5cf8e8ff8fc5ad3450f123e4925e86 --hash=sha256:19aaba96e0f795bd0a6c56291495ff59364f4300d4a39b29a0abc9cb3774a84b --hash=sha256:34c03fa78e328c691f982b7c03d4423bdfd7da69cd707fe572f544cf74ac23ad --hash=sha256:36c95d4b70530b320b365659bb5034341316e6a9b30f0b25fa9c9eff4c27a204 --hash=sha256:3a157ab149e591bb638a55c8c6bcb8cdb559c8b12c13a8affaba6cedfe51713a --hash=sha256:42c64511469005058cd17cc1537578eac40ae9f7200bedcfd1fc1a05f4f8c200 --hash=sha256:5f36b271dae35c465ef5e9090e1fdaba4a60a56f0bb0ba03e0932a66f28b9189 --hash=sha256:6955369e4d9f48f41e3f238a9e60f9410645db7e07435e62c6a9ea6135a4907f --hash=sha256:7b7c2a3c9eb1a827d42539aa64091640bd275b81e097cd1d8d82ef91ffa2e811 --hash=sha256:8ce0f819d2f1933953fca255db2471ad58184a60508f03e6285e5114b6254844 --hash=sha256:94a166927e53972a9698af9542ace4e38b9de50c34352b962f4d9a7d4c927af4 --hash=sha256:a7f1b5b2c15866f2db413a3649a8fe4fd7b428ae58be2c0f6bca5eefd53ca2be --hash=sha256:c8b3a1cebcba9b3669ed1a84cc65bf005728d2f0bc1ed2a6594a992e817f3a50 --hash=sha256:de3ceed6e661954871d6cd78b410213bdcb136f79aafe22aa7182e028b8c7307 --hash=sha256:f0eca9ca8628dbb4e916ae2491d72957fdd35f7a5d326b7032a345f111ac07fe"
            }
          },
          "rules_python_publish_deps_311_pkginfo": {
            "repoRuleId": "@@rules_python+//python/private/pypi:whl_library.bzl%whl_library",
            "attributes": {
              "dep_template": "@rules_python_publish_deps//{name}:{target}",
              "extra_pip_args": [
                "--index-url",
                "https://pypi.org/simple"
              ],
              "python_interpreter_target": "@@rules_python++python+python_3_11_host//:python",
              "repo": "rules_python_publish_deps_311",
              "requirement": "pkginfo==1.10.0 --hash=sha256:5df73835398d10db79f8eecd5cd86b1f6d29317589ea70796994d49399af6297 --hash=sha256:889a6da2ed7ffc58ab5b900d888ddce90bce912f2d2de1dc1c26f4cb9fe65097"
            }
          },
          "rules_python_publish_deps_311_pycparser": {
            "repoRuleId": "@@rules_python+//python/private/pypi:whl_library.bzl%whl_library",
            "attributes": {
              "dep_template": "@rules_python_publish_deps//{name}:{target}",
              "extra_pip_args": [
                "--index-url",
                "https://pypi.org/simple"
              ],
              "python_interpreter_target": "@@rules_python++python+python_3_11_host//:python",
              "repo": "rules_python_publish_deps_311",
              "requirement": "pycparser==2.22 --hash=sha256:491c8be9c040f5390f5bf44a5b07752bd07f56edf992381b05c701439eec10f6 --hash=sha256:c3702b6d3dd8c7abc1afa565d7e63d53a1d0bd86cdc24edd75470f4de499cfcc"
            }
          },
          "rules_python_publish_deps_311_pygments": {
            "repoRuleId": "@@rules_python+//python/private/pypi:whl_library.bzl%whl_library",
            "attributes": {
              "dep_template": "@rules_python_publish_deps//{name}:{target}",
              "extra_pip_args": [
                "--index-url",
                "https://pypi.org/simple"
              ],
              "python_interpreter_target": "@@rules_python++python+python_3_11_host//:python",
              "repo": "rules_python_publish_deps_311",
              "requirement": "pygments==2.18.0 --hash=sha256:786ff802f32e91311bff3889f6e9a86e81505fe99f2735bb6d60ae0c5004f199 --hash=sha256:b8e6aca0523f3ab76fee51799c488e38782ac06eafcf95e7ba832985c8e7b13a"
            }
          },
          "rules_python_publish_deps_311_pywin32_ctypes": {
            "repoRuleId": "@@rules_python+//python/private/pypi:whl_library.bzl%whl_library",
            "attributes": {
              "dep_template": "@rules_python_publish_deps//{name}:{target}",
              "extra_pip_args": [
                "--index-url",
                "https://pypi.org/simple"
              ],
              "python_interpreter_target": "@@rules_python++python+python_3_11_host//:python",
              "repo": "rules_python_publish_deps_311",
              "requirement": "pywin32-ctypes==0.2.3 --hash=sha256:8a1513379d709975552d202d942d9837758905c8d01eb82b8bcc30918929e7b8 --hash=sha256:d162dc04946d704503b2edc4d55f3dba5c1d539ead017afa00142c38b9885755"
            }
          },
          "rules_python_publish_deps_311_readme_renderer": {
            "repoRuleId": "@@rules_python+//python/private/pypi:whl_library.bzl%whl_library",
            "attributes": {
              "dep_template": "@rules_python_publish_deps//{name}:{target}",
              "extra_pip_args": [
                "--index-url",
                "https://pypi.org/simple"
              ],
              "python_interpreter_target": "@@rules_python++python+python_3_11_host//:python",
              "repo": "rules_python_publish_deps_311",
              "requirement": "readme-renderer==44.0 --hash=sha256:2fbca89b81a08526aadf1357a8c2ae889ec05fb03f5da67f9769c9a592166151 --hash=sha256:8712034eabbfa6805cacf1402b4eeb2a73028f72d1166d6f5cb7f9c047c5d1e1"
            }
          },
          "rules_python_publish_deps_311_requests": {
            "repoRuleId": "@@rules_python+//python/private/pypi:whl_library.bzl%whl_library",
            "attributes": {
              "dep_template": "@rules_python_publish_deps//{name}:{target}",
              "extra_pip_args": [
                "--index-url",
                "https://pypi.org/simple"
              ],
              "python_interpreter_target": "@@rules_python++python+python_3_11_host//:python",
              "repo": "rules_python_publish_deps_311",
              "requirement": "requests==2.32.3 --hash=sha256:55365417734eb18255590a9ff9eb97e9e1da868d4ccd6402399eaf68af20a760 --hash=sha256:70761cfe03c773ceb22aa2f671b4757976145175cdfca038c02654d061d6dcc6"
            }
          },
          "rules_python_publish_deps_311_requests_toolbelt": {
            "repoRuleId": "@@rules_python+//python/private/pypi:whl_library.bzl%whl_library",
            "attributes": {
              "dep_template": "@rules_python_publish_deps//{name}:{target}",
              "extra_pip_args": [
                "--index-url",
                "https://pypi.org/simple"
              ],
              "python_interpreter_target": "@@rules_python++python+python_3_11_host//:python",
              "repo": "rules_python_publish_deps_311",
              "requirement": "requests-toolbelt==1.0.0 --hash=sha256:7681a0a3d047012b5bdc0ee37d7f8f07ebe76ab08caeccfc3921ce23c88d5bc6 --hash=sha256:cccfdd665f0a24fcf4726e690f65639d272bb0637b9b92dfd91a5568ccf6bd06"
            }
          },
          "rules_python_publish_deps_311_rfc3986": {
            "repoRuleId": "@@rules_python+//python/private/pypi:whl_library.bzl%whl_library",
            "attributes": {
              "dep_template": "@rules_python_publish_deps//{name}:{target}",
              "extra_pip_args": [
                "--index-url",
                "https://pypi.org/simple"
              ],
              "python_interpreter_target": "@@rules_python++python+python_3_11_host//:python",
              "repo": "rules_python_publish_deps_311",
              "requirement": "rfc3986==2.0.0 --hash=sha256:50b1502b60e289cb37883f3dfd34532b8873c7de9f49bb546641ce9cbd256ebd --hash=sha256:97aacf9dbd4bfd829baad6e6309fa6573aaf1be3f6fa735c8ab05e46cecb261c"
            }
          },
          "rules_python_publish_deps_311_rich": {
            "repoRuleId": "@@rules_python+//python/private/pypi:whl_library.bzl%whl_library",
            "attributes": {
              "dep_template": "@rules_python_publish_deps//{name}:{target}",
              "extra_pip_args": [
                "--index-url",
                "https://pypi.org/simple"
              ],
              "python_interpreter_target": "@@rules_python++python+python_3_11_host//:python",
              "repo": "rules_python_publish_deps_311",
              "requirement": "rich==13.9.4 --hash=sha256:439594978a49a09530cff7ebc4b5c7103ef57baf48d5ea3184f21d9a2befa098 --hash=sha256:6049d5e6ec054bf2779ab3358186963bac2ea89175919d699e378b99738c2a90"
            }
          },
          "rules_python_publish_deps_311_secretstorage": {
            "repoRuleId": "@@rules_python+//python/private/pypi:whl_library.bzl%whl_library",
            "attributes": {
              "dep_template": "@rules_python_publish_deps//{name}:{target}",
              "extra_pip_args": [
                "--index-url",
                "https://pypi.org/simple"
              ],
              "python_interpreter_target": "@@rules_python++python+python_3_11_host//:python",
              "repo": "rules_python_publish_deps_311",
              "requirement": "secretstorage==3.3.3 --hash=sha256:2403533ef369eca6d2ba81718576c5e0f564d5cca1b58f73a8b23e7d4eeebd77 --hash=sha256:f356e6628222568e3af06f2eba8df495efa13b3b63081dafd4f7d9a7b7bc9f99"
            }
          },
          "rules_python_publish_deps_311_twine": {
            "repoRuleId": "@@rules_python+//python/private/pypi:whl_library.bzl%whl_library",
            "attributes": {
              "dep_template": "@rules_python_publish_deps//{name}:{target}",
              "extra_pip_args": [
                "--index-url",
                "https://pypi.org/simple"
              ],
              "python_interpreter_target": "@@rules_python++python+python_3_11_host//:python",
              "repo": "rules_python_publish_deps_311",
              "requirement": "twine==5.1.1 --hash=sha256:215dbe7b4b94c2c50a7315c0275d2258399280fbb7d04182c7e55e24b5f93997 --hash=sha256:9aa0825139c02b3434d913545c7b847a21c835e11597f5255842d457da2322db"
            }
          },
          "rules_python_publish_deps_311_urllib3": {
            "repoRuleId": "@@rules_python+//python/private/pypi:whl_library.bzl%whl_library",
            "attributes": {
              "dep_template": "@rules_python_publish_deps//{name}:{target}",
              "extra_pip_args": [
                "--index-url",
                "https://pypi.org/simple"
              ],
              "python_interpreter_target": "@@rules_python++python+python_3_11_host//:python",
              "repo": "rules_python_publish_deps_311",
              "requirement": "urllib3==2.2.3 --hash=sha256:ca899ca043dcb1bafa3e262d73aa25c465bfb49e0bd9dd5d59f1d0acba2f8fac --hash=sha256:e7d814a81dad81e6caf2ec9fdedb284ecc9c73076b62654547cc64ccdcae26e9"
            }
          },
          "rules_python_publish_deps_311_zipp": {
            "repoRuleId": "@@rules_python+//python/private/pypi:whl_library.bzl%whl_library",
            "attributes": {
              "dep_template": "@rules_python_publish_deps//{name}:{target}",
              "extra_pip_args": [
                "--index-url",
                "https://pypi.org/simple"
              ],
              "python_interpreter_target": "@@rules_python++python+python_3_11_host//:python",
              "repo": "rules_python_publish_deps_311",
              "requirement": "zipp==3.20.2 --hash=sha256:a817ac80d6cf4b23bf7f2828b7cabf326f15a001bea8b1f9b49631780ba28350 --hash=sha256:bc9eb26f4506fda01b81bcde0ca78103b6e62f991b381fec825435c836edbc29"
            }
          },
          "pip_deps": {
            "repoRuleId": "@@rules_python+//python/private/pypi:hub_repository.bzl%hub_repository",
            "attributes": {
              "repo_name": "pip_deps",
              "extra_hub_aliases": {},
              "whl_map": {
                "numpy": "{\"pip_deps_310_numpy\":[{\"version\":\"3.10\"}],\"pip_deps_311_numpy\":[{\"version\":\"3.11\"}],\"pip_deps_312_numpy\":[{\"version\":\"3.12\"}],\"pip_deps_38_numpy\":[{\"version\":\"3.8\"}],\"pip_deps_39_numpy\":[{\"version\":\"3.9\"}]}",
                "setuptools": "{\"pip_deps_310_setuptools\":[{\"version\":\"3.10\"}],\"pip_deps_311_setuptools\":[{\"version\":\"3.11\"}],\"pip_deps_312_setuptools\":[{\"version\":\"3.12\"}],\"pip_deps_38_setuptools\":[{\"version\":\"3.8\"}],\"pip_deps_39_setuptools\":[{\"version\":\"3.9\"}]}"
              },
              "packages": [
                "numpy",
                "setuptools"
              ],
              "groups": {}
            }
          },
          "rules_fuzzing_py_deps": {
            "repoRuleId": "@@rules_python+//python/private/pypi:hub_repository.bzl%hub_repository",
            "attributes": {
              "repo_name": "rules_fuzzing_py_deps",
              "extra_hub_aliases": {},
              "whl_map": {
                "absl_py": "{\"rules_fuzzing_py_deps_310_absl_py\":[{\"version\":\"3.10\"}],\"rules_fuzzing_py_deps_311_absl_py\":[{\"version\":\"3.11\"}],\"rules_fuzzing_py_deps_312_absl_py\":[{\"version\":\"3.12\"}],\"rules_fuzzing_py_deps_38_absl_py\":[{\"version\":\"3.8\"}],\"rules_fuzzing_py_deps_39_absl_py\":[{\"version\":\"3.9\"}]}",
                "six": "{\"rules_fuzzing_py_deps_310_six\":[{\"version\":\"3.10\"}],\"rules_fuzzing_py_deps_311_six\":[{\"version\":\"3.11\"}],\"rules_fuzzing_py_deps_312_six\":[{\"version\":\"3.12\"}],\"rules_fuzzing_py_deps_38_six\":[{\"version\":\"3.8\"}],\"rules_fuzzing_py_deps_39_six\":[{\"version\":\"3.9\"}]}"
              },
              "packages": [
                "absl_py",
                "six"
              ],
              "groups": {}
            }
          },
          "rules_python_publish_deps": {
            "repoRuleId": "@@rules_python+//python/private/pypi:hub_repository.bzl%hub_repository",
            "attributes": {
              "repo_name": "rules_python_publish_deps",
              "extra_hub_aliases": {},
              "whl_map": {
                "backports_tarfile": "{\"rules_python_publish_deps_311_backports_tarfile\":[{\"version\":\"3.11\"}]}",
                "certifi": "{\"rules_python_publish_deps_311_certifi\":[{\"version\":\"3.11\"}]}",
                "cffi": "{\"rules_python_publish_deps_311_cffi\":[{\"version\":\"3.11\"}]}",
                "charset_normalizer": "{\"rules_python_publish_deps_311_charset_normalizer\":[{\"version\":\"3.11\"}]}",
                "cryptography": "{\"rules_python_publish_deps_311_cryptography\":[{\"version\":\"3.11\"}]}",
                "docutils": "{\"rules_python_publish_deps_311_docutils\":[{\"version\":\"3.11\"}]}",
                "idna": "{\"rules_python_publish_deps_311_idna\":[{\"version\":\"3.11\"}]}",
                "importlib_metadata": "{\"rules_python_publish_deps_311_importlib_metadata\":[{\"version\":\"3.11\"}]}",
                "jaraco_classes": "{\"rules_python_publish_deps_311_jaraco_classes\":[{\"version\":\"3.11\"}]}",
                "jaraco_context": "{\"rules_python_publish_deps_311_jaraco_context\":[{\"version\":\"3.11\"}]}",
                "jaraco_functools": "{\"rules_python_publish_deps_311_jaraco_functools\":[{\"version\":\"3.11\"}]}",
                "jeepney": "{\"rules_python_publish_deps_311_jeepney\":[{\"version\":\"3.11\"}]}",
                "keyring": "{\"rules_python_publish_deps_311_keyring\":[{\"version\":\"3.11\"}]}",
                "markdown_it_py": "{\"rules_python_publish_deps_311_markdown_it_py\":[{\"version\":\"3.11\"}]}",
                "mdurl": "{\"rules_python_publish_deps_311_mdurl\":[{\"version\":\"3.11\"}]}",
                "more_itertools": "{\"rules_python_publish_deps_311_more_itertools\":[{\"version\":\"3.11\"}]}",
                "nh3": "{\"rules_python_publish_deps_311_nh3\":[{\"version\":\"3.11\"}]}",
                "pkginfo": "{\"rules_python_publish_deps_311_pkginfo\":[{\"version\":\"3.11\"}]}",
                "pycparser": "{\"rules_python_publish_deps_311_pycparser\":[{\"version\":\"3.11\"}]}",
                "pygments": "{\"rules_python_publish_deps_311_pygments\":[{\"version\":\"3.11\"}]}",
                "pywin32_ctypes": "{\"rules_python_publish_deps_311_pywin32_ctypes\":[{\"version\":\"3.11\"}]}",
                "readme_renderer": "{\"rules_python_publish_deps_311_readme_renderer\":[{\"version\":\"3.11\"}]}",
                "requests": "{\"rules_python_publish_deps_311_requests\":[{\"version\":\"3.11\"}]}",
                "requests_toolbelt": "{\"rules_python_publish_deps_311_requests_toolbelt\":[{\"version\":\"3.11\"}]}",
                "rfc3986": "{\"rules_python_publish_deps_311_rfc3986\":[{\"version\":\"3.11\"}]}",
                "rich": "{\"rules_python_publish_deps_311_rich\":[{\"version\":\"3.11\"}]}",
                "secretstorage": "{\"rules_python_publish_deps_311_secretstorage\":[{\"version\":\"3.11\"}]}",
                "twine": "{\"rules_python_publish_deps_311_twine\":[{\"version\":\"3.11\"}]}",
                "urllib3": "{\"rules_python_publish_deps_311_urllib3\":[{\"version\":\"3.11\"}]}",
                "zipp": "{\"rules_python_publish_deps_311_zipp\":[{\"version\":\"3.11\"}]}"
              },
              "packages": [
                "backports_tarfile",
                "certifi",
                "charset_normalizer",
                "docutils",
                "idna",
                "importlib_metadata",
                "jaraco_classes",
                "jaraco_context",
                "jaraco_functools",
                "keyring",
                "markdown_it_py",
                "mdurl",
                "more_itertools",
                "nh3",
                "pkginfo",
                "pygments",
                "readme_renderer",
                "requests",
                "requests_toolbelt",
                "rfc3986",
                "rich",
                "twine",
                "urllib3",
                "zipp"
              ],
              "groups": {}
            }
          }
        },
        "moduleExtensionMetadata": {
          "useAllRepos": "NO",
          "reproducible": false
        },
        "recordedRepoMappingEntries": [
          [
            "bazel_features+",
            "bazel_features_globals",
            "bazel_features++version_extension+bazel_features_globals"
          ],
          [
            "bazel_features+",
            "bazel_features_version",
            "bazel_features++version_extension+bazel_features_version"
          ],
          [
            "rules_python+",
            "bazel_features",
            "bazel_features+"
          ],
          [
            "rules_python+",
            "bazel_skylib",
            "bazel_skylib+"
          ],
          [
            "rules_python+",
            "bazel_tools",
            "bazel_tools"
          ],
          [
            "rules_python+",
            "pypi__build",
            "rules_python++internal_deps+pypi__build"
          ],
          [
            "rules_python+",
            "pypi__click",
            "rules_python++internal_deps+pypi__click"
          ],
          [
            "rules_python+",
            "pypi__colorama",
            "rules_python++internal_deps+pypi__colorama"
          ],
          [
            "rules_python+",
            "pypi__importlib_metadata",
            "rules_python++internal_deps+pypi__importlib_metadata"
          ],
          [
            "rules_python+",
            "pypi__installer",
            "rules_python++internal_deps+pypi__installer"
          ],
          [
            "rules_python+",
            "pypi__more_itertools",
            "rules_python++internal_deps+pypi__more_itertools"
          ],
          [
            "rules_python+",
            "pypi__packaging",
            "rules_python++internal_deps+pypi__packaging"
          ],
          [
            "rules_python+",
            "pypi__pep517",
            "rules_python++internal_deps+pypi__pep517"
          ],
          [
            "rules_python+",
            "pypi__pip",
            "rules_python++internal_deps+pypi__pip"
          ],
          [
            "rules_python+",
            "pypi__pip_tools",
            "rules_python++internal_deps+pypi__pip_tools"
          ],
          [
            "rules_python+",
            "pypi__pyproject_hooks",
            "rules_python++internal_deps+pypi__pyproject_hooks"
          ],
          [
            "rules_python+",
            "pypi__setuptools",
            "rules_python++internal_deps+pypi__setuptools"
          ],
          [
            "rules_python+",
            "pypi__tomli",
            "rules_python++internal_deps+pypi__tomli"
          ],
          [
            "rules_python+",
            "pypi__wheel",
            "rules_python++internal_deps+pypi__wheel"
          ],
          [
            "rules_python+",
            "pypi__zipp",
            "rules_python++internal_deps+pypi__zipp"
          ],
          [
            "rules_python+",
            "pythons_hub",
            "rules_python++python+pythons_hub"
          ],
          [
            "rules_python++python+pythons_hub",
            "python_3_10_host",
            "rules_python++python+python_3_10_host"
          ],
          [
            "rules_python++python+pythons_hub",
            "python_3_11_host",
            "rules_python++python+python_3_11_host"
          ],
          [
            "rules_python++python+pythons_hub",
            "python_3_12_host",
            "rules_python++python+python_3_12_host"
          ],
          [
            "rules_python++python+pythons_hub",
            "python_3_8_host",
            "rules_python++python+python_3_8_host"
          ],
          [
            "rules_python++python+pythons_hub",
            "python_3_9_host",
            "rules_python++python+python_3_9_host"
          ]
        ]
      }
    },
    "@@rules_rust+//cargo/private:internal_extensions.bzl%i": {
      "general": {
        "bzlTransitiveDigest": "7W/jvnF3GDtlB11Zp3OHh6ccTwJsGrwmOvRxEkB0Dnk=",
        "usagesDigest": "44NapJNcDDl7g/avr9Z+huiyJvLuC+hsktRy/1rZBIk=",
        "recordedFileInputs": {},
        "recordedDirentsInputs": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "rrcti": {
            "repoRuleId": "@@rules_rust+//crate_universe/private:crates_vendor.bzl%crates_vendor_remote_repository",
            "attributes": {
              "build_file": "@@rules_rust+//cargo/private/cargo_toml_info/3rdparty/crates:BUILD.bazel",
              "defs_module": "@@rules_rust+//cargo/private/cargo_toml_info/3rdparty/crates:defs.bzl"
            }
          },
          "rrcti__cargo_toml-0.20.5": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "sha256": "88da5a13c620b4ca0078845707ea9c3faf11edbc3ffd8497d11d686211cd1ac0",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/cargo_toml/0.20.5/download"
              ],
              "strip_prefix": "cargo_toml-0.20.5",
              "build_file": "@@rules_rust+//cargo/private/cargo_toml_info/3rdparty/crates:BUILD.cargo_toml-0.20.5.bazel"
            }
          },
          "rrcti__equivalent-1.0.1": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "sha256": "5443807d6dff69373d433ab9ef5378ad8df50ca6298caf15de6e52e24aaf54d5",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/equivalent/1.0.1/download"
              ],
              "strip_prefix": "equivalent-1.0.1",
              "build_file": "@@rules_rust+//cargo/private/cargo_toml_info/3rdparty/crates:BUILD.equivalent-1.0.1.bazel"
            }
          },
          "rrcti__hashbrown-0.15.1": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "sha256": "3a9bfc1af68b1726ea47d3d5109de126281def866b33970e10fbab11b5dafab3",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/hashbrown/0.15.1/download"
              ],
              "strip_prefix": "hashbrown-0.15.1",
              "build_file": "@@rules_rust+//cargo/private/cargo_toml_info/3rdparty/crates:BUILD.hashbrown-0.15.1.bazel"
            }
          },
          "rrcti__indexmap-2.6.0": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "sha256": "707907fe3c25f5424cce2cb7e1cbcafee6bdbe735ca90ef77c29e84591e5b9da",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/indexmap/2.6.0/download"
              ],
              "strip_prefix": "indexmap-2.6.0",
              "build_file": "@@rules_rust+//cargo/private/cargo_toml_info/3rdparty/crates:BUILD.indexmap-2.6.0.bazel"
            }
          },
          "rrcti__memchr-2.7.4": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "sha256": "78ca9ab1a0babb1e7d5695e3530886289c18cf2f87ec19a575a0abdce112e3a3",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/memchr/2.7.4/download"
              ],
              "strip_prefix": "memchr-2.7.4",
              "build_file": "@@rules_rust+//cargo/private/cargo_toml_info/3rdparty/crates:BUILD.memchr-2.7.4.bazel"
            }
          },
          "rrcti__proc-macro2-1.0.89": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "sha256": "f139b0662de085916d1fb67d2b4169d1addddda1919e696f3252b740b629986e",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/proc-macro2/1.0.89/download"
              ],
              "strip_prefix": "proc-macro2-1.0.89",
              "build_file": "@@rules_rust+//cargo/private/cargo_toml_info/3rdparty/crates:BUILD.proc-macro2-1.0.89.bazel"
            }
          },
          "rrcti__quote-1.0.37": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "sha256": "b5b9d34b8991d19d98081b46eacdd8eb58c6f2b201139f7c5f643cc155a633af",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/quote/1.0.37/download"
              ],
              "strip_prefix": "quote-1.0.37",
              "build_file": "@@rules_rust+//cargo/private/cargo_toml_info/3rdparty/crates:BUILD.quote-1.0.37.bazel"
            }
          },
          "rrcti__serde-1.0.214": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "sha256": "f55c3193aca71c12ad7890f1785d2b73e1b9f63a0bbc353c08ef26fe03fc56b5",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/serde/1.0.214/download"
              ],
              "strip_prefix": "serde-1.0.214",
              "build_file": "@@rules_rust+//cargo/private/cargo_toml_info/3rdparty/crates:BUILD.serde-1.0.214.bazel"
            }
          },
          "rrcti__serde_derive-1.0.214": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "sha256": "de523f781f095e28fa605cdce0f8307e451cc0fd14e2eb4cd2e98a355b147766",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/serde_derive/1.0.214/download"
              ],
              "strip_prefix": "serde_derive-1.0.214",
              "build_file": "@@rules_rust+//cargo/private/cargo_toml_info/3rdparty/crates:BUILD.serde_derive-1.0.214.bazel"
            }
          },
          "rrcti__serde_spanned-0.6.8": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "sha256": "87607cb1398ed59d48732e575a4c28a7a8ebf2454b964fe3f224f2afc07909e1",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/serde_spanned/0.6.8/download"
              ],
              "strip_prefix": "serde_spanned-0.6.8",
              "build_file": "@@rules_rust+//cargo/private/cargo_toml_info/3rdparty/crates:BUILD.serde_spanned-0.6.8.bazel"
            }
          },
          "rrcti__syn-2.0.87": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "sha256": "25aa4ce346d03a6dcd68dd8b4010bcb74e54e62c90c573f394c46eae99aba32d",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/syn/2.0.87/download"
              ],
              "strip_prefix": "syn-2.0.87",
              "build_file": "@@rules_rust+//cargo/private/cargo_toml_info/3rdparty/crates:BUILD.syn-2.0.87.bazel"
            }
          },
          "rrcti__toml-0.8.19": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "sha256": "a1ed1f98e3fdc28d6d910e6737ae6ab1a93bf1985935a1193e68f93eeb68d24e",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/toml/0.8.19/download"
              ],
              "strip_prefix": "toml-0.8.19",
              "build_file": "@@rules_rust+//cargo/private/cargo_toml_info/3rdparty/crates:BUILD.toml-0.8.19.bazel"
            }
          },
          "rrcti__toml_datetime-0.6.8": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "sha256": "0dd7358ecb8fc2f8d014bf86f6f638ce72ba252a2c3a2572f2a795f1d23efb41",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/toml_datetime/0.6.8/download"
              ],
              "strip_prefix": "toml_datetime-0.6.8",
              "build_file": "@@rules_rust+//cargo/private/cargo_toml_info/3rdparty/crates:BUILD.toml_datetime-0.6.8.bazel"
            }
          },
          "rrcti__toml_edit-0.22.22": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "sha256": "4ae48d6208a266e853d946088ed816055e556cc6028c5e8e2b84d9fa5dd7c7f5",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/toml_edit/0.22.22/download"
              ],
              "strip_prefix": "toml_edit-0.22.22",
              "build_file": "@@rules_rust+//cargo/private/cargo_toml_info/3rdparty/crates:BUILD.toml_edit-0.22.22.bazel"
            }
          },
          "rrcti__unicode-ident-1.0.13": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "sha256": "e91b56cd4cadaeb79bbf1a5645f6b4f8dc5bde8834ad5894a8db35fda9efa1fe",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/unicode-ident/1.0.13/download"
              ],
              "strip_prefix": "unicode-ident-1.0.13",
              "build_file": "@@rules_rust+//cargo/private/cargo_toml_info/3rdparty/crates:BUILD.unicode-ident-1.0.13.bazel"
            }
          },
          "rrcti__winnow-0.6.20": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "sha256": "36c1fec1a2bb5866f07c25f68c26e565c4c200aebb96d7e55710c19d3e8ac49b",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/winnow/0.6.20/download"
              ],
              "strip_prefix": "winnow-0.6.20",
              "build_file": "@@rules_rust+//cargo/private/cargo_toml_info/3rdparty/crates:BUILD.winnow-0.6.20.bazel"
            }
          }
        },
        "moduleExtensionMetadata": {
          "explicitRootModuleDirectDeps": [
            "rrcti",
            "rrcti__cargo_toml-0.20.5"
          ],
          "explicitRootModuleDirectDevDeps": [],
          "useAllRepos": "NO",
          "reproducible": false
        },
        "recordedRepoMappingEntries": [
          [
            "rules_rust+",
            "bazel_skylib",
            "bazel_skylib+"
          ],
          [
            "rules_rust+",
            "bazel_tools",
            "bazel_tools"
          ],
          [
            "rules_rust+",
            "rrcti",
            "rules_rust++i2+rrcti"
          ],
          [
            "rules_rust+",
            "rules_rust",
            "rules_rust+"
          ]
        ]
      }
    },
    "@@rules_rust+//crate_universe:extension.bzl%crate": {
      "general": {
        "bzlTransitiveDigest": "UuoPlsOOhe1BDjNdFegTYffISIetpkSxsHwT4RToKwc=",
        "usagesDigest": "Mw24CZ9hpdGUPbu/RcrRZS5Y/Az10OU968XzrSx9rUI=",
        "recordedFileInputs": {
          "@@//third_party/rust/Cargo.toml": "17a9e66b63f6927172408e14d105cc2c9aab8a89911e9713d5b3fa4d6654407e",
          "@@//third_party/rust_efi/Cargo.toml": "cf5ab6a5b23bc0cd75f0b88f99d7f407363ee0129cab02d7dd0abc194e5a4ea0"
        },
        "recordedDirentsInputs": {},
        "envVariables": {
          "CARGO_BAZEL_DEBUG": null,
          "CARGO_BAZEL_GENERATOR_SHA256": null,
          "CARGO_BAZEL_GENERATOR_URL": null,
          "CARGO_BAZEL_ISOLATED": null,
          "CARGO_BAZEL_REPIN": null,
          "CARGO_BAZEL_REPIN_ONLY": null,
          "REPIN": null
        },
        "generatedRepoSpecs": {
          "crate_index": {
            "repoRuleId": "@@rules_rust+//crate_universe:extensions.bzl%_generate_repo",
            "attributes": {
              "contents": {
                "BUILD.bazel": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files(\n    [\n        \"cargo-bazel.json\",\n        \"crates.bzl\",\n        \"defs.bzl\",\n    ] + glob(\n        allow_empty = True,\n        include = [\"*.bazel\"],\n    ),\n)\n\nfilegroup(\n    name = \"srcs\",\n    srcs = glob(\n        allow_empty = True,\n        include = [\n            \"*.bazel\",\n            \"*.bzl\",\n        ],\n    ),\n)\n\n# Workspace Member Dependencies\nalias(\n    name = \"mdbook-0.4.36\",\n    actual = \"@crate_index__mdbook-0.4.36//:mdbook\",\n    tags = [\"manual\"],\n)\n\nalias(\n    name = \"mdbook\",\n    actual = \"@crate_index__mdbook-0.4.36//:mdbook\",\n    tags = [\"manual\"],\n)\n\nalias(\n    name = \"protoc-gen-prost-0.2.3\",\n    actual = \"@crate_index__protoc-gen-prost-0.2.3//:protoc_gen_prost\",\n    tags = [\"manual\"],\n)\n\nalias(\n    name = \"protoc-gen-prost\",\n    actual = \"@crate_index__protoc-gen-prost-0.2.3//:protoc_gen_prost\",\n    tags = [\"manual\"],\n)\n\n# Binaries\nalias(\n    name = \"cc__gcc-shim\",\n    actual = \"@crate_index__cc-1.0.83//:gcc-shim__bin\",\n    tags = [\"manual\"],\n)\n\nalias(\n    name = \"clap__stdio-fixture\",\n    actual = \"@crate_index__clap-4.4.16//:stdio-fixture__bin\",\n    tags = [\"manual\"],\n)\n\nalias(\n    name = \"handlebars__handlebars-cli\",\n    actual = \"@crate_index__handlebars-4.5.0//:handlebars-cli__bin\",\n    tags = [\"manual\"],\n)\n\nalias(\n    name = \"mdbook__mdbook\",\n    actual = \"@crate_index__mdbook-0.4.36//:mdbook__bin\",\n    tags = [\"manual\"],\n)\n\nalias(\n    name = \"phf_generator__gen_hash_test\",\n    actual = \"@crate_index__phf_generator-0.10.0//:gen_hash_test__bin\",\n    tags = [\"manual\"],\n)\n\nalias(\n    name = \"protoc-gen-prost__protoc-gen-prost\",\n    actual = \"@crate_index__protoc-gen-prost-0.2.3//:protoc-gen-prost__bin\",\n    tags = [\"manual\"],\n)\n\nalias(\n    name = \"pulldown-cmark__pulldown-cmark\",\n    actual = \"@crate_index__pulldown-cmark-0.9.3//:pulldown-cmark__bin\",\n    tags = [\"manual\"],\n)\n",
                "alias_rules.bzl": "\"\"\"Alias that transitions its target to `compilation_mode=opt`.  Use `transition_alias=\"opt\"` to enable.\"\"\"\n\nload(\"@rules_cc//cc:defs.bzl\", \"CcInfo\")\nload(\"@rules_rust//rust:rust_common.bzl\", \"COMMON_PROVIDERS\")\n\ndef _transition_alias_impl(ctx):\n    # `ctx.attr.actual` is a list of 1 item due to the transition\n    providers = [ctx.attr.actual[0][provider] for provider in COMMON_PROVIDERS]\n    if CcInfo in ctx.attr.actual[0]:\n        providers.append(ctx.attr.actual[0][CcInfo])\n    return providers\n\ndef _change_compilation_mode(compilation_mode):\n    def _change_compilation_mode_impl(_settings, _attr):\n        return {\n            \"//command_line_option:compilation_mode\": compilation_mode,\n        }\n\n    return transition(\n        implementation = _change_compilation_mode_impl,\n        inputs = [],\n        outputs = [\n            \"//command_line_option:compilation_mode\",\n        ],\n    )\n\ndef _transition_alias_rule(compilation_mode):\n    return rule(\n        implementation = _transition_alias_impl,\n        provides = COMMON_PROVIDERS,\n        attrs = {\n            \"actual\": attr.label(\n                mandatory = True,\n                doc = \"`rust_library()` target to transition to `compilation_mode=opt`.\",\n                providers = COMMON_PROVIDERS,\n                cfg = _change_compilation_mode(compilation_mode),\n            ),\n            \"_allowlist_function_transition\": attr.label(\n                default = \"@bazel_tools//tools/allowlists/function_transition_allowlist\",\n            ),\n        },\n        doc = \"Transitions a Rust library crate to the `compilation_mode=opt`.\",\n    )\n\ntransition_alias_dbg = _transition_alias_rule(\"dbg\")\ntransition_alias_fastbuild = _transition_alias_rule(\"fastbuild\")\ntransition_alias_opt = _transition_alias_rule(\"opt\")\n",
                "defs.bzl": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\"\"\"\n# `crates_repository` API\n\n- [aliases](#aliases)\n- [crate_deps](#crate_deps)\n- [all_crate_deps](#all_crate_deps)\n- [crate_repositories](#crate_repositories)\n\n\"\"\"\n\nload(\"@bazel_tools//tools/build_defs/repo:git.bzl\", \"new_git_repository\")\nload(\"@bazel_tools//tools/build_defs/repo:http.bzl\", \"http_archive\")\nload(\"@bazel_tools//tools/build_defs/repo:utils.bzl\", \"maybe\")\nload(\"@bazel_skylib//lib:selects.bzl\", \"selects\")\nload(\"@rules_rust//crate_universe/private:local_crate_mirror.bzl\", \"local_crate_mirror\")\n\n###############################################################################\n# MACROS API\n###############################################################################\n\n# An identifier that represent common dependencies (unconditional).\n_COMMON_CONDITION = \"\"\n\ndef _flatten_dependency_maps(all_dependency_maps):\n    \"\"\"Flatten a list of dependency maps into one dictionary.\n\n    Dependency maps have the following structure:\n\n    ```python\n    DEPENDENCIES_MAP = {\n        # The first key in the map is a Bazel package\n        # name of the workspace this file is defined in.\n        \"workspace_member_package\": {\n\n            # Not all dependencies are supported for all platforms.\n            # the condition key is the condition required to be true\n            # on the host platform.\n            \"condition\": {\n\n                # An alias to a crate target.     # The label of the crate target the\n                # Aliases are only crate names.   # package name refers to.\n                \"package_name\":                   \"@full//:label\",\n            }\n        }\n    }\n    ```\n\n    Args:\n        all_dependency_maps (list): A list of dicts as described above\n\n    Returns:\n        dict: A dictionary as described above\n    \"\"\"\n    dependencies = {}\n\n    for workspace_deps_map in all_dependency_maps:\n        for pkg_name, conditional_deps_map in workspace_deps_map.items():\n            if pkg_name not in dependencies:\n                non_frozen_map = dict()\n                for key, values in conditional_deps_map.items():\n                    non_frozen_map.update({key: dict(values.items())})\n                dependencies.setdefault(pkg_name, non_frozen_map)\n                continue\n\n            for condition, deps_map in conditional_deps_map.items():\n                # If the condition has not been recorded, do so and continue\n                if condition not in dependencies[pkg_name]:\n                    dependencies[pkg_name].setdefault(condition, dict(deps_map.items()))\n                    continue\n\n                # Alert on any miss-matched dependencies\n                inconsistent_entries = []\n                for crate_name, crate_label in deps_map.items():\n                    existing = dependencies[pkg_name][condition].get(crate_name)\n                    if existing and existing != crate_label:\n                        inconsistent_entries.append((crate_name, existing, crate_label))\n                    dependencies[pkg_name][condition].update({crate_name: crate_label})\n\n    return dependencies\n\ndef crate_deps(deps, package_name = None):\n    \"\"\"Finds the fully qualified label of the requested crates for the package where this macro is called.\n\n    Args:\n        deps (list): The desired list of crate targets.\n        package_name (str, optional): The package name of the set of dependencies to look up.\n            Defaults to `native.package_name()`.\n\n    Returns:\n        list: A list of labels to generated rust targets (str)\n    \"\"\"\n\n    if not deps:\n        return []\n\n    if package_name == None:\n        package_name = native.package_name()\n\n    # Join both sets of dependencies\n    dependencies = _flatten_dependency_maps([\n        _NORMAL_DEPENDENCIES,\n        _NORMAL_DEV_DEPENDENCIES,\n        _PROC_MACRO_DEPENDENCIES,\n        _PROC_MACRO_DEV_DEPENDENCIES,\n        _BUILD_DEPENDENCIES,\n        _BUILD_PROC_MACRO_DEPENDENCIES,\n    ]).pop(package_name, {})\n\n    # Combine all conditional packages so we can easily index over a flat list\n    # TODO: Perhaps this should actually return select statements and maintain\n    # the conditionals of the dependencies\n    flat_deps = {}\n    for deps_set in dependencies.values():\n        for crate_name, crate_label in deps_set.items():\n            flat_deps.update({crate_name: crate_label})\n\n    missing_crates = []\n    crate_targets = []\n    for crate_target in deps:\n        if crate_target not in flat_deps:\n            missing_crates.append(crate_target)\n        else:\n            crate_targets.append(flat_deps[crate_target])\n\n    if missing_crates:\n        fail(\"Could not find crates `{}` among dependencies of `{}`. Available dependencies were `{}`\".format(\n            missing_crates,\n            package_name,\n            dependencies,\n        ))\n\n    return crate_targets\n\ndef all_crate_deps(\n        normal = False, \n        normal_dev = False, \n        proc_macro = False, \n        proc_macro_dev = False,\n        build = False,\n        build_proc_macro = False,\n        package_name = None):\n    \"\"\"Finds the fully qualified label of all requested direct crate dependencies \\\n    for the package where this macro is called.\n\n    If no parameters are set, all normal dependencies are returned. Setting any one flag will\n    otherwise impact the contents of the returned list.\n\n    Args:\n        normal (bool, optional): If True, normal dependencies are included in the\n            output list.\n        normal_dev (bool, optional): If True, normal dev dependencies will be\n            included in the output list..\n        proc_macro (bool, optional): If True, proc_macro dependencies are included\n            in the output list.\n        proc_macro_dev (bool, optional): If True, dev proc_macro dependencies are\n            included in the output list.\n        build (bool, optional): If True, build dependencies are included\n            in the output list.\n        build_proc_macro (bool, optional): If True, build proc_macro dependencies are\n            included in the output list.\n        package_name (str, optional): The package name of the set of dependencies to look up.\n            Defaults to `native.package_name()` when unset.\n\n    Returns:\n        list: A list of labels to generated rust targets (str)\n    \"\"\"\n\n    if package_name == None:\n        package_name = native.package_name()\n\n    # Determine the relevant maps to use\n    all_dependency_maps = []\n    if normal:\n        all_dependency_maps.append(_NORMAL_DEPENDENCIES)\n    if normal_dev:\n        all_dependency_maps.append(_NORMAL_DEV_DEPENDENCIES)\n    if proc_macro:\n        all_dependency_maps.append(_PROC_MACRO_DEPENDENCIES)\n    if proc_macro_dev:\n        all_dependency_maps.append(_PROC_MACRO_DEV_DEPENDENCIES)\n    if build:\n        all_dependency_maps.append(_BUILD_DEPENDENCIES)\n    if build_proc_macro:\n        all_dependency_maps.append(_BUILD_PROC_MACRO_DEPENDENCIES)\n\n    # Default to always using normal dependencies\n    if not all_dependency_maps:\n        all_dependency_maps.append(_NORMAL_DEPENDENCIES)\n\n    dependencies = _flatten_dependency_maps(all_dependency_maps).pop(package_name, None)\n\n    if not dependencies:\n        if dependencies == None:\n            fail(\"Tried to get all_crate_deps for package \" + package_name + \" but that package had no Cargo.toml file\")\n        else:\n            return []\n\n    crate_deps = list(dependencies.pop(_COMMON_CONDITION, {}).values())\n    for condition, deps in dependencies.items():\n        crate_deps += selects.with_or({\n            tuple(_CONDITIONS[condition]): deps.values(),\n            \"//conditions:default\": [],\n        })\n\n    return crate_deps\n\ndef aliases(\n        normal = False,\n        normal_dev = False,\n        proc_macro = False,\n        proc_macro_dev = False,\n        build = False,\n        build_proc_macro = False,\n        package_name = None):\n    \"\"\"Produces a map of Crate alias names to their original label\n\n    If no dependency kinds are specified, `normal` and `proc_macro` are used by default.\n    Setting any one flag will otherwise determine the contents of the returned dict.\n\n    Args:\n        normal (bool, optional): If True, normal dependencies are included in the\n            output list.\n        normal_dev (bool, optional): If True, normal dev dependencies will be\n            included in the output list..\n        proc_macro (bool, optional): If True, proc_macro dependencies are included\n            in the output list.\n        proc_macro_dev (bool, optional): If True, dev proc_macro dependencies are\n            included in the output list.\n        build (bool, optional): If True, build dependencies are included\n            in the output list.\n        build_proc_macro (bool, optional): If True, build proc_macro dependencies are\n            included in the output list.\n        package_name (str, optional): The package name of the set of dependencies to look up.\n            Defaults to `native.package_name()` when unset.\n\n    Returns:\n        dict: The aliases of all associated packages\n    \"\"\"\n    if package_name == None:\n        package_name = native.package_name()\n\n    # Determine the relevant maps to use\n    all_aliases_maps = []\n    if normal:\n        all_aliases_maps.append(_NORMAL_ALIASES)\n    if normal_dev:\n        all_aliases_maps.append(_NORMAL_DEV_ALIASES)\n    if proc_macro:\n        all_aliases_maps.append(_PROC_MACRO_ALIASES)\n    if proc_macro_dev:\n        all_aliases_maps.append(_PROC_MACRO_DEV_ALIASES)\n    if build:\n        all_aliases_maps.append(_BUILD_ALIASES)\n    if build_proc_macro:\n        all_aliases_maps.append(_BUILD_PROC_MACRO_ALIASES)\n\n    # Default to always using normal aliases\n    if not all_aliases_maps:\n        all_aliases_maps.append(_NORMAL_ALIASES)\n        all_aliases_maps.append(_PROC_MACRO_ALIASES)\n\n    aliases = _flatten_dependency_maps(all_aliases_maps).pop(package_name, None)\n\n    if not aliases:\n        return dict()\n\n    common_items = aliases.pop(_COMMON_CONDITION, {}).items()\n\n    # If there are only common items in the dictionary, immediately return them\n    if not len(aliases.keys()) == 1:\n        return dict(common_items)\n\n    # Build a single select statement where each conditional has accounted for the\n    # common set of aliases.\n    crate_aliases = {\"//conditions:default\": dict(common_items)}\n    for condition, deps in aliases.items():\n        condition_triples = _CONDITIONS[condition]\n        for triple in condition_triples:\n            if triple in crate_aliases:\n                crate_aliases[triple].update(deps)\n            else:\n                crate_aliases.update({triple: dict(deps.items() + common_items)})\n\n    return select(crate_aliases)\n\n###############################################################################\n# WORKSPACE MEMBER DEPS AND ALIASES\n###############################################################################\n\n_NORMAL_DEPENDENCIES = {\n    \"third_party/rust\": {\n        _COMMON_CONDITION: {\n            \"mdbook\": Label(\"@crate_index//:mdbook-0.4.36\"),\n            \"protoc-gen-prost\": Label(\"@crate_index//:protoc-gen-prost-0.2.3\"),\n        },\n    },\n}\n\n\n_NORMAL_ALIASES = {\n    \"third_party/rust\": {\n        _COMMON_CONDITION: {\n        },\n    },\n}\n\n\n_NORMAL_DEV_DEPENDENCIES = {\n    \"third_party/rust\": {\n    },\n}\n\n\n_NORMAL_DEV_ALIASES = {\n    \"third_party/rust\": {\n    },\n}\n\n\n_PROC_MACRO_DEPENDENCIES = {\n    \"third_party/rust\": {\n    },\n}\n\n\n_PROC_MACRO_ALIASES = {\n    \"third_party/rust\": {\n    },\n}\n\n\n_PROC_MACRO_DEV_DEPENDENCIES = {\n    \"third_party/rust\": {\n    },\n}\n\n\n_PROC_MACRO_DEV_ALIASES = {\n    \"third_party/rust\": {\n    },\n}\n\n\n_BUILD_DEPENDENCIES = {\n    \"third_party/rust\": {\n    },\n}\n\n\n_BUILD_ALIASES = {\n    \"third_party/rust\": {\n    },\n}\n\n\n_BUILD_PROC_MACRO_DEPENDENCIES = {\n    \"third_party/rust\": {\n    },\n}\n\n\n_BUILD_PROC_MACRO_ALIASES = {\n    \"third_party/rust\": {\n    },\n}\n\n\n_CONDITIONS = {\n    \"aarch64-linux-android\": [],\n    \"aarch64-pc-windows-gnullvm\": [],\n    \"cfg(all(any(target_os = \\\"android\\\", target_os = \\\"linux\\\"), any(rustix_use_libc, miri, not(all(target_os = \\\"linux\\\", target_endian = \\\"little\\\", any(target_arch = \\\"arm\\\", all(target_arch = \\\"aarch64\\\", target_pointer_width = \\\"64\\\"), target_arch = \\\"riscv64\\\", all(rustix_use_experimental_asm, target_arch = \\\"powerpc64\\\"), all(rustix_use_experimental_asm, target_arch = \\\"mips\\\"), all(rustix_use_experimental_asm, target_arch = \\\"mips32r6\\\"), all(rustix_use_experimental_asm, target_arch = \\\"mips64\\\"), all(rustix_use_experimental_asm, target_arch = \\\"mips64r6\\\"), target_arch = \\\"x86\\\", all(target_arch = \\\"x86_64\\\", target_pointer_width = \\\"64\\\")))))))\": [],\n    \"cfg(all(not(rustix_use_libc), not(miri), target_os = \\\"linux\\\", target_endian = \\\"little\\\", any(target_arch = \\\"arm\\\", all(target_arch = \\\"aarch64\\\", target_pointer_width = \\\"64\\\"), target_arch = \\\"riscv64\\\", all(rustix_use_experimental_asm, target_arch = \\\"powerpc64\\\"), all(rustix_use_experimental_asm, target_arch = \\\"mips\\\"), all(rustix_use_experimental_asm, target_arch = \\\"mips32r6\\\"), all(rustix_use_experimental_asm, target_arch = \\\"mips64\\\"), all(rustix_use_experimental_asm, target_arch = \\\"mips64r6\\\"), target_arch = \\\"x86\\\", all(target_arch = \\\"x86_64\\\", target_pointer_width = \\\"64\\\"))))\": [\"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\"],\n    \"cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \\\"linux\\\", target_endian = \\\"little\\\", any(target_arch = \\\"arm\\\", all(target_arch = \\\"aarch64\\\", target_pointer_width = \\\"64\\\"), target_arch = \\\"riscv64\\\", all(rustix_use_experimental_asm, target_arch = \\\"powerpc64\\\"), all(rustix_use_experimental_asm, target_arch = \\\"mips\\\"), all(rustix_use_experimental_asm, target_arch = \\\"mips32r6\\\"), all(rustix_use_experimental_asm, target_arch = \\\"mips64\\\"), all(rustix_use_experimental_asm, target_arch = \\\"mips64r6\\\"), target_arch = \\\"x86\\\", all(target_arch = \\\"x86_64\\\", target_pointer_width = \\\"64\\\")))))))\": [],\n    \"cfg(all(target_arch = \\\"aarch64\\\", target_env = \\\"msvc\\\", not(windows_raw_dylib)))\": [],\n    \"cfg(all(target_arch = \\\"aarch64\\\", target_os = \\\"linux\\\"))\": [],\n    \"cfg(all(target_arch = \\\"aarch64\\\", target_vendor = \\\"apple\\\"))\": [],\n    \"cfg(all(target_arch = \\\"loongarch64\\\", target_os = \\\"linux\\\"))\": [],\n    \"cfg(all(target_arch = \\\"x86\\\", target_env = \\\"gnu\\\", not(windows_raw_dylib)))\": [],\n    \"cfg(all(target_arch = \\\"x86\\\", target_env = \\\"msvc\\\", not(windows_raw_dylib)))\": [],\n    \"cfg(all(target_arch = \\\"x86_64\\\", target_env = \\\"gnu\\\", not(target_abi = \\\"llvm\\\"), not(windows_raw_dylib)))\": [\"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\"],\n    \"cfg(all(target_arch = \\\"x86_64\\\", target_env = \\\"msvc\\\", not(windows_raw_dylib)))\": [],\n    \"cfg(any(target_arch = \\\"aarch64\\\", target_arch = \\\"x86\\\", target_arch = \\\"x86_64\\\"))\": [\"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\"],\n    \"cfg(any(target_arch = \\\"aarch64\\\", target_arch = \\\"x86_64\\\", target_arch = \\\"x86\\\"))\": [\"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\"],\n    \"cfg(any(target_os = \\\"freebsd\\\", target_os = \\\"openbsd\\\", target_os = \\\"netbsd\\\", target_os = \\\"dragonflybsd\\\"))\": [],\n    \"cfg(any(target_os = \\\"linux\\\", target_os = \\\"android\\\"))\": [\"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\"],\n    \"cfg(any(target_os = \\\"macos\\\", target_os = \\\"ios\\\"))\": [],\n    \"cfg(any(unix, target_os = \\\"wasi\\\"))\": [\"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\"],\n    \"cfg(any(windows, unix, target_os = \\\"redox\\\"))\": [\"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\"],\n    \"cfg(not(all(windows, target_env = \\\"msvc\\\", not(target_vendor = \\\"uwp\\\"))))\": [\"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\"],\n    \"cfg(not(any(windows, target_os = \\\"hermit\\\", target_os = \\\"unknown\\\")))\": [\"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\"],\n    \"cfg(not(windows))\": [\"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\"],\n    \"cfg(target_arch = \\\"wasm32\\\")\": [],\n    \"cfg(target_os = \\\"android\\\")\": [],\n    \"cfg(target_os = \\\"haiku\\\")\": [],\n    \"cfg(target_os = \\\"hermit\\\")\": [],\n    \"cfg(target_os = \\\"linux\\\")\": [\"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\"],\n    \"cfg(target_os = \\\"macos\\\")\": [],\n    \"cfg(target_os = \\\"redox\\\")\": [],\n    \"cfg(target_os = \\\"wasi\\\")\": [],\n    \"cfg(target_os = \\\"windows\\\")\": [],\n    \"cfg(tokio_taskdump)\": [],\n    \"cfg(unix)\": [\"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\"],\n    \"cfg(windows)\": [],\n    \"i686-pc-windows-gnu\": [],\n    \"x86_64-pc-windows-gnu\": [],\n    \"x86_64-pc-windows-gnullvm\": [],\n    \"x86_64-unknown-linux-gnu\": [\"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\"],\n}\n\n###############################################################################\n\ndef crate_repositories():\n    \"\"\"A macro for defining repositories for all generated crates.\n\n    Returns:\n      A list of repos visible to the module through the module extension.\n    \"\"\"\n    maybe(\n        http_archive,\n        name = \"crate_index__addr2line-0.21.0\",\n        sha256 = \"8a30b2e23b9e17a9f90641c7ab1549cd9b44f296d3ccbf309d2863cfe398a0cb\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/addr2line/0.21.0/download\"],\n        strip_prefix = \"addr2line-0.21.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.addr2line-0.21.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__adler-1.0.2\",\n        sha256 = \"f26201604c87b1e01bd3d98f8d5d9a8fcbb815e8cedb41ffccbeb4bf593a35fe\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/adler/1.0.2/download\"],\n        strip_prefix = \"adler-1.0.2\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.adler-1.0.2.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__aho-corasick-1.1.2\",\n        sha256 = \"b2969dcb958b36655471fc61f7e416fa76033bdd4bfed0678d8fee1e2d07a1f0\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/aho-corasick/1.1.2/download\"],\n        strip_prefix = \"aho-corasick-1.1.2\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.aho-corasick-1.1.2.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__ammonia-3.3.0\",\n        sha256 = \"64e6d1c7838db705c9b756557ee27c384ce695a1c51a6fe528784cb1c6840170\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/ammonia/3.3.0/download\"],\n        strip_prefix = \"ammonia-3.3.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.ammonia-3.3.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__android-tzdata-0.1.1\",\n        sha256 = \"e999941b234f3131b00bc13c22d06e8c5ff726d1b6318ac7eb276997bbb4fef0\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/android-tzdata/0.1.1/download\"],\n        strip_prefix = \"android-tzdata-0.1.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.android-tzdata-0.1.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__android_system_properties-0.1.5\",\n        sha256 = \"819e7219dbd41043ac279b19830f2efc897156490d7fd6ea916720117ee66311\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/android_system_properties/0.1.5/download\"],\n        strip_prefix = \"android_system_properties-0.1.5\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.android_system_properties-0.1.5.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__anstream-0.6.7\",\n        sha256 = \"4cd2405b3ac1faab2990b74d728624cd9fd115651fcecc7c2d8daf01376275ba\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/anstream/0.6.7/download\"],\n        strip_prefix = \"anstream-0.6.7\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.anstream-0.6.7.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__anstyle-1.0.4\",\n        sha256 = \"7079075b41f533b8c61d2a4d073c4676e1f8b249ff94a393b0595db304e0dd87\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/anstyle/1.0.4/download\"],\n        strip_prefix = \"anstyle-1.0.4\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.anstyle-1.0.4.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__anstyle-parse-0.2.3\",\n        sha256 = \"c75ac65da39e5fe5ab759307499ddad880d724eed2f6ce5b5e8a26f4f387928c\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/anstyle-parse/0.2.3/download\"],\n        strip_prefix = \"anstyle-parse-0.2.3\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.anstyle-parse-0.2.3.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__anstyle-query-1.0.2\",\n        sha256 = \"e28923312444cdd728e4738b3f9c9cac739500909bb3d3c94b43551b16517648\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/anstyle-query/1.0.2/download\"],\n        strip_prefix = \"anstyle-query-1.0.2\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.anstyle-query-1.0.2.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__anstyle-wincon-3.0.2\",\n        sha256 = \"1cd54b81ec8d6180e24654d0b371ad22fc3dd083b6ff8ba325b72e00c87660a7\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/anstyle-wincon/3.0.2/download\"],\n        strip_prefix = \"anstyle-wincon-3.0.2\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.anstyle-wincon-3.0.2.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__anyhow-1.0.79\",\n        sha256 = \"080e9890a082662b09c1ad45f567faeeb47f22b5fb23895fbe1e651e718e25ca\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/anyhow/1.0.79/download\"],\n        strip_prefix = \"anyhow-1.0.79\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.anyhow-1.0.79.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__autocfg-1.1.0\",\n        sha256 = \"d468802bab17cbc0cc575e9b053f41e72aa36bfa6b7f55e3529ffa43161b97fa\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/autocfg/1.1.0/download\"],\n        strip_prefix = \"autocfg-1.1.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.autocfg-1.1.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__backtrace-0.3.69\",\n        sha256 = \"2089b7e3f35b9dd2d0ed921ead4f6d318c27680d4a5bd167b3ee120edb105837\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/backtrace/0.3.69/download\"],\n        strip_prefix = \"backtrace-0.3.69\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.backtrace-0.3.69.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__base64-0.21.7\",\n        sha256 = \"9d297deb1925b89f2ccc13d7635fa0714f12c87adce1c75356b39ca9b7178567\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/base64/0.21.7/download\"],\n        strip_prefix = \"base64-0.21.7\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.base64-0.21.7.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__bitflags-1.3.2\",\n        sha256 = \"bef38d45163c2f1dde094a7dfd33ccf595c92905c8f8f4fdc18d06fb1037718a\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/bitflags/1.3.2/download\"],\n        strip_prefix = \"bitflags-1.3.2\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.bitflags-1.3.2.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__bitflags-2.4.1\",\n        sha256 = \"327762f6e5a765692301e5bb513e0d9fef63be86bbc14528052b1cd3e6f03e07\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/bitflags/2.4.1/download\"],\n        strip_prefix = \"bitflags-2.4.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.bitflags-2.4.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__block-buffer-0.10.4\",\n        sha256 = \"3078c7629b62d3f0439517fa394996acacc5cbc91c5a20d8c658e77abd503a71\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/block-buffer/0.10.4/download\"],\n        strip_prefix = \"block-buffer-0.10.4\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.block-buffer-0.10.4.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__bstr-1.9.0\",\n        sha256 = \"c48f0051a4b4c5e0b6d365cd04af53aeaa209e3cc15ec2cdb69e73cc87fbd0dc\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/bstr/1.9.0/download\"],\n        strip_prefix = \"bstr-1.9.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.bstr-1.9.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__bumpalo-3.14.0\",\n        sha256 = \"7f30e7476521f6f8af1a1c4c0b8cc94f0bee37d91763d0ca2665f299b6cd8aec\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/bumpalo/3.14.0/download\"],\n        strip_prefix = \"bumpalo-3.14.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.bumpalo-3.14.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__byteorder-1.5.0\",\n        sha256 = \"1fd0f2584146f6f2ef48085050886acf353beff7305ebd1ae69500e27c67f64b\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/byteorder/1.5.0/download\"],\n        strip_prefix = \"byteorder-1.5.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.byteorder-1.5.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__bytes-1.5.0\",\n        sha256 = \"a2bd12c1caf447e69cd4528f47f94d203fd2582878ecb9e9465484c4148a8223\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/bytes/1.5.0/download\"],\n        strip_prefix = \"bytes-1.5.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.bytes-1.5.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__cc-1.0.83\",\n        sha256 = \"f1174fb0b6ec23863f8b971027804a42614e347eafb0a95bf0b12cdae21fc4d0\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/cc/1.0.83/download\"],\n        strip_prefix = \"cc-1.0.83\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.cc-1.0.83.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__cfg-if-1.0.0\",\n        sha256 = \"baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/cfg-if/1.0.0/download\"],\n        strip_prefix = \"cfg-if-1.0.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.cfg-if-1.0.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__chrono-0.4.31\",\n        sha256 = \"7f2c685bad3eb3d45a01354cedb7d5faa66194d1d58ba6e267a8de788f79db38\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/chrono/0.4.31/download\"],\n        strip_prefix = \"chrono-0.4.31\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.chrono-0.4.31.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__clap-4.4.16\",\n        sha256 = \"58e54881c004cec7895b0068a0a954cd5d62da01aef83fa35b1e594497bf5445\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/clap/4.4.16/download\"],\n        strip_prefix = \"clap-4.4.16\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.clap-4.4.16.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__clap_builder-4.4.16\",\n        sha256 = \"59cb82d7f531603d2fd1f507441cdd35184fa81beff7bd489570de7f773460bb\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/clap_builder/4.4.16/download\"],\n        strip_prefix = \"clap_builder-4.4.16\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.clap_builder-4.4.16.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__clap_complete-4.4.6\",\n        sha256 = \"97aeaa95557bd02f23fbb662f981670c3d20c5a26e69f7354b28f57092437fcd\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/clap_complete/4.4.6/download\"],\n        strip_prefix = \"clap_complete-4.4.6\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.clap_complete-4.4.6.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__clap_lex-0.6.0\",\n        sha256 = \"702fc72eb24e5a1e48ce58027a675bc24edd52096d5397d4aea7c6dd9eca0bd1\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/clap_lex/0.6.0/download\"],\n        strip_prefix = \"clap_lex-0.6.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.clap_lex-0.6.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__colorchoice-1.0.0\",\n        sha256 = \"acbf1af155f9b9ef647e42cdc158db4b64a1b61f743629225fde6f3e0be2a7c7\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/colorchoice/1.0.0/download\"],\n        strip_prefix = \"colorchoice-1.0.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.colorchoice-1.0.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__core-foundation-sys-0.8.6\",\n        sha256 = \"06ea2b9bc92be3c2baa9334a323ebca2d6f074ff852cd1d7b11064035cd3868f\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/core-foundation-sys/0.8.6/download\"],\n        strip_prefix = \"core-foundation-sys-0.8.6\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.core-foundation-sys-0.8.6.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__cpufeatures-0.2.12\",\n        sha256 = \"53fe5e26ff1b7aef8bca9c6080520cfb8d9333c7568e1829cef191a9723e5504\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/cpufeatures/0.2.12/download\"],\n        strip_prefix = \"cpufeatures-0.2.12\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.cpufeatures-0.2.12.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__crossbeam-channel-0.5.11\",\n        sha256 = \"176dc175b78f56c0f321911d9c8eb2b77a78a4860b9c19db83835fea1a46649b\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/crossbeam-channel/0.5.11/download\"],\n        strip_prefix = \"crossbeam-channel-0.5.11\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.crossbeam-channel-0.5.11.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__crossbeam-deque-0.8.5\",\n        sha256 = \"613f8cc01fe9cf1a3eb3d7f488fd2fa8388403e97039e2f73692932e291a770d\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/crossbeam-deque/0.8.5/download\"],\n        strip_prefix = \"crossbeam-deque-0.8.5\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.crossbeam-deque-0.8.5.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__crossbeam-epoch-0.9.18\",\n        sha256 = \"5b82ac4a3c2ca9c3460964f020e1402edd5753411d7737aa39c3714ad1b5420e\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/crossbeam-epoch/0.9.18/download\"],\n        strip_prefix = \"crossbeam-epoch-0.9.18\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.crossbeam-epoch-0.9.18.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__crossbeam-utils-0.8.19\",\n        sha256 = \"248e3bacc7dc6baa3b21e405ee045c3047101a49145e7e9eca583ab4c2ca5345\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/crossbeam-utils/0.8.19/download\"],\n        strip_prefix = \"crossbeam-utils-0.8.19\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.crossbeam-utils-0.8.19.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__crypto-common-0.1.6\",\n        sha256 = \"1bfb12502f3fc46cca1bb51ac28df9d618d813cdc3d2f25b9fe775a34af26bb3\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/crypto-common/0.1.6/download\"],\n        strip_prefix = \"crypto-common-0.1.6\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.crypto-common-0.1.6.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__data-encoding-2.5.0\",\n        sha256 = \"7e962a19be5cfc3f3bf6dd8f61eb50107f356ad6270fbb3ed41476571db78be5\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/data-encoding/2.5.0/download\"],\n        strip_prefix = \"data-encoding-2.5.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.data-encoding-2.5.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__digest-0.10.7\",\n        sha256 = \"9ed9a281f7bc9b7576e61468ba615a66a5c8cfdff42420a70aa82701a3b1e292\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/digest/0.10.7/download\"],\n        strip_prefix = \"digest-0.10.7\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.digest-0.10.7.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__either-1.9.0\",\n        sha256 = \"a26ae43d7bcc3b814de94796a5e736d4029efb0ee900c12e2d54c993ad1a1e07\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/either/1.9.0/download\"],\n        strip_prefix = \"either-1.9.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.either-1.9.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__elasticlunr-rs-3.0.2\",\n        sha256 = \"41e83863a500656dfa214fee6682de9c5b9f03de6860fec531235ed2ae9f6571\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/elasticlunr-rs/3.0.2/download\"],\n        strip_prefix = \"elasticlunr-rs-3.0.2\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.elasticlunr-rs-3.0.2.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__env_logger-0.10.1\",\n        sha256 = \"95b3f3e67048839cb0d0781f445682a35113da7121f7c949db0e2be96a4fbece\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/env_logger/0.10.1/download\"],\n        strip_prefix = \"env_logger-0.10.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.env_logger-0.10.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__equivalent-1.0.1\",\n        sha256 = \"5443807d6dff69373d433ab9ef5378ad8df50ca6298caf15de6e52e24aaf54d5\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/equivalent/1.0.1/download\"],\n        strip_prefix = \"equivalent-1.0.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.equivalent-1.0.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__errno-0.3.8\",\n        sha256 = \"a258e46cdc063eb8519c00b9fc845fc47bcfca4130e2f08e88665ceda8474245\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/errno/0.3.8/download\"],\n        strip_prefix = \"errno-0.3.8\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.errno-0.3.8.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__fastrand-2.0.1\",\n        sha256 = \"25cbce373ec4653f1a01a31e8a5e5ec0c622dc27ff9c4e6606eefef5cbbed4a5\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/fastrand/2.0.1/download\"],\n        strip_prefix = \"fastrand-2.0.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.fastrand-2.0.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__filetime-0.2.23\",\n        sha256 = \"1ee447700ac8aa0b2f2bd7bc4462ad686ba06baa6727ac149a2d6277f0d240fd\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/filetime/0.2.23/download\"],\n        strip_prefix = \"filetime-0.2.23\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.filetime-0.2.23.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__fixedbitset-0.4.2\",\n        sha256 = \"0ce7134b9999ecaf8bcd65542e436736ef32ddca1b3e06094cb6ec5755203b80\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/fixedbitset/0.4.2/download\"],\n        strip_prefix = \"fixedbitset-0.4.2\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.fixedbitset-0.4.2.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__fnv-1.0.7\",\n        sha256 = \"3f9eec918d3f24069decb9af1554cad7c880e2da24a9afd88aca000531ab82c1\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/fnv/1.0.7/download\"],\n        strip_prefix = \"fnv-1.0.7\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.fnv-1.0.7.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__form_urlencoded-1.2.1\",\n        sha256 = \"e13624c2627564efccf4934284bdd98cbaa14e79b0b5a141218e507b3a823456\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/form_urlencoded/1.2.1/download\"],\n        strip_prefix = \"form_urlencoded-1.2.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.form_urlencoded-1.2.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__fsevent-sys-4.1.0\",\n        sha256 = \"76ee7a02da4d231650c7cea31349b889be2f45ddb3ef3032d2ec8185f6313fd2\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/fsevent-sys/4.1.0/download\"],\n        strip_prefix = \"fsevent-sys-4.1.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.fsevent-sys-4.1.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__futf-0.1.5\",\n        sha256 = \"df420e2e84819663797d1ec6544b13c5be84629e7bb00dc960d6917db2987843\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/futf/0.1.5/download\"],\n        strip_prefix = \"futf-0.1.5\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.futf-0.1.5.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__futures-channel-0.3.30\",\n        sha256 = \"eac8f7d7865dcb88bd4373ab671c8cf4508703796caa2b1985a9ca867b3fcb78\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/futures-channel/0.3.30/download\"],\n        strip_prefix = \"futures-channel-0.3.30\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.futures-channel-0.3.30.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__futures-core-0.3.30\",\n        sha256 = \"dfc6580bb841c5a68e9ef15c77ccc837b40a7504914d52e47b8b0e9bbda25a1d\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/futures-core/0.3.30/download\"],\n        strip_prefix = \"futures-core-0.3.30\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.futures-core-0.3.30.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__futures-macro-0.3.30\",\n        sha256 = \"87750cf4b7a4c0625b1529e4c543c2182106e4dedc60a2a6455e00d212c489ac\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/futures-macro/0.3.30/download\"],\n        strip_prefix = \"futures-macro-0.3.30\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.futures-macro-0.3.30.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__futures-sink-0.3.30\",\n        sha256 = \"9fb8e00e87438d937621c1c6269e53f536c14d3fbd6a042bb24879e57d474fb5\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/futures-sink/0.3.30/download\"],\n        strip_prefix = \"futures-sink-0.3.30\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.futures-sink-0.3.30.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__futures-task-0.3.30\",\n        sha256 = \"38d84fa142264698cdce1a9f9172cf383a0c82de1bddcf3092901442c4097004\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/futures-task/0.3.30/download\"],\n        strip_prefix = \"futures-task-0.3.30\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.futures-task-0.3.30.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__futures-util-0.3.30\",\n        sha256 = \"3d6401deb83407ab3da39eba7e33987a73c3df0c82b4bb5813ee871c19c41d48\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/futures-util/0.3.30/download\"],\n        strip_prefix = \"futures-util-0.3.30\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.futures-util-0.3.30.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__generic-array-0.14.7\",\n        sha256 = \"85649ca51fd72272d7821adaf274ad91c288277713d9c18820d8499a7ff69e9a\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/generic-array/0.14.7/download\"],\n        strip_prefix = \"generic-array-0.14.7\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.generic-array-0.14.7.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__getrandom-0.2.12\",\n        sha256 = \"190092ea657667030ac6a35e305e62fc4dd69fd98ac98631e5d3a2b1575a12b5\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/getrandom/0.2.12/download\"],\n        strip_prefix = \"getrandom-0.2.12\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.getrandom-0.2.12.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__gimli-0.28.1\",\n        sha256 = \"4271d37baee1b8c7e4b708028c57d816cf9d2434acb33a549475f78c181f6253\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/gimli/0.28.1/download\"],\n        strip_prefix = \"gimli-0.28.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.gimli-0.28.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__globset-0.4.14\",\n        sha256 = \"57da3b9b5b85bd66f31093f8c408b90a74431672542466497dcbdfdc02034be1\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/globset/0.4.14/download\"],\n        strip_prefix = \"globset-0.4.14\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.globset-0.4.14.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__h2-0.3.23\",\n        sha256 = \"b553656127a00601c8ae5590fcfdc118e4083a7924b6cf4ffc1ea4b99dc429d7\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/h2/0.3.23/download\"],\n        strip_prefix = \"h2-0.3.23\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.h2-0.3.23.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__handlebars-4.5.0\",\n        sha256 = \"faa67bab9ff362228eb3d00bd024a4965d8231bbb7921167f0cfa66c6626b225\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/handlebars/4.5.0/download\"],\n        strip_prefix = \"handlebars-4.5.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.handlebars-4.5.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__hashbrown-0.14.3\",\n        sha256 = \"290f1a1d9242c78d09ce40a5e87e7554ee637af1351968159f4952f028f75604\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/hashbrown/0.14.3/download\"],\n        strip_prefix = \"hashbrown-0.14.3\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.hashbrown-0.14.3.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__headers-0.3.9\",\n        sha256 = \"06683b93020a07e3dbcf5f8c0f6d40080d725bea7936fc01ad345c01b97dc270\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/headers/0.3.9/download\"],\n        strip_prefix = \"headers-0.3.9\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.headers-0.3.9.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__headers-core-0.2.0\",\n        sha256 = \"e7f66481bfee273957b1f20485a4ff3362987f85b2c236580d81b4eb7a326429\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/headers-core/0.2.0/download\"],\n        strip_prefix = \"headers-core-0.2.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.headers-core-0.2.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__heck-0.4.1\",\n        sha256 = \"95505c38b4572b2d910cecb0281560f54b440a19336cbbcb27bf6ce6adc6f5a8\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/heck/0.4.1/download\"],\n        strip_prefix = \"heck-0.4.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.heck-0.4.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__hermit-abi-0.3.3\",\n        sha256 = \"d77f7ec81a6d05a3abb01ab6eb7590f6083d08449fe5a1c8b1e620283546ccb7\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/hermit-abi/0.3.3/download\"],\n        strip_prefix = \"hermit-abi-0.3.3\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.hermit-abi-0.3.3.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__home-0.5.9\",\n        sha256 = \"e3d1354bf6b7235cb4a0576c2619fd4ed18183f689b12b006a0ee7329eeff9a5\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/home/0.5.9/download\"],\n        strip_prefix = \"home-0.5.9\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.home-0.5.9.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__html5ever-0.26.0\",\n        sha256 = \"bea68cab48b8459f17cf1c944c67ddc572d272d9f2b274140f223ecb1da4a3b7\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/html5ever/0.26.0/download\"],\n        strip_prefix = \"html5ever-0.26.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.html5ever-0.26.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__http-0.2.11\",\n        sha256 = \"8947b1a6fad4393052c7ba1f4cd97bed3e953a95c79c92ad9b051a04611d9fbb\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/http/0.2.11/download\"],\n        strip_prefix = \"http-0.2.11\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.http-0.2.11.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__http-body-0.4.6\",\n        sha256 = \"7ceab25649e9960c0311ea418d17bee82c0dcec1bd053b5f9a66e265a693bed2\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/http-body/0.4.6/download\"],\n        strip_prefix = \"http-body-0.4.6\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.http-body-0.4.6.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__httparse-1.8.0\",\n        sha256 = \"d897f394bad6a705d5f4104762e116a75639e470d80901eed05a860a95cb1904\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/httparse/1.8.0/download\"],\n        strip_prefix = \"httparse-1.8.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.httparse-1.8.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__httpdate-1.0.3\",\n        sha256 = \"df3b46402a9d5adb4c86a0cf463f42e19994e3ee891101b1841f30a545cb49a9\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/httpdate/1.0.3/download\"],\n        strip_prefix = \"httpdate-1.0.3\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.httpdate-1.0.3.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__humantime-2.1.0\",\n        sha256 = \"9a3a5bfb195931eeb336b2a7b4d761daec841b97f947d34394601737a7bba5e4\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/humantime/2.1.0/download\"],\n        strip_prefix = \"humantime-2.1.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.humantime-2.1.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__hyper-0.14.28\",\n        sha256 = \"bf96e135eb83a2a8ddf766e426a841d8ddd7449d5f00d34ea02b41d2f19eef80\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/hyper/0.14.28/download\"],\n        strip_prefix = \"hyper-0.14.28\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.hyper-0.14.28.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__iana-time-zone-0.1.59\",\n        sha256 = \"b6a67363e2aa4443928ce15e57ebae94fd8949958fd1223c4cfc0cd473ad7539\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/iana-time-zone/0.1.59/download\"],\n        strip_prefix = \"iana-time-zone-0.1.59\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.iana-time-zone-0.1.59.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__iana-time-zone-haiku-0.1.2\",\n        sha256 = \"f31827a206f56af32e590ba56d5d2d085f558508192593743f16b2306495269f\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/iana-time-zone-haiku/0.1.2/download\"],\n        strip_prefix = \"iana-time-zone-haiku-0.1.2\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.iana-time-zone-haiku-0.1.2.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__idna-0.5.0\",\n        sha256 = \"634d9b1461af396cad843f47fdba5597a4f9e6ddd4bfb6ff5d85028c25cb12f6\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/idna/0.5.0/download\"],\n        strip_prefix = \"idna-0.5.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.idna-0.5.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__ignore-0.4.22\",\n        sha256 = \"b46810df39e66e925525d6e38ce1e7f6e1d208f72dc39757880fcb66e2c58af1\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/ignore/0.4.22/download\"],\n        strip_prefix = \"ignore-0.4.22\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.ignore-0.4.22.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__indexmap-2.1.0\",\n        sha256 = \"d530e1a18b1cb4c484e6e34556a0d948706958449fca0cab753d649f2bce3d1f\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/indexmap/2.1.0/download\"],\n        strip_prefix = \"indexmap-2.1.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.indexmap-2.1.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__inotify-0.9.6\",\n        sha256 = \"f8069d3ec154eb856955c1c0fbffefbf5f3c40a104ec912d4797314c1801abff\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/inotify/0.9.6/download\"],\n        strip_prefix = \"inotify-0.9.6\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.inotify-0.9.6.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__inotify-sys-0.1.5\",\n        sha256 = \"e05c02b5e89bff3b946cedeca278abc628fe811e604f027c45a8aa3cf793d0eb\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/inotify-sys/0.1.5/download\"],\n        strip_prefix = \"inotify-sys-0.1.5\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.inotify-sys-0.1.5.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__is-terminal-0.4.10\",\n        sha256 = \"0bad00257d07be169d870ab665980b06cdb366d792ad690bf2e76876dc503455\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/is-terminal/0.4.10/download\"],\n        strip_prefix = \"is-terminal-0.4.10\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.is-terminal-0.4.10.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__itertools-0.10.5\",\n        sha256 = \"b0fd2260e829bddf4cb6ea802289de2f86d6a7a690192fbe91b3f46e0f2c8473\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/itertools/0.10.5/download\"],\n        strip_prefix = \"itertools-0.10.5\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.itertools-0.10.5.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__itoa-1.0.10\",\n        sha256 = \"b1a46d1a171d865aa5f83f92695765caa047a9b4cbae2cbf37dbd613a793fd4c\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/itoa/1.0.10/download\"],\n        strip_prefix = \"itoa-1.0.10\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.itoa-1.0.10.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__js-sys-0.3.66\",\n        sha256 = \"cee9c64da59eae3b50095c18d3e74f8b73c0b86d2792824ff01bbce68ba229ca\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/js-sys/0.3.66/download\"],\n        strip_prefix = \"js-sys-0.3.66\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.js-sys-0.3.66.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__kqueue-1.0.8\",\n        sha256 = \"7447f1ca1b7b563588a205fe93dea8df60fd981423a768bc1c0ded35ed147d0c\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/kqueue/1.0.8/download\"],\n        strip_prefix = \"kqueue-1.0.8\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.kqueue-1.0.8.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__kqueue-sys-1.0.4\",\n        sha256 = \"ed9625ffda8729b85e45cf04090035ac368927b8cebc34898e7c120f52e4838b\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/kqueue-sys/1.0.4/download\"],\n        strip_prefix = \"kqueue-sys-1.0.4\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.kqueue-sys-1.0.4.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__lazy_static-1.4.0\",\n        sha256 = \"e2abad23fbc42b3700f2f279844dc832adb2b2eb069b2df918f455c4e18cc646\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/lazy_static/1.4.0/download\"],\n        strip_prefix = \"lazy_static-1.4.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.lazy_static-1.4.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__libc-0.2.152\",\n        sha256 = \"13e3bf6590cbc649f4d1a3eefc9d5d6eb746f5200ffb04e5e142700b8faa56e7\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/libc/0.2.152/download\"],\n        strip_prefix = \"libc-0.2.152\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.libc-0.2.152.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__linux-raw-sys-0.4.12\",\n        sha256 = \"c4cd1a83af159aa67994778be9070f0ae1bd732942279cabb14f86f986a21456\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/linux-raw-sys/0.4.12/download\"],\n        strip_prefix = \"linux-raw-sys-0.4.12\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.linux-raw-sys-0.4.12.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__lock_api-0.4.11\",\n        sha256 = \"3c168f8615b12bc01f9c17e2eb0cc07dcae1940121185446edc3744920e8ef45\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/lock_api/0.4.11/download\"],\n        strip_prefix = \"lock_api-0.4.11\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.lock_api-0.4.11.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__log-0.4.20\",\n        sha256 = \"b5e6163cb8c49088c2c36f57875e58ccd8c87c7427f7fbd50ea6710b2f3f2e8f\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/log/0.4.20/download\"],\n        strip_prefix = \"log-0.4.20\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.log-0.4.20.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__mac-0.1.1\",\n        sha256 = \"c41e0c4fef86961ac6d6f8a82609f55f31b05e4fce149ac5710e439df7619ba4\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/mac/0.1.1/download\"],\n        strip_prefix = \"mac-0.1.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.mac-0.1.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__maplit-1.0.2\",\n        sha256 = \"3e2e65a1a2e43cfcb47a895c4c8b10d1f4a61097f9f254f183aee60cad9c651d\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/maplit/1.0.2/download\"],\n        strip_prefix = \"maplit-1.0.2\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.maplit-1.0.2.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__markup5ever-0.11.0\",\n        sha256 = \"7a2629bb1404f3d34c2e921f21fd34ba00b206124c81f65c50b43b6aaefeb016\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/markup5ever/0.11.0/download\"],\n        strip_prefix = \"markup5ever-0.11.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.markup5ever-0.11.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__mdbook-0.4.36\",\n        sha256 = \"80992cb0e05f22cc052c99f8e883f1593b891014b96a8b4637fd274d7030c85e\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/mdbook/0.4.36/download\"],\n        strip_prefix = \"mdbook-0.4.36\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.mdbook-0.4.36.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__memchr-2.7.1\",\n        sha256 = \"523dc4f511e55ab87b694dc30d0f820d60906ef06413f93d4d7a1385599cc149\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/memchr/2.7.1/download\"],\n        strip_prefix = \"memchr-2.7.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.memchr-2.7.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__mime-0.3.17\",\n        sha256 = \"6877bb514081ee2a7ff5ef9de3281f14a4dd4bceac4c09388074a6b5df8a139a\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/mime/0.3.17/download\"],\n        strip_prefix = \"mime-0.3.17\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.mime-0.3.17.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__mime_guess-2.0.4\",\n        sha256 = \"4192263c238a5f0d0c6bfd21f336a313a4ce1c450542449ca191bb657b4642ef\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/mime_guess/2.0.4/download\"],\n        strip_prefix = \"mime_guess-2.0.4\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.mime_guess-2.0.4.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__miniz_oxide-0.7.1\",\n        sha256 = \"e7810e0be55b428ada41041c41f32c9f1a42817901b4ccf45fa3d4b6561e74c7\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/miniz_oxide/0.7.1/download\"],\n        strip_prefix = \"miniz_oxide-0.7.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.miniz_oxide-0.7.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__mio-0.8.10\",\n        sha256 = \"8f3d0b296e374a4e6f3c7b0a1f5a51d748a0d34c85e7dc48fc3fa9a87657fe09\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/mio/0.8.10/download\"],\n        strip_prefix = \"mio-0.8.10\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.mio-0.8.10.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__multimap-0.8.3\",\n        sha256 = \"e5ce46fe64a9d73be07dcbe690a38ce1b293be448fd8ce1e6c1b8062c9f72c6a\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/multimap/0.8.3/download\"],\n        strip_prefix = \"multimap-0.8.3\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.multimap-0.8.3.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__new_debug_unreachable-1.0.4\",\n        sha256 = \"e4a24736216ec316047a1fc4252e27dabb04218aa4a3f37c6e7ddbf1f9782b54\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/new_debug_unreachable/1.0.4/download\"],\n        strip_prefix = \"new_debug_unreachable-1.0.4\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.new_debug_unreachable-1.0.4.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__normpath-1.1.1\",\n        sha256 = \"ec60c60a693226186f5d6edf073232bfb6464ed97eb22cf3b01c1e8198fd97f5\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/normpath/1.1.1/download\"],\n        strip_prefix = \"normpath-1.1.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.normpath-1.1.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__notify-6.1.1\",\n        sha256 = \"6205bd8bb1e454ad2e27422015fb5e4f2bcc7e08fa8f27058670d208324a4d2d\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/notify/6.1.1/download\"],\n        strip_prefix = \"notify-6.1.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.notify-6.1.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__notify-debouncer-mini-0.4.1\",\n        sha256 = \"5d40b221972a1fc5ef4d858a2f671fb34c75983eb385463dff3780eeff6a9d43\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/notify-debouncer-mini/0.4.1/download\"],\n        strip_prefix = \"notify-debouncer-mini-0.4.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.notify-debouncer-mini-0.4.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__num-traits-0.2.17\",\n        sha256 = \"39e3200413f237f41ab11ad6d161bc7239c84dcb631773ccd7de3dfe4b5c267c\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/num-traits/0.2.17/download\"],\n        strip_prefix = \"num-traits-0.2.17\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.num-traits-0.2.17.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__num_cpus-1.16.0\",\n        sha256 = \"4161fcb6d602d4d2081af7c3a45852d875a03dd337a6bfdd6e06407b61342a43\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/num_cpus/1.16.0/download\"],\n        strip_prefix = \"num_cpus-1.16.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.num_cpus-1.16.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__object-0.32.2\",\n        sha256 = \"a6a622008b6e321afc04970976f62ee297fdbaa6f95318ca343e3eebb9648441\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/object/0.32.2/download\"],\n        strip_prefix = \"object-0.32.2\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.object-0.32.2.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__once_cell-1.19.0\",\n        sha256 = \"3fdb12b2476b595f9358c5161aa467c2438859caa136dec86c26fdd2efe17b92\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/once_cell/1.19.0/download\"],\n        strip_prefix = \"once_cell-1.19.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.once_cell-1.19.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__opener-0.6.1\",\n        sha256 = \"6c62dcb6174f9cb326eac248f07e955d5d559c272730b6c03e396b443b562788\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/opener/0.6.1/download\"],\n        strip_prefix = \"opener-0.6.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.opener-0.6.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__parking_lot-0.12.1\",\n        sha256 = \"3742b2c103b9f06bc9fff0a37ff4912935851bee6d36f3c02bcc755bcfec228f\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/parking_lot/0.12.1/download\"],\n        strip_prefix = \"parking_lot-0.12.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.parking_lot-0.12.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__parking_lot_core-0.9.9\",\n        sha256 = \"4c42a9226546d68acdd9c0a280d17ce19bfe27a46bf68784e4066115788d008e\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/parking_lot_core/0.9.9/download\"],\n        strip_prefix = \"parking_lot_core-0.9.9\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.parking_lot_core-0.9.9.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__pathdiff-0.2.1\",\n        sha256 = \"8835116a5c179084a830efb3adc117ab007512b535bc1a21c991d3b32a6b44dd\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/pathdiff/0.2.1/download\"],\n        strip_prefix = \"pathdiff-0.2.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.pathdiff-0.2.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__percent-encoding-2.3.1\",\n        sha256 = \"e3148f5046208a5d56bcfc03053e3ca6334e51da8dfb19b6cdc8b306fae3283e\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/percent-encoding/2.3.1/download\"],\n        strip_prefix = \"percent-encoding-2.3.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.percent-encoding-2.3.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__pest-2.7.6\",\n        sha256 = \"1f200d8d83c44a45b21764d1916299752ca035d15ecd46faca3e9a2a2bf6ad06\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/pest/2.7.6/download\"],\n        strip_prefix = \"pest-2.7.6\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.pest-2.7.6.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__pest_derive-2.7.6\",\n        sha256 = \"bcd6ab1236bbdb3a49027e920e693192ebfe8913f6d60e294de57463a493cfde\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/pest_derive/2.7.6/download\"],\n        strip_prefix = \"pest_derive-2.7.6\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.pest_derive-2.7.6.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__pest_generator-2.7.6\",\n        sha256 = \"2a31940305ffc96863a735bef7c7994a00b325a7138fdbc5bda0f1a0476d3275\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/pest_generator/2.7.6/download\"],\n        strip_prefix = \"pest_generator-2.7.6\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.pest_generator-2.7.6.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__pest_meta-2.7.6\",\n        sha256 = \"a7ff62f5259e53b78d1af898941cdcdccfae7385cf7d793a6e55de5d05bb4b7d\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/pest_meta/2.7.6/download\"],\n        strip_prefix = \"pest_meta-2.7.6\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.pest_meta-2.7.6.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__petgraph-0.6.4\",\n        sha256 = \"e1d3afd2628e69da2be385eb6f2fd57c8ac7977ceeff6dc166ff1657b0e386a9\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/petgraph/0.6.4/download\"],\n        strip_prefix = \"petgraph-0.6.4\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.petgraph-0.6.4.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__phf-0.10.1\",\n        sha256 = \"fabbf1ead8a5bcbc20f5f8b939ee3f5b0f6f281b6ad3468b84656b658b455259\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/phf/0.10.1/download\"],\n        strip_prefix = \"phf-0.10.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.phf-0.10.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__phf_codegen-0.10.0\",\n        sha256 = \"4fb1c3a8bc4dd4e5cfce29b44ffc14bedd2ee294559a294e2a4d4c9e9a6a13cd\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/phf_codegen/0.10.0/download\"],\n        strip_prefix = \"phf_codegen-0.10.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.phf_codegen-0.10.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__phf_generator-0.10.0\",\n        sha256 = \"5d5285893bb5eb82e6aaf5d59ee909a06a16737a8970984dd7746ba9283498d6\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/phf_generator/0.10.0/download\"],\n        strip_prefix = \"phf_generator-0.10.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.phf_generator-0.10.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__phf_shared-0.10.0\",\n        sha256 = \"b6796ad771acdc0123d2a88dc428b5e38ef24456743ddb1744ed628f9815c096\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/phf_shared/0.10.0/download\"],\n        strip_prefix = \"phf_shared-0.10.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.phf_shared-0.10.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__pin-project-1.1.3\",\n        sha256 = \"fda4ed1c6c173e3fc7a83629421152e01d7b1f9b7f65fb301e490e8cfc656422\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/pin-project/1.1.3/download\"],\n        strip_prefix = \"pin-project-1.1.3\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.pin-project-1.1.3.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__pin-project-internal-1.1.3\",\n        sha256 = \"4359fd9c9171ec6e8c62926d6faaf553a8dc3f64e1507e76da7911b4f6a04405\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/pin-project-internal/1.1.3/download\"],\n        strip_prefix = \"pin-project-internal-1.1.3\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.pin-project-internal-1.1.3.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__pin-project-lite-0.2.13\",\n        sha256 = \"8afb450f006bf6385ca15ef45d71d2288452bc3683ce2e2cacc0d18e4be60b58\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/pin-project-lite/0.2.13/download\"],\n        strip_prefix = \"pin-project-lite-0.2.13\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.pin-project-lite-0.2.13.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__pin-utils-0.1.0\",\n        sha256 = \"8b870d8c151b6f2fb93e84a13146138f05d02ed11c7e7c54f8826aaaf7c9f184\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/pin-utils/0.1.0/download\"],\n        strip_prefix = \"pin-utils-0.1.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.pin-utils-0.1.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__ppv-lite86-0.2.17\",\n        sha256 = \"5b40af805b3121feab8a3c29f04d8ad262fa8e0561883e7653e024ae4479e6de\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/ppv-lite86/0.2.17/download\"],\n        strip_prefix = \"ppv-lite86-0.2.17\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.ppv-lite86-0.2.17.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__precomputed-hash-0.1.1\",\n        sha256 = \"925383efa346730478fb4838dbe9137d2a47675ad789c546d150a6e1dd4ab31c\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/precomputed-hash/0.1.1/download\"],\n        strip_prefix = \"precomputed-hash-0.1.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.precomputed-hash-0.1.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__proc-macro2-1.0.76\",\n        sha256 = \"95fc56cda0b5c3325f5fbbd7ff9fda9e02bb00bb3dac51252d2f1bfa1cb8cc8c\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/proc-macro2/1.0.76/download\"],\n        strip_prefix = \"proc-macro2-1.0.76\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.proc-macro2-1.0.76.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__prost-0.11.9\",\n        sha256 = \"0b82eaa1d779e9a4bc1c3217db8ffbeabaae1dca241bf70183242128d48681cd\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/prost/0.11.9/download\"],\n        strip_prefix = \"prost-0.11.9\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.prost-0.11.9.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__prost-build-0.11.9\",\n        sha256 = \"119533552c9a7ffacc21e099c24a0ac8bb19c2a2a3f363de84cd9b844feab270\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/prost-build/0.11.9/download\"],\n        strip_prefix = \"prost-build-0.11.9\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.prost-build-0.11.9.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__prost-derive-0.11.9\",\n        sha256 = \"e5d2d8d10f3c6ded6da8b05b5fb3b8a5082514344d56c9f871412d29b4e075b4\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/prost-derive/0.11.9/download\"],\n        strip_prefix = \"prost-derive-0.11.9\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.prost-derive-0.11.9.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__prost-types-0.11.9\",\n        sha256 = \"213622a1460818959ac1181aaeb2dc9c7f63df720db7d788b3e24eacd1983e13\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/prost-types/0.11.9/download\"],\n        strip_prefix = \"prost-types-0.11.9\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.prost-types-0.11.9.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__protoc-gen-prost-0.2.3\",\n        sha256 = \"10dfa031ad41fdcfb180de73ece3ed076250f1132a13ad6bba218699f612fb95\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/protoc-gen-prost/0.2.3/download\"],\n        strip_prefix = \"protoc-gen-prost-0.2.3\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.protoc-gen-prost-0.2.3.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__pulldown-cmark-0.9.3\",\n        sha256 = \"77a1a2f1f0a7ecff9c31abbe177637be0e97a0aef46cf8738ece09327985d998\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/pulldown-cmark/0.9.3/download\"],\n        strip_prefix = \"pulldown-cmark-0.9.3\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.pulldown-cmark-0.9.3.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__quote-1.0.35\",\n        sha256 = \"291ec9ab5efd934aaf503a6466c5d5251535d108ee747472c3977cc5acc868ef\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/quote/1.0.35/download\"],\n        strip_prefix = \"quote-1.0.35\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.quote-1.0.35.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__rand-0.8.5\",\n        sha256 = \"34af8d1a0e25924bc5b7c43c079c942339d8f0a8b57c39049bef581b46327404\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/rand/0.8.5/download\"],\n        strip_prefix = \"rand-0.8.5\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.rand-0.8.5.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__rand_chacha-0.3.1\",\n        sha256 = \"e6c10a63a0fa32252be49d21e7709d4d4baf8d231c2dbce1eaa8141b9b127d88\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/rand_chacha/0.3.1/download\"],\n        strip_prefix = \"rand_chacha-0.3.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.rand_chacha-0.3.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__rand_core-0.6.4\",\n        sha256 = \"ec0be4795e2f6a28069bec0b5ff3e2ac9bafc99e6a9a7dc3547996c5c816922c\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/rand_core/0.6.4/download\"],\n        strip_prefix = \"rand_core-0.6.4\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.rand_core-0.6.4.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__redox_syscall-0.4.1\",\n        sha256 = \"4722d768eff46b75989dd134e5c353f0d6296e5aaa3132e776cbdb56be7731aa\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/redox_syscall/0.4.1/download\"],\n        strip_prefix = \"redox_syscall-0.4.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.redox_syscall-0.4.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__regex-1.10.2\",\n        sha256 = \"380b951a9c5e80ddfd6136919eef32310721aa4aacd4889a8d39124b026ab343\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/regex/1.10.2/download\"],\n        strip_prefix = \"regex-1.10.2\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.regex-1.10.2.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__regex-automata-0.4.3\",\n        sha256 = \"5f804c7828047e88b2d32e2d7fe5a105da8ee3264f01902f796c8e067dc2483f\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/regex-automata/0.4.3/download\"],\n        strip_prefix = \"regex-automata-0.4.3\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.regex-automata-0.4.3.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__regex-syntax-0.8.2\",\n        sha256 = \"c08c74e62047bb2de4ff487b251e4a92e24f48745648451635cec7d591162d9f\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/regex-syntax/0.8.2/download\"],\n        strip_prefix = \"regex-syntax-0.8.2\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.regex-syntax-0.8.2.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__rustc-demangle-0.1.23\",\n        sha256 = \"d626bb9dae77e28219937af045c257c28bfd3f69333c512553507f5f9798cb76\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/rustc-demangle/0.1.23/download\"],\n        strip_prefix = \"rustc-demangle-0.1.23\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.rustc-demangle-0.1.23.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__rustix-0.38.28\",\n        sha256 = \"72e572a5e8ca657d7366229cdde4bd14c4eb5499a9573d4d366fe1b599daa316\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/rustix/0.38.28/download\"],\n        strip_prefix = \"rustix-0.38.28\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.rustix-0.38.28.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__rustls-pemfile-1.0.4\",\n        sha256 = \"1c74cae0a4cf6ccbbf5f359f08efdf8ee7e1dc532573bf0db71968cb56b1448c\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/rustls-pemfile/1.0.4/download\"],\n        strip_prefix = \"rustls-pemfile-1.0.4\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.rustls-pemfile-1.0.4.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__ryu-1.0.16\",\n        sha256 = \"f98d2aa92eebf49b69786be48e4477826b256916e84a57ff2a4f21923b48eb4c\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/ryu/1.0.16/download\"],\n        strip_prefix = \"ryu-1.0.16\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.ryu-1.0.16.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__same-file-1.0.6\",\n        sha256 = \"93fc1dc3aaa9bfed95e02e6eadabb4baf7e3078b0bd1b4d7b6b0b68378900502\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/same-file/1.0.6/download\"],\n        strip_prefix = \"same-file-1.0.6\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.same-file-1.0.6.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__scoped-tls-1.0.1\",\n        sha256 = \"e1cf6437eb19a8f4a6cc0f7dca544973b0b78843adbfeb3683d1a94a0024a294\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/scoped-tls/1.0.1/download\"],\n        strip_prefix = \"scoped-tls-1.0.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.scoped-tls-1.0.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__scopeguard-1.2.0\",\n        sha256 = \"94143f37725109f92c262ed2cf5e59bce7498c01bcc1502d7b9afe439a4e9f49\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/scopeguard/1.2.0/download\"],\n        strip_prefix = \"scopeguard-1.2.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.scopeguard-1.2.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__serde-1.0.195\",\n        sha256 = \"63261df402c67811e9ac6def069e4786148c4563f4b50fd4bf30aa370d626b02\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/serde/1.0.195/download\"],\n        strip_prefix = \"serde-1.0.195\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.serde-1.0.195.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__serde_derive-1.0.195\",\n        sha256 = \"46fe8f8603d81ba86327b23a2e9cdf49e1255fb94a4c5f297f6ee0547178ea2c\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/serde_derive/1.0.195/download\"],\n        strip_prefix = \"serde_derive-1.0.195\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.serde_derive-1.0.195.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__serde_json-1.0.111\",\n        sha256 = \"176e46fa42316f18edd598015a5166857fc835ec732f5215eac6b7bdbf0a84f4\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/serde_json/1.0.111/download\"],\n        strip_prefix = \"serde_json-1.0.111\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.serde_json-1.0.111.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__serde_urlencoded-0.7.1\",\n        sha256 = \"d3491c14715ca2294c4d6a88f15e84739788c1d030eed8c110436aafdaa2f3fd\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/serde_urlencoded/0.7.1/download\"],\n        strip_prefix = \"serde_urlencoded-0.7.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.serde_urlencoded-0.7.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__sha1-0.10.6\",\n        sha256 = \"e3bf829a2d51ab4a5ddf1352d8470c140cadc8301b2ae1789db023f01cedd6ba\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/sha1/0.10.6/download\"],\n        strip_prefix = \"sha1-0.10.6\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.sha1-0.10.6.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__sha2-0.10.8\",\n        sha256 = \"793db75ad2bcafc3ffa7c68b215fee268f537982cd901d132f89c6343f3a3dc8\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/sha2/0.10.8/download\"],\n        strip_prefix = \"sha2-0.10.8\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.sha2-0.10.8.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__shlex-1.2.0\",\n        sha256 = \"a7cee0529a6d40f580e7a5e6c495c8fbfe21b7b52795ed4bb5e62cdf92bc6380\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/shlex/1.2.0/download\"],\n        strip_prefix = \"shlex-1.2.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.shlex-1.2.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__siphasher-0.3.11\",\n        sha256 = \"38b58827f4464d87d377d175e90bf58eb00fd8716ff0a62f80356b5e61555d0d\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/siphasher/0.3.11/download\"],\n        strip_prefix = \"siphasher-0.3.11\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.siphasher-0.3.11.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__slab-0.4.9\",\n        sha256 = \"8f92a496fb766b417c996b9c5e57daf2f7ad3b0bebe1ccfca4856390e3d3bb67\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/slab/0.4.9/download\"],\n        strip_prefix = \"slab-0.4.9\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.slab-0.4.9.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__smallvec-1.11.2\",\n        sha256 = \"4dccd0940a2dcdf68d092b8cbab7dc0ad8fa938bf95787e1b916b0e3d0e8e970\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/smallvec/1.11.2/download\"],\n        strip_prefix = \"smallvec-1.11.2\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.smallvec-1.11.2.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__socket2-0.5.5\",\n        sha256 = \"7b5fac59a5cb5dd637972e5fca70daf0523c9067fcdc4842f053dae04a18f8e9\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/socket2/0.5.5/download\"],\n        strip_prefix = \"socket2-0.5.5\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.socket2-0.5.5.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__string_cache-0.8.7\",\n        sha256 = \"f91138e76242f575eb1d3b38b4f1362f10d3a43f47d182a5b359af488a02293b\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/string_cache/0.8.7/download\"],\n        strip_prefix = \"string_cache-0.8.7\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.string_cache-0.8.7.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__string_cache_codegen-0.5.2\",\n        sha256 = \"6bb30289b722be4ff74a408c3cc27edeaad656e06cb1fe8fa9231fa59c728988\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/string_cache_codegen/0.5.2/download\"],\n        strip_prefix = \"string_cache_codegen-0.5.2\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.string_cache_codegen-0.5.2.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__strsim-0.10.0\",\n        sha256 = \"73473c0e59e6d5812c5dfe2a064a6444949f089e20eec9a2e5506596494e4623\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/strsim/0.10.0/download\"],\n        strip_prefix = \"strsim-0.10.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.strsim-0.10.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__syn-1.0.109\",\n        sha256 = \"72b64191b275b66ffe2469e8af2c1cfe3bafa67b529ead792a6d0160888b4237\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/syn/1.0.109/download\"],\n        strip_prefix = \"syn-1.0.109\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.syn-1.0.109.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__syn-2.0.48\",\n        sha256 = \"0f3531638e407dfc0814761abb7c00a5b54992b849452a0646b7f65c9f770f3f\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/syn/2.0.48/download\"],\n        strip_prefix = \"syn-2.0.48\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.syn-2.0.48.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__tempfile-3.9.0\",\n        sha256 = \"01ce4141aa927a6d1bd34a041795abd0db1cccba5d5f24b009f694bdf3a1f3fa\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/tempfile/3.9.0/download\"],\n        strip_prefix = \"tempfile-3.9.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.tempfile-3.9.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__tendril-0.4.3\",\n        sha256 = \"d24a120c5fc464a3458240ee02c299ebcb9d67b5249c8848b09d639dca8d7bb0\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/tendril/0.4.3/download\"],\n        strip_prefix = \"tendril-0.4.3\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.tendril-0.4.3.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__termcolor-1.4.1\",\n        sha256 = \"06794f8f6c5c898b3275aebefa6b8a1cb24cd2c6c79397ab15774837a0bc5755\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/termcolor/1.4.1/download\"],\n        strip_prefix = \"termcolor-1.4.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.termcolor-1.4.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__terminal_size-0.3.0\",\n        sha256 = \"21bebf2b7c9e0a515f6e0f8c51dc0f8e4696391e6f1ff30379559f8365fb0df7\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/terminal_size/0.3.0/download\"],\n        strip_prefix = \"terminal_size-0.3.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.terminal_size-0.3.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__thiserror-1.0.56\",\n        sha256 = \"d54378c645627613241d077a3a79db965db602882668f9136ac42af9ecb730ad\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/thiserror/1.0.56/download\"],\n        strip_prefix = \"thiserror-1.0.56\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.thiserror-1.0.56.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__thiserror-impl-1.0.56\",\n        sha256 = \"fa0faa943b50f3db30a20aa7e265dbc66076993efed8463e8de414e5d06d3471\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/thiserror-impl/1.0.56/download\"],\n        strip_prefix = \"thiserror-impl-1.0.56\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.thiserror-impl-1.0.56.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__tinyvec-1.6.0\",\n        sha256 = \"87cc5ceb3875bb20c2890005a4e226a4651264a5c75edb2421b52861a0a0cb50\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/tinyvec/1.6.0/download\"],\n        strip_prefix = \"tinyvec-1.6.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.tinyvec-1.6.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__tinyvec_macros-0.1.1\",\n        sha256 = \"1f3ccbac311fea05f86f61904b462b55fb3df8837a366dfc601a0161d0532f20\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/tinyvec_macros/0.1.1/download\"],\n        strip_prefix = \"tinyvec_macros-0.1.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.tinyvec_macros-0.1.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__tokio-1.35.1\",\n        sha256 = \"c89b4efa943be685f629b149f53829423f8f5531ea21249408e8e2f8671ec104\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/tokio/1.35.1/download\"],\n        strip_prefix = \"tokio-1.35.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.tokio-1.35.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__tokio-macros-2.2.0\",\n        sha256 = \"5b8a1e28f2deaa14e508979454cb3a223b10b938b45af148bc0986de36f1923b\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/tokio-macros/2.2.0/download\"],\n        strip_prefix = \"tokio-macros-2.2.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.tokio-macros-2.2.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__tokio-stream-0.1.14\",\n        sha256 = \"397c988d37662c7dda6d2208364a706264bf3d6138b11d436cbac0ad38832842\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/tokio-stream/0.1.14/download\"],\n        strip_prefix = \"tokio-stream-0.1.14\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.tokio-stream-0.1.14.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__tokio-tungstenite-0.20.1\",\n        sha256 = \"212d5dcb2a1ce06d81107c3d0ffa3121fe974b73f068c8282cb1c32328113b6c\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/tokio-tungstenite/0.20.1/download\"],\n        strip_prefix = \"tokio-tungstenite-0.20.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.tokio-tungstenite-0.20.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__tokio-util-0.7.10\",\n        sha256 = \"5419f34732d9eb6ee4c3578b7989078579b7f039cbbb9ca2c4da015749371e15\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/tokio-util/0.7.10/download\"],\n        strip_prefix = \"tokio-util-0.7.10\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.tokio-util-0.7.10.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__toml-0.5.11\",\n        sha256 = \"f4f7f0dd8d50a853a531c426359045b1998f04219d88799810762cd4ad314234\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/toml/0.5.11/download\"],\n        strip_prefix = \"toml-0.5.11\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.toml-0.5.11.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__topological-sort-0.2.2\",\n        sha256 = \"ea68304e134ecd095ac6c3574494fc62b909f416c4fca77e440530221e549d3d\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/topological-sort/0.2.2/download\"],\n        strip_prefix = \"topological-sort-0.2.2\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.topological-sort-0.2.2.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__tower-service-0.3.2\",\n        sha256 = \"b6bc1c9ce2b5135ac7f93c72918fc37feb872bdc6a5533a8b85eb4b86bfdae52\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/tower-service/0.3.2/download\"],\n        strip_prefix = \"tower-service-0.3.2\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.tower-service-0.3.2.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__tracing-0.1.40\",\n        sha256 = \"c3523ab5a71916ccf420eebdf5521fcef02141234bbc0b8a49f2fdc4544364ef\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/tracing/0.1.40/download\"],\n        strip_prefix = \"tracing-0.1.40\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.tracing-0.1.40.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__tracing-core-0.1.32\",\n        sha256 = \"c06d3da6113f116aaee68e4d601191614c9053067f9ab7f6edbcb161237daa54\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/tracing-core/0.1.32/download\"],\n        strip_prefix = \"tracing-core-0.1.32\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.tracing-core-0.1.32.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__try-lock-0.2.5\",\n        sha256 = \"e421abadd41a4225275504ea4d6566923418b7f05506fbc9c0fe86ba7396114b\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/try-lock/0.2.5/download\"],\n        strip_prefix = \"try-lock-0.2.5\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.try-lock-0.2.5.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__tungstenite-0.20.1\",\n        sha256 = \"9e3dac10fd62eaf6617d3a904ae222845979aec67c615d1c842b4002c7666fb9\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/tungstenite/0.20.1/download\"],\n        strip_prefix = \"tungstenite-0.20.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.tungstenite-0.20.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__typenum-1.17.0\",\n        sha256 = \"42ff0bf0c66b8238c6f3b578df37d0b7848e55df8577b3f74f92a69acceeb825\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/typenum/1.17.0/download\"],\n        strip_prefix = \"typenum-1.17.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.typenum-1.17.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__ucd-trie-0.1.6\",\n        sha256 = \"ed646292ffc8188ef8ea4d1e0e0150fb15a5c2e12ad9b8fc191ae7a8a7f3c4b9\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/ucd-trie/0.1.6/download\"],\n        strip_prefix = \"ucd-trie-0.1.6\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.ucd-trie-0.1.6.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__unicase-2.7.0\",\n        sha256 = \"f7d2d4dafb69621809a81864c9c1b864479e1235c0dd4e199924b9742439ed89\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/unicase/2.7.0/download\"],\n        strip_prefix = \"unicase-2.7.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.unicase-2.7.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__unicode-bidi-0.3.14\",\n        sha256 = \"6f2528f27a9eb2b21e69c95319b30bd0efd85d09c379741b0f78ea1d86be2416\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/unicode-bidi/0.3.14/download\"],\n        strip_prefix = \"unicode-bidi-0.3.14\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.unicode-bidi-0.3.14.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__unicode-ident-1.0.12\",\n        sha256 = \"3354b9ac3fae1ff6755cb6db53683adb661634f67557942dea4facebec0fee4b\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/unicode-ident/1.0.12/download\"],\n        strip_prefix = \"unicode-ident-1.0.12\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.unicode-ident-1.0.12.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__unicode-normalization-0.1.22\",\n        sha256 = \"5c5713f0fc4b5db668a2ac63cdb7bb4469d8c9fed047b1d0292cc7b0ce2ba921\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/unicode-normalization/0.1.22/download\"],\n        strip_prefix = \"unicode-normalization-0.1.22\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.unicode-normalization-0.1.22.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__url-2.5.0\",\n        sha256 = \"31e6302e3bb753d46e83516cae55ae196fc0c309407cf11ab35cc51a4c2a4633\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/url/2.5.0/download\"],\n        strip_prefix = \"url-2.5.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.url-2.5.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__utf-8-0.7.6\",\n        sha256 = \"09cc8ee72d2a9becf2f2febe0205bbed8fc6615b7cb429ad062dc7b7ddd036a9\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/utf-8/0.7.6/download\"],\n        strip_prefix = \"utf-8-0.7.6\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.utf-8-0.7.6.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__utf8parse-0.2.1\",\n        sha256 = \"711b9620af191e0cdc7468a8d14e709c3dcdb115b36f838e601583af800a370a\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/utf8parse/0.2.1/download\"],\n        strip_prefix = \"utf8parse-0.2.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.utf8parse-0.2.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__version_check-0.9.4\",\n        sha256 = \"49874b5167b65d7193b8aba1567f5c7d93d001cafc34600cee003eda787e483f\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/version_check/0.9.4/download\"],\n        strip_prefix = \"version_check-0.9.4\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.version_check-0.9.4.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__walkdir-2.4.0\",\n        sha256 = \"d71d857dc86794ca4c280d616f7da00d2dbfd8cd788846559a6813e6aa4b54ee\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/walkdir/2.4.0/download\"],\n        strip_prefix = \"walkdir-2.4.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.walkdir-2.4.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__want-0.3.1\",\n        sha256 = \"bfa7760aed19e106de2c7c0b581b509f2f25d3dacaf737cb82ac61bc6d760b0e\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/want/0.3.1/download\"],\n        strip_prefix = \"want-0.3.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.want-0.3.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__warp-0.3.6\",\n        sha256 = \"c1e92e22e03ff1230c03a1a8ee37d2f89cd489e2e541b7550d6afad96faed169\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/warp/0.3.6/download\"],\n        strip_prefix = \"warp-0.3.6\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.warp-0.3.6.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__wasi-0.11.0-wasi-snapshot-preview1\",\n        sha256 = \"9c8d87e72b64a3b4db28d11ce29237c246188f4f51057d65a7eab63b7987e423\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/wasi/0.11.0+wasi-snapshot-preview1/download\"],\n        strip_prefix = \"wasi-0.11.0+wasi-snapshot-preview1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.wasi-0.11.0+wasi-snapshot-preview1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__wasm-bindgen-0.2.89\",\n        sha256 = \"0ed0d4f68a3015cc185aff4db9506a015f4b96f95303897bfa23f846db54064e\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/wasm-bindgen/0.2.89/download\"],\n        strip_prefix = \"wasm-bindgen-0.2.89\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.wasm-bindgen-0.2.89.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__wasm-bindgen-backend-0.2.89\",\n        sha256 = \"1b56f625e64f3a1084ded111c4d5f477df9f8c92df113852fa5a374dbda78826\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/wasm-bindgen-backend/0.2.89/download\"],\n        strip_prefix = \"wasm-bindgen-backend-0.2.89\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.wasm-bindgen-backend-0.2.89.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__wasm-bindgen-macro-0.2.89\",\n        sha256 = \"0162dbf37223cd2afce98f3d0785506dcb8d266223983e4b5b525859e6e182b2\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/wasm-bindgen-macro/0.2.89/download\"],\n        strip_prefix = \"wasm-bindgen-macro-0.2.89\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.wasm-bindgen-macro-0.2.89.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__wasm-bindgen-macro-support-0.2.89\",\n        sha256 = \"f0eb82fcb7930ae6219a7ecfd55b217f5f0893484b7a13022ebb2b2bf20b5283\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/wasm-bindgen-macro-support/0.2.89/download\"],\n        strip_prefix = \"wasm-bindgen-macro-support-0.2.89\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.wasm-bindgen-macro-support-0.2.89.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__wasm-bindgen-shared-0.2.89\",\n        sha256 = \"7ab9b36309365056cd639da3134bf87fa8f3d86008abf99e612384a6eecd459f\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/wasm-bindgen-shared/0.2.89/download\"],\n        strip_prefix = \"wasm-bindgen-shared-0.2.89\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.wasm-bindgen-shared-0.2.89.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__which-4.4.2\",\n        sha256 = \"87ba24419a2078cd2b0f2ede2691b6c66d8e47836da3b6db8265ebad47afbfc7\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/which/4.4.2/download\"],\n        strip_prefix = \"which-4.4.2\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.which-4.4.2.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__winapi-0.3.9\",\n        sha256 = \"5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/winapi/0.3.9/download\"],\n        strip_prefix = \"winapi-0.3.9\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.winapi-0.3.9.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__winapi-i686-pc-windows-gnu-0.4.0\",\n        sha256 = \"ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/winapi-i686-pc-windows-gnu/0.4.0/download\"],\n        strip_prefix = \"winapi-i686-pc-windows-gnu-0.4.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.winapi-i686-pc-windows-gnu-0.4.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__winapi-util-0.1.6\",\n        sha256 = \"f29e6f9198ba0d26b4c9f07dbe6f9ed633e1f3d5b8b414090084349e46a52596\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/winapi-util/0.1.6/download\"],\n        strip_prefix = \"winapi-util-0.1.6\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.winapi-util-0.1.6.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__winapi-x86_64-pc-windows-gnu-0.4.0\",\n        sha256 = \"712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/winapi-x86_64-pc-windows-gnu/0.4.0/download\"],\n        strip_prefix = \"winapi-x86_64-pc-windows-gnu-0.4.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.winapi-x86_64-pc-windows-gnu-0.4.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__windows-core-0.52.0\",\n        sha256 = \"33ab640c8d7e35bf8ba19b884ba838ceb4fba93a4e8c65a9059d08afcfc683d9\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/windows-core/0.52.0/download\"],\n        strip_prefix = \"windows-core-0.52.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.windows-core-0.52.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__windows-sys-0.48.0\",\n        sha256 = \"677d2418bec65e3338edb076e806bc1ec15693c5d0104683f2efe857f61056a9\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/windows-sys/0.48.0/download\"],\n        strip_prefix = \"windows-sys-0.48.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.windows-sys-0.48.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__windows-sys-0.52.0\",\n        sha256 = \"282be5f36a8ce781fad8c8ae18fa3f9beff57ec1b52cb3de0789201425d9a33d\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/windows-sys/0.52.0/download\"],\n        strip_prefix = \"windows-sys-0.52.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.windows-sys-0.52.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__windows-targets-0.48.5\",\n        sha256 = \"9a2fa6e2155d7247be68c096456083145c183cbbbc2764150dda45a87197940c\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/windows-targets/0.48.5/download\"],\n        strip_prefix = \"windows-targets-0.48.5\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.windows-targets-0.48.5.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__windows-targets-0.52.0\",\n        sha256 = \"8a18201040b24831fbb9e4eb208f8892e1f50a37feb53cc7ff887feb8f50e7cd\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/windows-targets/0.52.0/download\"],\n        strip_prefix = \"windows-targets-0.52.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.windows-targets-0.52.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__windows_aarch64_gnullvm-0.48.5\",\n        sha256 = \"2b38e32f0abccf9987a4e3079dfb67dcd799fb61361e53e2882c3cbaf0d905d8\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/windows_aarch64_gnullvm/0.48.5/download\"],\n        strip_prefix = \"windows_aarch64_gnullvm-0.48.5\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.windows_aarch64_gnullvm-0.48.5.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__windows_aarch64_gnullvm-0.52.0\",\n        sha256 = \"cb7764e35d4db8a7921e09562a0304bf2f93e0a51bfccee0bd0bb0b666b015ea\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/windows_aarch64_gnullvm/0.52.0/download\"],\n        strip_prefix = \"windows_aarch64_gnullvm-0.52.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.windows_aarch64_gnullvm-0.52.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__windows_aarch64_msvc-0.48.5\",\n        sha256 = \"dc35310971f3b2dbbf3f0690a219f40e2d9afcf64f9ab7cc1be722937c26b4bc\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/windows_aarch64_msvc/0.48.5/download\"],\n        strip_prefix = \"windows_aarch64_msvc-0.48.5\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.windows_aarch64_msvc-0.48.5.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__windows_aarch64_msvc-0.52.0\",\n        sha256 = \"bbaa0368d4f1d2aaefc55b6fcfee13f41544ddf36801e793edbbfd7d7df075ef\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/windows_aarch64_msvc/0.52.0/download\"],\n        strip_prefix = \"windows_aarch64_msvc-0.52.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.windows_aarch64_msvc-0.52.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__windows_i686_gnu-0.48.5\",\n        sha256 = \"a75915e7def60c94dcef72200b9a8e58e5091744960da64ec734a6c6e9b3743e\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/windows_i686_gnu/0.48.5/download\"],\n        strip_prefix = \"windows_i686_gnu-0.48.5\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.windows_i686_gnu-0.48.5.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__windows_i686_gnu-0.52.0\",\n        sha256 = \"a28637cb1fa3560a16915793afb20081aba2c92ee8af57b4d5f28e4b3e7df313\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/windows_i686_gnu/0.52.0/download\"],\n        strip_prefix = \"windows_i686_gnu-0.52.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.windows_i686_gnu-0.52.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__windows_i686_msvc-0.48.5\",\n        sha256 = \"8f55c233f70c4b27f66c523580f78f1004e8b5a8b659e05a4eb49d4166cca406\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/windows_i686_msvc/0.48.5/download\"],\n        strip_prefix = \"windows_i686_msvc-0.48.5\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.windows_i686_msvc-0.48.5.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__windows_i686_msvc-0.52.0\",\n        sha256 = \"ffe5e8e31046ce6230cc7215707b816e339ff4d4d67c65dffa206fd0f7aa7b9a\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/windows_i686_msvc/0.52.0/download\"],\n        strip_prefix = \"windows_i686_msvc-0.52.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.windows_i686_msvc-0.52.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__windows_x86_64_gnu-0.48.5\",\n        sha256 = \"53d40abd2583d23e4718fddf1ebec84dbff8381c07cae67ff7768bbf19c6718e\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/windows_x86_64_gnu/0.48.5/download\"],\n        strip_prefix = \"windows_x86_64_gnu-0.48.5\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.windows_x86_64_gnu-0.48.5.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__windows_x86_64_gnu-0.52.0\",\n        sha256 = \"3d6fa32db2bc4a2f5abeacf2b69f7992cd09dca97498da74a151a3132c26befd\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/windows_x86_64_gnu/0.52.0/download\"],\n        strip_prefix = \"windows_x86_64_gnu-0.52.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.windows_x86_64_gnu-0.52.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__windows_x86_64_gnullvm-0.48.5\",\n        sha256 = \"0b7b52767868a23d5bab768e390dc5f5c55825b6d30b86c844ff2dc7414044cc\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/windows_x86_64_gnullvm/0.48.5/download\"],\n        strip_prefix = \"windows_x86_64_gnullvm-0.48.5\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.windows_x86_64_gnullvm-0.48.5.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__windows_x86_64_gnullvm-0.52.0\",\n        sha256 = \"1a657e1e9d3f514745a572a6846d3c7aa7dbe1658c056ed9c3344c4109a6949e\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/windows_x86_64_gnullvm/0.52.0/download\"],\n        strip_prefix = \"windows_x86_64_gnullvm-0.52.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.windows_x86_64_gnullvm-0.52.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__windows_x86_64_msvc-0.48.5\",\n        sha256 = \"ed94fce61571a4006852b7389a063ab983c02eb1bb37b47f8272ce92d06d9538\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/windows_x86_64_msvc/0.48.5/download\"],\n        strip_prefix = \"windows_x86_64_msvc-0.48.5\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.windows_x86_64_msvc-0.48.5.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__windows_x86_64_msvc-0.52.0\",\n        sha256 = \"dff9641d1cd4be8d1a070daf9e3773c5f67e78b4d9d42263020c057706765c04\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/windows_x86_64_msvc/0.52.0/download\"],\n        strip_prefix = \"windows_x86_64_msvc-0.52.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.windows_x86_64_msvc-0.52.0.bazel\"),\n    )\n\n    return [\n       struct(repo=\"crate_index__mdbook-0.4.36\", is_dev_dep = False),\n       struct(repo=\"crate_index__protoc-gen-prost-0.2.3\", is_dev_dep = False),\n    ]\n"
              }
            }
          },
          "crate_index__addr2line-0.21.0": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "8a30b2e23b9e17a9f90641c7ab1549cd9b44f296d3ccbf309d2863cfe398a0cb",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/addr2line/0.21.0/download"
              ],
              "strip_prefix": "addr2line-0.21.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"addr2line\",\n    deps = [\n        \"@crate_index__gimli-0.28.1//:gimli\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=addr2line\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.21.0\",\n)\n"
            }
          },
          "crate_index__adler-1.0.2": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "f26201604c87b1e01bd3d98f8d5d9a8fcbb815e8cedb41ffccbeb4bf593a35fe",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/adler/1.0.2/download"
              ],
              "strip_prefix": "adler-1.0.2",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"adler\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=adler\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.0.2\",\n)\n"
            }
          },
          "crate_index__aho-corasick-1.1.2": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "b2969dcb958b36655471fc61f7e416fa76033bdd4bfed0678d8fee1e2d07a1f0",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/aho-corasick/1.1.2/download"
              ],
              "strip_prefix": "aho-corasick-1.1.2",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"aho_corasick\",\n    deps = [\n        \"@crate_index__memchr-2.7.1//:memchr\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"perf-literal\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=aho-corasick\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.1.2\",\n)\n"
            }
          },
          "crate_index__ammonia-3.3.0": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "64e6d1c7838db705c9b756557ee27c384ce695a1c51a6fe528784cb1c6840170",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/ammonia/3.3.0/download"
              ],
              "strip_prefix": "ammonia-3.3.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"ammonia\",\n    deps = [\n        \"@crate_index__html5ever-0.26.0//:html5ever\",\n        \"@crate_index__maplit-1.0.2//:maplit\",\n        \"@crate_index__once_cell-1.19.0//:once_cell\",\n        \"@crate_index__tendril-0.4.3//:tendril\",\n        \"@crate_index__url-2.5.0//:url\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=ammonia\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"3.3.0\",\n)\n"
            }
          },
          "crate_index__android-tzdata-0.1.1": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "e999941b234f3131b00bc13c22d06e8c5ff726d1b6318ac7eb276997bbb4fef0",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/android-tzdata/0.1.1/download"
              ],
              "strip_prefix": "android-tzdata-0.1.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"android_tzdata\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=android-tzdata\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.1.1\",\n)\n"
            }
          },
          "crate_index__android_system_properties-0.1.5": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "819e7219dbd41043ac279b19830f2efc897156490d7fd6ea916720117ee66311",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/android_system_properties/0.1.5/download"
              ],
              "strip_prefix": "android_system_properties-0.1.5",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"android_system_properties\",\n    deps = [\n        \"@crate_index__libc-0.2.152//:libc\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=android_system_properties\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.1.5\",\n)\n"
            }
          },
          "crate_index__anstream-0.6.7": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "4cd2405b3ac1faab2990b74d728624cd9fd115651fcecc7c2d8daf01376275ba",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/anstream/0.6.7/download"
              ],
              "strip_prefix": "anstream-0.6.7",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"anstream\",\n    deps = [\n        \"@crate_index__anstyle-1.0.4//:anstyle\",\n        \"@crate_index__anstyle-parse-0.2.3//:anstyle_parse\",\n        \"@crate_index__anstyle-query-1.0.2//:anstyle_query\",\n        \"@crate_index__colorchoice-1.0.0//:colorchoice\",\n        \"@crate_index__utf8parse-0.2.1//:utf8parse\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"auto\",\n        \"default\",\n        \"wincon\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=anstream\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.6.7\",\n)\n"
            }
          },
          "crate_index__anstyle-1.0.4": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "7079075b41f533b8c61d2a4d073c4676e1f8b249ff94a393b0595db304e0dd87",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/anstyle/1.0.4/download"
              ],
              "strip_prefix": "anstyle-1.0.4",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"anstyle\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=anstyle\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.0.4\",\n)\n"
            }
          },
          "crate_index__anstyle-parse-0.2.3": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "c75ac65da39e5fe5ab759307499ddad880d724eed2f6ce5b5e8a26f4f387928c",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/anstyle-parse/0.2.3/download"
              ],
              "strip_prefix": "anstyle-parse-0.2.3",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"anstyle_parse\",\n    deps = [\n        \"@crate_index__utf8parse-0.2.1//:utf8parse\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"utf8\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=anstyle-parse\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.2.3\",\n)\n"
            }
          },
          "crate_index__anstyle-query-1.0.2": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "e28923312444cdd728e4738b3f9c9cac739500909bb3d3c94b43551b16517648",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/anstyle-query/1.0.2/download"
              ],
              "strip_prefix": "anstyle-query-1.0.2",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"anstyle_query\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=anstyle-query\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.0.2\",\n)\n"
            }
          },
          "crate_index__anstyle-wincon-3.0.2": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "1cd54b81ec8d6180e24654d0b371ad22fc3dd083b6ff8ba325b72e00c87660a7",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/anstyle-wincon/3.0.2/download"
              ],
              "strip_prefix": "anstyle-wincon-3.0.2",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"anstyle_wincon\",\n    deps = [\n        \"@crate_index__anstyle-1.0.4//:anstyle\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=anstyle-wincon\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"3.0.2\",\n)\n"
            }
          },
          "crate_index__anyhow-1.0.79": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "080e9890a082662b09c1ad45f567faeeb47f22b5fb23895fbe1e651e718e25ca",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/anyhow/1.0.79/download"
              ],
              "strip_prefix": "anyhow-1.0.79",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"anyhow\",\n    deps = [\n        \"@crate_index__anyhow-1.0.79//:build_script_build\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=anyhow\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.0.79\",\n)\n\ncargo_build_script(\n    name = \"_bs\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \"**/*.rs\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"std\",\n    ],\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2018\",\n    pkg_name = \"anyhow\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=anyhow\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"1.0.79\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__autocfg-1.1.0": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "d468802bab17cbc0cc575e9b053f41e72aa36bfa6b7f55e3529ffa43161b97fa",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/autocfg/1.1.0/download"
              ],
              "strip_prefix": "autocfg-1.1.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"autocfg\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=autocfg\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.1.0\",\n)\n"
            }
          },
          "crate_index__backtrace-0.3.69": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "2089b7e3f35b9dd2d0ed921ead4f6d318c27680d4a5bd167b3ee120edb105837",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/backtrace/0.3.69/download"
              ],
              "strip_prefix": "backtrace-0.3.69",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"backtrace\",\n    deps = [\n        \"@crate_index__backtrace-0.3.69//:build_script_build\",\n        \"@crate_index__cfg-if-1.0.0//:cfg_if\",\n        \"@crate_index__rustc-demangle-0.1.23//:rustc_demangle\",\n    ] + select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [\n            \"@crate_index__addr2line-0.21.0//:addr2line\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__libc-0.2.152//:libc\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__miniz_oxide-0.7.1//:miniz_oxide\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__object-0.32.2//:object\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n        ],\n        \"//conditions:default\": [],\n    }),\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=backtrace\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.3.69\",\n)\n\ncargo_build_script(\n    name = \"_bs\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \"**/*.rs\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    deps = [\n        \"@crate_index__cc-1.0.83//:cc\",\n    ],\n    edition = \"2018\",\n    pkg_name = \"backtrace\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=backtrace\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"0.3.69\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__base64-0.21.7": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "9d297deb1925b89f2ccc13d7635fa0714f12c87adce1c75356b39ca9b7178567",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/base64/0.21.7/download"
              ],
              "strip_prefix": "base64-0.21.7",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"base64\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"alloc\",\n        \"default\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=base64\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.21.7\",\n)\n"
            }
          },
          "crate_index__bitflags-1.3.2": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "bef38d45163c2f1dde094a7dfd33ccf595c92905c8f8f4fdc18d06fb1037718a",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/bitflags/1.3.2/download"
              ],
              "strip_prefix": "bitflags-1.3.2",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"bitflags\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=bitflags\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.3.2\",\n)\n"
            }
          },
          "crate_index__bitflags-2.4.1": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "327762f6e5a765692301e5bb513e0d9fef63be86bbc14528052b1cd3e6f03e07",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/bitflags/2.4.1/download"
              ],
              "strip_prefix": "bitflags-2.4.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"bitflags\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=bitflags\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"2.4.1\",\n)\n"
            }
          },
          "crate_index__block-buffer-0.10.4": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "3078c7629b62d3f0439517fa394996acacc5cbc91c5a20d8c658e77abd503a71",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/block-buffer/0.10.4/download"
              ],
              "strip_prefix": "block-buffer-0.10.4",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"block_buffer\",\n    deps = [\n        \"@crate_index__generic-array-0.14.7//:generic_array\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=block-buffer\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.10.4\",\n)\n"
            }
          },
          "crate_index__bstr-1.9.0": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "c48f0051a4b4c5e0b6d365cd04af53aeaa209e3cc15ec2cdb69e73cc87fbd0dc",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/bstr/1.9.0/download"
              ],
              "strip_prefix": "bstr-1.9.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"bstr\",\n    deps = [\n        \"@crate_index__memchr-2.7.1//:memchr\",\n        \"@crate_index__regex-automata-0.4.3//:regex_automata\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"alloc\",\n        \"default\",\n        \"std\",\n        \"unicode\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=bstr\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.9.0\",\n)\n"
            }
          },
          "crate_index__bumpalo-3.14.0": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "7f30e7476521f6f8af1a1c4c0b8cc94f0bee37d91763d0ca2665f299b6cd8aec",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/bumpalo/3.14.0/download"
              ],
              "strip_prefix": "bumpalo-3.14.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"bumpalo\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=bumpalo\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"3.14.0\",\n)\n"
            }
          },
          "crate_index__byteorder-1.5.0": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "1fd0f2584146f6f2ef48085050886acf353beff7305ebd1ae69500e27c67f64b",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/byteorder/1.5.0/download"
              ],
              "strip_prefix": "byteorder-1.5.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"byteorder\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=byteorder\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.5.0\",\n)\n"
            }
          },
          "crate_index__bytes-1.5.0": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "a2bd12c1caf447e69cd4528f47f94d203fd2582878ecb9e9465484c4148a8223",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/bytes/1.5.0/download"
              ],
              "strip_prefix": "bytes-1.5.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"bytes\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=bytes\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.5.0\",\n)\n"
            }
          },
          "crate_index__cc-1.0.83": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "f1174fb0b6ec23863f8b971027804a42614e347eafb0a95bf0b12cdae21fc4d0",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/cc/1.0.83/download"
              ],
              "strip_prefix": "cc-1.0.83",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\n    \"@rules_rust//rust:defs.bzl\",\n    \"rust_binary\",\n    \"rust_library\",\n)\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"cc\",\n    deps = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [\n            \"@crate_index__libc-0.2.152//:libc\",  # cfg(unix)\n        ],\n        \"//conditions:default\": [],\n    }),\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=cc\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.0.83\",\n)\n\nrust_binary(\n    name = \"gcc-shim__bin\",\n    deps = [\n        \":cc\",\n    ] + select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [\n            \"@crate_index__libc-0.2.152//:libc\",  # cfg(unix)\n        ],\n        \"//conditions:default\": [],\n    }),\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/bin/gcc-shim.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=cc\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.0.83\",\n)\n"
            }
          },
          "crate_index__cfg-if-1.0.0": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/cfg-if/1.0.0/download"
              ],
              "strip_prefix": "cfg-if-1.0.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"cfg_if\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=cfg-if\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.0.0\",\n)\n"
            }
          },
          "crate_index__chrono-0.4.31": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "7f2c685bad3eb3d45a01354cedb7d5faa66194d1d58ba6e267a8de788f79db38",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/chrono/0.4.31/download"
              ],
              "strip_prefix": "chrono-0.4.31",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"chrono\",\n    deps = [\n        \"@crate_index__iana-time-zone-0.1.59//:iana_time_zone\",\n        \"@crate_index__num-traits-0.2.17//:num_traits\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"android-tzdata\",\n        \"clock\",\n        \"iana-time-zone\",\n        \"std\",\n        \"winapi\",\n        \"windows-targets\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=chrono\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.4.31\",\n)\n"
            }
          },
          "crate_index__clap-4.4.16": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "58e54881c004cec7895b0068a0a954cd5d62da01aef83fa35b1e594497bf5445",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/clap/4.4.16/download"
              ],
              "strip_prefix": "clap-4.4.16",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\n    \"@rules_rust//rust:defs.bzl\",\n    \"rust_binary\",\n    \"rust_library\",\n)\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"clap\",\n    deps = [\n        \"@crate_index__clap_builder-4.4.16//:clap_builder\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"cargo\",\n        \"color\",\n        \"default\",\n        \"error-context\",\n        \"help\",\n        \"std\",\n        \"suggestions\",\n        \"usage\",\n        \"wrap_help\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=clap\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"4.4.16\",\n)\n\nrust_binary(\n    name = \"stdio-fixture__bin\",\n    deps = [\n        \":clap\",\n        \"@crate_index__clap_builder-4.4.16//:clap_builder\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"cargo\",\n        \"color\",\n        \"default\",\n        \"error-context\",\n        \"help\",\n        \"std\",\n        \"suggestions\",\n        \"usage\",\n        \"wrap_help\",\n    ],\n    crate_root = \"src/bin/stdio-fixture.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=clap\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"4.4.16\",\n)\n"
            }
          },
          "crate_index__clap_builder-4.4.16": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "59cb82d7f531603d2fd1f507441cdd35184fa81beff7bd489570de7f773460bb",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/clap_builder/4.4.16/download"
              ],
              "strip_prefix": "clap_builder-4.4.16",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"clap_builder\",\n    deps = [\n        \"@crate_index__anstream-0.6.7//:anstream\",\n        \"@crate_index__anstyle-1.0.4//:anstyle\",\n        \"@crate_index__clap_lex-0.6.0//:clap_lex\",\n        \"@crate_index__strsim-0.10.0//:strsim\",\n        \"@crate_index__terminal_size-0.3.0//:terminal_size\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"cargo\",\n        \"color\",\n        \"error-context\",\n        \"help\",\n        \"std\",\n        \"suggestions\",\n        \"usage\",\n        \"wrap_help\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=clap_builder\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"4.4.16\",\n)\n"
            }
          },
          "crate_index__clap_complete-4.4.6": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "97aeaa95557bd02f23fbb662f981670c3d20c5a26e69f7354b28f57092437fcd",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/clap_complete/4.4.6/download"
              ],
              "strip_prefix": "clap_complete-4.4.6",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"clap_complete\",\n    deps = [\n        \"@crate_index__clap-4.4.16//:clap\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=clap_complete\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"4.4.6\",\n)\n"
            }
          },
          "crate_index__clap_lex-0.6.0": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "702fc72eb24e5a1e48ce58027a675bc24edd52096d5397d4aea7c6dd9eca0bd1",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/clap_lex/0.6.0/download"
              ],
              "strip_prefix": "clap_lex-0.6.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"clap_lex\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=clap_lex\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.6.0\",\n)\n"
            }
          },
          "crate_index__colorchoice-1.0.0": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "acbf1af155f9b9ef647e42cdc158db4b64a1b61f743629225fde6f3e0be2a7c7",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/colorchoice/1.0.0/download"
              ],
              "strip_prefix": "colorchoice-1.0.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"colorchoice\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=colorchoice\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.0.0\",\n)\n"
            }
          },
          "crate_index__core-foundation-sys-0.8.6": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "06ea2b9bc92be3c2baa9334a323ebca2d6f074ff852cd1d7b11064035cd3868f",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/core-foundation-sys/0.8.6/download"
              ],
              "strip_prefix": "core-foundation-sys-0.8.6",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"core_foundation_sys\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=core-foundation-sys\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.8.6\",\n)\n"
            }
          },
          "crate_index__cpufeatures-0.2.12": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "53fe5e26ff1b7aef8bca9c6080520cfb8d9333c7568e1829cef191a9723e5504",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/cpufeatures/0.2.12/download"
              ],
              "strip_prefix": "cpufeatures-0.2.12",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"cpufeatures\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=cpufeatures\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.2.12\",\n)\n"
            }
          },
          "crate_index__crossbeam-channel-0.5.11": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "176dc175b78f56c0f321911d9c8eb2b77a78a4860b9c19db83835fea1a46649b",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/crossbeam-channel/0.5.11/download"
              ],
              "strip_prefix": "crossbeam-channel-0.5.11",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"crossbeam_channel\",\n    deps = [\n        \"@crate_index__crossbeam-utils-0.8.19//:crossbeam_utils\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=crossbeam-channel\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.5.11\",\n)\n"
            }
          },
          "crate_index__crossbeam-deque-0.8.5": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "613f8cc01fe9cf1a3eb3d7f488fd2fa8388403e97039e2f73692932e291a770d",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/crossbeam-deque/0.8.5/download"
              ],
              "strip_prefix": "crossbeam-deque-0.8.5",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"crossbeam_deque\",\n    deps = [\n        \"@crate_index__crossbeam-epoch-0.9.18//:crossbeam_epoch\",\n        \"@crate_index__crossbeam-utils-0.8.19//:crossbeam_utils\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=crossbeam-deque\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.8.5\",\n)\n"
            }
          },
          "crate_index__crossbeam-epoch-0.9.18": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "5b82ac4a3c2ca9c3460964f020e1402edd5753411d7737aa39c3714ad1b5420e",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/crossbeam-epoch/0.9.18/download"
              ],
              "strip_prefix": "crossbeam-epoch-0.9.18",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"crossbeam_epoch\",\n    deps = [\n        \"@crate_index__crossbeam-utils-0.8.19//:crossbeam_utils\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"alloc\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=crossbeam-epoch\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.9.18\",\n)\n"
            }
          },
          "crate_index__crossbeam-utils-0.8.19": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "248e3bacc7dc6baa3b21e405ee045c3047101a49145e7e9eca583ab4c2ca5345",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/crossbeam-utils/0.8.19/download"
              ],
              "strip_prefix": "crossbeam-utils-0.8.19",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"crossbeam_utils\",\n    deps = [\n        \"@crate_index__crossbeam-utils-0.8.19//:build_script_build\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=crossbeam-utils\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.8.19\",\n)\n\ncargo_build_script(\n    name = \"_bs\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \"**/*.rs\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"std\",\n    ],\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2021\",\n    pkg_name = \"crossbeam-utils\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=crossbeam-utils\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"0.8.19\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__crypto-common-0.1.6": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "1bfb12502f3fc46cca1bb51ac28df9d618d813cdc3d2f25b9fe775a34af26bb3",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/crypto-common/0.1.6/download"
              ],
              "strip_prefix": "crypto-common-0.1.6",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"crypto_common\",\n    deps = [\n        \"@crate_index__generic-array-0.14.7//:generic_array\",\n        \"@crate_index__typenum-1.17.0//:typenum\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=crypto-common\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.1.6\",\n)\n"
            }
          },
          "crate_index__data-encoding-2.5.0": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "7e962a19be5cfc3f3bf6dd8f61eb50107f356ad6270fbb3ed41476571db78be5",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/data-encoding/2.5.0/download"
              ],
              "strip_prefix": "data-encoding-2.5.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"data_encoding\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"alloc\",\n        \"default\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=data-encoding\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"2.5.0\",\n)\n"
            }
          },
          "crate_index__digest-0.10.7": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "9ed9a281f7bc9b7576e61468ba615a66a5c8cfdff42420a70aa82701a3b1e292",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/digest/0.10.7/download"
              ],
              "strip_prefix": "digest-0.10.7",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"digest\",\n    deps = [\n        \"@crate_index__block-buffer-0.10.4//:block_buffer\",\n        \"@crate_index__crypto-common-0.1.6//:crypto_common\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"alloc\",\n        \"block-buffer\",\n        \"core-api\",\n        \"default\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=digest\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.10.7\",\n)\n"
            }
          },
          "crate_index__either-1.9.0": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "a26ae43d7bcc3b814de94796a5e736d4029efb0ee900c12e2d54c993ad1a1e07",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/either/1.9.0/download"
              ],
              "strip_prefix": "either-1.9.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"either\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"use_std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=either\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.9.0\",\n)\n"
            }
          },
          "crate_index__elasticlunr-rs-3.0.2": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "41e83863a500656dfa214fee6682de9c5b9f03de6860fec531235ed2ae9f6571",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/elasticlunr-rs/3.0.2/download"
              ],
              "strip_prefix": "elasticlunr-rs-3.0.2",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"elasticlunr\",\n    deps = [\n        \"@crate_index__regex-1.10.2//:regex\",\n        \"@crate_index__serde-1.0.195//:serde\",\n        \"@crate_index__serde_json-1.0.111//:serde_json\",\n    ],\n    proc_macro_deps = [\n        \"@crate_index__serde_derive-1.0.195//:serde_derive\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=elasticlunr-rs\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"3.0.2\",\n)\n"
            }
          },
          "crate_index__env_logger-0.10.1": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "95b3f3e67048839cb0d0781f445682a35113da7121f7c949db0e2be96a4fbece",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/env_logger/0.10.1/download"
              ],
              "strip_prefix": "env_logger-0.10.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"env_logger\",\n    deps = [\n        \"@crate_index__humantime-2.1.0//:humantime\",\n        \"@crate_index__is-terminal-0.4.10//:is_terminal\",\n        \"@crate_index__log-0.4.20//:log\",\n        \"@crate_index__regex-1.10.2//:regex\",\n        \"@crate_index__termcolor-1.4.1//:termcolor\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"auto-color\",\n        \"color\",\n        \"default\",\n        \"humantime\",\n        \"regex\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=env_logger\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.10.1\",\n)\n"
            }
          },
          "crate_index__equivalent-1.0.1": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "5443807d6dff69373d433ab9ef5378ad8df50ca6298caf15de6e52e24aaf54d5",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/equivalent/1.0.1/download"
              ],
              "strip_prefix": "equivalent-1.0.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"equivalent\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=equivalent\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.0.1\",\n)\n"
            }
          },
          "crate_index__errno-0.3.8": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "a258e46cdc063eb8519c00b9fc845fc47bcfca4130e2f08e88665ceda8474245",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/errno/0.3.8/download"
              ],
              "strip_prefix": "errno-0.3.8",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"errno\",\n    deps = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [\n            \"@crate_index__libc-0.2.152//:libc\",  # cfg(unix)\n        ],\n        \"//conditions:default\": [],\n    }),\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=errno\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.3.8\",\n)\n"
            }
          },
          "crate_index__fastrand-2.0.1": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "25cbce373ec4653f1a01a31e8a5e5ec0c622dc27ff9c4e6606eefef5cbbed4a5",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/fastrand/2.0.1/download"
              ],
              "strip_prefix": "fastrand-2.0.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"fastrand\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"alloc\",\n        \"default\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=fastrand\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"2.0.1\",\n)\n"
            }
          },
          "crate_index__filetime-0.2.23": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "1ee447700ac8aa0b2f2bd7bc4462ad686ba06baa6727ac149a2d6277f0d240fd",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/filetime/0.2.23/download"
              ],
              "strip_prefix": "filetime-0.2.23",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"filetime\",\n    deps = [\n        \"@crate_index__cfg-if-1.0.0//:cfg_if\",\n    ] + select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [\n            \"@crate_index__libc-0.2.152//:libc\",  # cfg(unix)\n        ],\n        \"//conditions:default\": [],\n    }),\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=filetime\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.2.23\",\n)\n"
            }
          },
          "crate_index__fixedbitset-0.4.2": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "0ce7134b9999ecaf8bcd65542e436736ef32ddca1b3e06094cb6ec5755203b80",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/fixedbitset/0.4.2/download"
              ],
              "strip_prefix": "fixedbitset-0.4.2",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"fixedbitset\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=fixedbitset\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.4.2\",\n)\n"
            }
          },
          "crate_index__fnv-1.0.7": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "3f9eec918d3f24069decb9af1554cad7c880e2da24a9afd88aca000531ab82c1",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/fnv/1.0.7/download"
              ],
              "strip_prefix": "fnv-1.0.7",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"fnv\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"std\",\n    ],\n    crate_root = \"lib.rs\",\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=fnv\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.0.7\",\n)\n"
            }
          },
          "crate_index__form_urlencoded-1.2.1": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "e13624c2627564efccf4934284bdd98cbaa14e79b0b5a141218e507b3a823456",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/form_urlencoded/1.2.1/download"
              ],
              "strip_prefix": "form_urlencoded-1.2.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"form_urlencoded\",\n    deps = [\n        \"@crate_index__percent-encoding-2.3.1//:percent_encoding\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"alloc\",\n        \"default\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=form_urlencoded\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.2.1\",\n)\n"
            }
          },
          "crate_index__fsevent-sys-4.1.0": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "76ee7a02da4d231650c7cea31349b889be2f45ddb3ef3032d2ec8185f6313fd2",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/fsevent-sys/4.1.0/download"
              ],
              "strip_prefix": "fsevent-sys-4.1.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"fsevent_sys\",\n    deps = [\n        \"@crate_index__libc-0.2.152//:libc\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=fsevent-sys\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"4.1.0\",\n)\n"
            }
          },
          "crate_index__futf-0.1.5": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "df420e2e84819663797d1ec6544b13c5be84629e7bb00dc960d6917db2987843",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/futf/0.1.5/download"
              ],
              "strip_prefix": "futf-0.1.5",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"futf\",\n    deps = [\n        \"@crate_index__mac-0.1.1//:mac\",\n        \"@crate_index__new_debug_unreachable-1.0.4//:debug_unreachable\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=futf\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.1.5\",\n)\n"
            }
          },
          "crate_index__futures-channel-0.3.30": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "eac8f7d7865dcb88bd4373ab671c8cf4508703796caa2b1985a9ca867b3fcb78",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/futures-channel/0.3.30/download"
              ],
              "strip_prefix": "futures-channel-0.3.30",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"futures_channel\",\n    deps = [\n        \"@crate_index__futures-core-0.3.30//:futures_core\",\n        \"@crate_index__futures-sink-0.3.30//:futures_sink\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"alloc\",\n        \"default\",\n        \"futures-sink\",\n        \"sink\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=futures-channel\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.3.30\",\n)\n"
            }
          },
          "crate_index__futures-core-0.3.30": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "dfc6580bb841c5a68e9ef15c77ccc837b40a7504914d52e47b8b0e9bbda25a1d",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/futures-core/0.3.30/download"
              ],
              "strip_prefix": "futures-core-0.3.30",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"futures_core\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"alloc\",\n        \"default\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=futures-core\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.3.30\",\n)\n"
            }
          },
          "crate_index__futures-macro-0.3.30": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "87750cf4b7a4c0625b1529e4c543c2182106e4dedc60a2a6455e00d212c489ac",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/futures-macro/0.3.30/download"
              ],
              "strip_prefix": "futures-macro-0.3.30",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_proc_macro\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_proc_macro(\n    name = \"futures_macro\",\n    deps = [\n        \"@crate_index__proc-macro2-1.0.76//:proc_macro2\",\n        \"@crate_index__quote-1.0.35//:quote\",\n        \"@crate_index__syn-2.0.48//:syn\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=futures-macro\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.3.30\",\n)\n"
            }
          },
          "crate_index__futures-sink-0.3.30": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "9fb8e00e87438d937621c1c6269e53f536c14d3fbd6a042bb24879e57d474fb5",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/futures-sink/0.3.30/download"
              ],
              "strip_prefix": "futures-sink-0.3.30",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"futures_sink\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"alloc\",\n        \"default\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=futures-sink\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.3.30\",\n)\n"
            }
          },
          "crate_index__futures-task-0.3.30": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "38d84fa142264698cdce1a9f9172cf383a0c82de1bddcf3092901442c4097004",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/futures-task/0.3.30/download"
              ],
              "strip_prefix": "futures-task-0.3.30",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"futures_task\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"alloc\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=futures-task\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.3.30\",\n)\n"
            }
          },
          "crate_index__futures-util-0.3.30": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "3d6401deb83407ab3da39eba7e33987a73c3df0c82b4bb5813ee871c19c41d48",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/futures-util/0.3.30/download"
              ],
              "strip_prefix": "futures-util-0.3.30",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"futures_util\",\n    deps = [\n        \"@crate_index__futures-core-0.3.30//:futures_core\",\n        \"@crate_index__futures-sink-0.3.30//:futures_sink\",\n        \"@crate_index__futures-task-0.3.30//:futures_task\",\n        \"@crate_index__pin-project-lite-0.2.13//:pin_project_lite\",\n        \"@crate_index__pin-utils-0.1.0//:pin_utils\",\n        \"@crate_index__slab-0.4.9//:slab\",\n    ],\n    proc_macro_deps = [\n        \"@crate_index__futures-macro-0.3.30//:futures_macro\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"alloc\",\n        \"async-await\",\n        \"async-await-macro\",\n        \"default\",\n        \"futures-macro\",\n        \"futures-sink\",\n        \"sink\",\n        \"slab\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=futures-util\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.3.30\",\n)\n"
            }
          },
          "crate_index__generic-array-0.14.7": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "85649ca51fd72272d7821adaf274ad91c288277713d9c18820d8499a7ff69e9a",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/generic-array/0.14.7/download"
              ],
              "strip_prefix": "generic-array-0.14.7",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"generic_array\",\n    deps = [\n        \"@crate_index__generic-array-0.14.7//:build_script_build\",\n        \"@crate_index__typenum-1.17.0//:typenum\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"more_lengths\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=generic-array\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.14.7\",\n)\n\ncargo_build_script(\n    name = \"_bs\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \"**/*.rs\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"more_lengths\",\n    ],\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    deps = [\n        \"@crate_index__version_check-0.9.4//:version_check\",\n    ],\n    edition = \"2015\",\n    pkg_name = \"generic-array\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=generic-array\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"0.14.7\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__getrandom-0.2.12": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "190092ea657667030ac6a35e305e62fc4dd69fd98ac98631e5d3a2b1575a12b5",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/getrandom/0.2.12/download"
              ],
              "strip_prefix": "getrandom-0.2.12",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"getrandom\",\n    deps = [\n        \"@crate_index__cfg-if-1.0.0//:cfg_if\",\n    ] + select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [\n            \"@crate_index__libc-0.2.152//:libc\",  # cfg(unix)\n        ],\n        \"//conditions:default\": [],\n    }),\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=getrandom\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.2.12\",\n)\n"
            }
          },
          "crate_index__gimli-0.28.1": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "4271d37baee1b8c7e4b708028c57d816cf9d2434acb33a549475f78c181f6253",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/gimli/0.28.1/download"
              ],
              "strip_prefix": "gimli-0.28.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"gimli\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=gimli\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.28.1\",\n)\n"
            }
          },
          "crate_index__globset-0.4.14": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "57da3b9b5b85bd66f31093f8c408b90a74431672542466497dcbdfdc02034be1",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/globset/0.4.14/download"
              ],
              "strip_prefix": "globset-0.4.14",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"globset\",\n    deps = [\n        \"@crate_index__aho-corasick-1.1.2//:aho_corasick\",\n        \"@crate_index__bstr-1.9.0//:bstr\",\n        \"@crate_index__log-0.4.20//:log\",\n        \"@crate_index__regex-automata-0.4.3//:regex_automata\",\n        \"@crate_index__regex-syntax-0.8.2//:regex_syntax\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"log\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=globset\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.4.14\",\n)\n"
            }
          },
          "crate_index__h2-0.3.23": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "b553656127a00601c8ae5590fcfdc118e4083a7924b6cf4ffc1ea4b99dc429d7",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/h2/0.3.23/download"
              ],
              "strip_prefix": "h2-0.3.23",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"h2\",\n    deps = [\n        \"@crate_index__bytes-1.5.0//:bytes\",\n        \"@crate_index__fnv-1.0.7//:fnv\",\n        \"@crate_index__futures-core-0.3.30//:futures_core\",\n        \"@crate_index__futures-sink-0.3.30//:futures_sink\",\n        \"@crate_index__futures-util-0.3.30//:futures_util\",\n        \"@crate_index__http-0.2.11//:http\",\n        \"@crate_index__indexmap-2.1.0//:indexmap\",\n        \"@crate_index__slab-0.4.9//:slab\",\n        \"@crate_index__tokio-1.35.1//:tokio\",\n        \"@crate_index__tokio-util-0.7.10//:tokio_util\",\n        \"@crate_index__tracing-0.1.40//:tracing\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=h2\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.3.23\",\n)\n"
            }
          },
          "crate_index__handlebars-4.5.0": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "faa67bab9ff362228eb3d00bd024a4965d8231bbb7921167f0cfa66c6626b225",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/handlebars/4.5.0/download"
              ],
              "strip_prefix": "handlebars-4.5.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\n    \"@rules_rust//rust:defs.bzl\",\n    \"rust_binary\",\n    \"rust_library\",\n)\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"handlebars\",\n    deps = [\n        \"@crate_index__log-0.4.20//:log\",\n        \"@crate_index__pest-2.7.6//:pest\",\n        \"@crate_index__serde-1.0.195//:serde\",\n        \"@crate_index__serde_json-1.0.111//:serde_json\",\n        \"@crate_index__thiserror-1.0.56//:thiserror\",\n    ],\n    proc_macro_deps = [\n        \"@crate_index__pest_derive-2.7.6//:pest_derive\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=handlebars\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"4.5.0\",\n)\n\nrust_binary(\n    name = \"handlebars-cli__bin\",\n    deps = [\n        \":handlebars\",\n        \"@crate_index__log-0.4.20//:log\",\n        \"@crate_index__pest-2.7.6//:pest\",\n        \"@crate_index__serde-1.0.195//:serde\",\n        \"@crate_index__serde_json-1.0.111//:serde_json\",\n        \"@crate_index__thiserror-1.0.56//:thiserror\",\n    ],\n    proc_macro_deps = [\n        \"@crate_index__pest_derive-2.7.6//:pest_derive\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n    ],\n    crate_root = \"src/cli.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=handlebars\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"4.5.0\",\n)\n"
            }
          },
          "crate_index__hashbrown-0.14.3": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "290f1a1d9242c78d09ce40a5e87e7554ee637af1351968159f4952f028f75604",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/hashbrown/0.14.3/download"
              ],
              "strip_prefix": "hashbrown-0.14.3",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"hashbrown\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"raw\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=hashbrown\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.14.3\",\n)\n"
            }
          },
          "crate_index__headers-0.3.9": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "06683b93020a07e3dbcf5f8c0f6d40080d725bea7936fc01ad345c01b97dc270",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/headers/0.3.9/download"
              ],
              "strip_prefix": "headers-0.3.9",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"headers\",\n    deps = [\n        \"@crate_index__base64-0.21.7//:base64\",\n        \"@crate_index__bytes-1.5.0//:bytes\",\n        \"@crate_index__headers-core-0.2.0//:headers_core\",\n        \"@crate_index__http-0.2.11//:http\",\n        \"@crate_index__httpdate-1.0.3//:httpdate\",\n        \"@crate_index__mime-0.3.17//:mime\",\n        \"@crate_index__sha1-0.10.6//:sha1\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=headers\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.3.9\",\n)\n"
            }
          },
          "crate_index__headers-core-0.2.0": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "e7f66481bfee273957b1f20485a4ff3362987f85b2c236580d81b4eb7a326429",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/headers-core/0.2.0/download"
              ],
              "strip_prefix": "headers-core-0.2.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"headers_core\",\n    deps = [\n        \"@crate_index__http-0.2.11//:http\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=headers-core\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.2.0\",\n)\n"
            }
          },
          "crate_index__heck-0.4.1": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "95505c38b4572b2d910cecb0281560f54b440a19336cbbcb27bf6ce6adc6f5a8",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/heck/0.4.1/download"
              ],
              "strip_prefix": "heck-0.4.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"heck\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=heck\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.4.1\",\n)\n"
            }
          },
          "crate_index__hermit-abi-0.3.3": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "d77f7ec81a6d05a3abb01ab6eb7590f6083d08449fe5a1c8b1e620283546ccb7",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/hermit-abi/0.3.3/download"
              ],
              "strip_prefix": "hermit-abi-0.3.3",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"hermit_abi\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=hermit-abi\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.3.3\",\n)\n"
            }
          },
          "crate_index__home-0.5.9": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "e3d1354bf6b7235cb4a0576c2619fd4ed18183f689b12b006a0ee7329eeff9a5",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/home/0.5.9/download"
              ],
              "strip_prefix": "home-0.5.9",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"home\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=home\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.5.9\",\n)\n"
            }
          },
          "crate_index__html5ever-0.26.0": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "bea68cab48b8459f17cf1c944c67ddc572d272d9f2b274140f223ecb1da4a3b7",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/html5ever/0.26.0/download"
              ],
              "strip_prefix": "html5ever-0.26.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"html5ever\",\n    deps = [\n        \"@crate_index__html5ever-0.26.0//:build_script_build\",\n        \"@crate_index__log-0.4.20//:log\",\n        \"@crate_index__mac-0.1.1//:mac\",\n        \"@crate_index__markup5ever-0.11.0//:markup5ever\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=html5ever\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.26.0\",\n)\n\ncargo_build_script(\n    name = \"_bs\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \"**/*.rs\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    deps = [\n        \"@crate_index__proc-macro2-1.0.76//:proc_macro2\",\n        \"@crate_index__quote-1.0.35//:quote\",\n        \"@crate_index__syn-1.0.109//:syn\",\n    ],\n    edition = \"2018\",\n    pkg_name = \"html5ever\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=html5ever\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"0.26.0\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__http-0.2.11": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "8947b1a6fad4393052c7ba1f4cd97bed3e953a95c79c92ad9b051a04611d9fbb",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/http/0.2.11/download"
              ],
              "strip_prefix": "http-0.2.11",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"http\",\n    deps = [\n        \"@crate_index__bytes-1.5.0//:bytes\",\n        \"@crate_index__fnv-1.0.7//:fnv\",\n        \"@crate_index__itoa-1.0.10//:itoa\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=http\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.2.11\",\n)\n"
            }
          },
          "crate_index__http-body-0.4.6": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "7ceab25649e9960c0311ea418d17bee82c0dcec1bd053b5f9a66e265a693bed2",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/http-body/0.4.6/download"
              ],
              "strip_prefix": "http-body-0.4.6",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"http_body\",\n    deps = [\n        \"@crate_index__bytes-1.5.0//:bytes\",\n        \"@crate_index__http-0.2.11//:http\",\n        \"@crate_index__pin-project-lite-0.2.13//:pin_project_lite\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=http-body\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.4.6\",\n)\n"
            }
          },
          "crate_index__httparse-1.8.0": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "d897f394bad6a705d5f4104762e116a75639e470d80901eed05a860a95cb1904",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/httparse/1.8.0/download"
              ],
              "strip_prefix": "httparse-1.8.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"httparse\",\n    deps = [\n        \"@crate_index__httparse-1.8.0//:build_script_build\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=httparse\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.8.0\",\n)\n\ncargo_build_script(\n    name = \"_bs\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \"**/*.rs\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"std\",\n    ],\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2018\",\n    pkg_name = \"httparse\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=httparse\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"1.8.0\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__httpdate-1.0.3": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "df3b46402a9d5adb4c86a0cf463f42e19994e3ee891101b1841f30a545cb49a9",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/httpdate/1.0.3/download"
              ],
              "strip_prefix": "httpdate-1.0.3",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"httpdate\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=httpdate\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.0.3\",\n)\n"
            }
          },
          "crate_index__humantime-2.1.0": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "9a3a5bfb195931eeb336b2a7b4d761daec841b97f947d34394601737a7bba5e4",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/humantime/2.1.0/download"
              ],
              "strip_prefix": "humantime-2.1.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"humantime\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=humantime\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"2.1.0\",\n)\n"
            }
          },
          "crate_index__hyper-0.14.28": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "bf96e135eb83a2a8ddf766e426a841d8ddd7449d5f00d34ea02b41d2f19eef80",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/hyper/0.14.28/download"
              ],
              "strip_prefix": "hyper-0.14.28",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"hyper\",\n    deps = [\n        \"@crate_index__bytes-1.5.0//:bytes\",\n        \"@crate_index__futures-channel-0.3.30//:futures_channel\",\n        \"@crate_index__futures-core-0.3.30//:futures_core\",\n        \"@crate_index__futures-util-0.3.30//:futures_util\",\n        \"@crate_index__h2-0.3.23//:h2\",\n        \"@crate_index__http-0.2.11//:http\",\n        \"@crate_index__http-body-0.4.6//:http_body\",\n        \"@crate_index__httparse-1.8.0//:httparse\",\n        \"@crate_index__httpdate-1.0.3//:httpdate\",\n        \"@crate_index__itoa-1.0.10//:itoa\",\n        \"@crate_index__pin-project-lite-0.2.13//:pin_project_lite\",\n        \"@crate_index__socket2-0.5.5//:socket2\",\n        \"@crate_index__tokio-1.35.1//:tokio\",\n        \"@crate_index__tower-service-0.3.2//:tower_service\",\n        \"@crate_index__tracing-0.1.40//:tracing\",\n        \"@crate_index__want-0.3.1//:want\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"client\",\n        \"default\",\n        \"h2\",\n        \"http1\",\n        \"http2\",\n        \"server\",\n        \"socket2\",\n        \"stream\",\n        \"tcp\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=hyper\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.14.28\",\n)\n"
            }
          },
          "crate_index__iana-time-zone-0.1.59": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "b6a67363e2aa4443928ce15e57ebae94fd8949958fd1223c4cfc0cd473ad7539",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/iana-time-zone/0.1.59/download"
              ],
              "strip_prefix": "iana-time-zone-0.1.59",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"iana_time_zone\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"fallback\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=iana-time-zone\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.1.59\",\n)\n"
            }
          },
          "crate_index__iana-time-zone-haiku-0.1.2": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "f31827a206f56af32e590ba56d5d2d085f558508192593743f16b2306495269f",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/iana-time-zone-haiku/0.1.2/download"
              ],
              "strip_prefix": "iana-time-zone-haiku-0.1.2",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"iana_time_zone_haiku\",\n    deps = [\n        \"@crate_index__iana-time-zone-haiku-0.1.2//:build_script_build\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=iana-time-zone-haiku\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.1.2\",\n)\n\ncargo_build_script(\n    name = \"_bs\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \"**/*.rs\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    deps = [\n        \"@crate_index__cc-1.0.83//:cc\",\n    ],\n    edition = \"2018\",\n    pkg_name = \"iana-time-zone-haiku\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=iana-time-zone-haiku\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"0.1.2\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__idna-0.5.0": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "634d9b1461af396cad843f47fdba5597a4f9e6ddd4bfb6ff5d85028c25cb12f6",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/idna/0.5.0/download"
              ],
              "strip_prefix": "idna-0.5.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"idna\",\n    deps = [\n        \"@crate_index__unicode-bidi-0.3.14//:unicode_bidi\",\n        \"@crate_index__unicode-normalization-0.1.22//:unicode_normalization\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"alloc\",\n        \"default\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=idna\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.5.0\",\n)\n"
            }
          },
          "crate_index__ignore-0.4.22": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "b46810df39e66e925525d6e38ce1e7f6e1d208f72dc39757880fcb66e2c58af1",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/ignore/0.4.22/download"
              ],
              "strip_prefix": "ignore-0.4.22",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"ignore\",\n    deps = [\n        \"@crate_index__crossbeam-deque-0.8.5//:crossbeam_deque\",\n        \"@crate_index__globset-0.4.14//:globset\",\n        \"@crate_index__log-0.4.20//:log\",\n        \"@crate_index__memchr-2.7.1//:memchr\",\n        \"@crate_index__regex-automata-0.4.3//:regex_automata\",\n        \"@crate_index__same-file-1.0.6//:same_file\",\n        \"@crate_index__walkdir-2.4.0//:walkdir\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=ignore\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.4.22\",\n)\n"
            }
          },
          "crate_index__indexmap-2.1.0": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "d530e1a18b1cb4c484e6e34556a0d948706958449fca0cab753d649f2bce3d1f",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/indexmap/2.1.0/download"
              ],
              "strip_prefix": "indexmap-2.1.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"indexmap\",\n    deps = [\n        \"@crate_index__equivalent-1.0.1//:equivalent\",\n        \"@crate_index__hashbrown-0.14.3//:hashbrown\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=indexmap\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"2.1.0\",\n)\n"
            }
          },
          "crate_index__inotify-0.9.6": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "f8069d3ec154eb856955c1c0fbffefbf5f3c40a104ec912d4797314c1801abff",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/inotify/0.9.6/download"
              ],
              "strip_prefix": "inotify-0.9.6",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"inotify\",\n    deps = [\n        \"@crate_index__bitflags-1.3.2//:bitflags\",\n        \"@crate_index__inotify-sys-0.1.5//:inotify_sys\",\n        \"@crate_index__libc-0.2.152//:libc\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=inotify\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.9.6\",\n)\n"
            }
          },
          "crate_index__inotify-sys-0.1.5": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "e05c02b5e89bff3b946cedeca278abc628fe811e604f027c45a8aa3cf793d0eb",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/inotify-sys/0.1.5/download"
              ],
              "strip_prefix": "inotify-sys-0.1.5",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"inotify_sys\",\n    deps = [\n        \"@crate_index__libc-0.2.152//:libc\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=inotify-sys\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.1.5\",\n)\n"
            }
          },
          "crate_index__is-terminal-0.4.10": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "0bad00257d07be169d870ab665980b06cdb366d792ad690bf2e76876dc503455",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/is-terminal/0.4.10/download"
              ],
              "strip_prefix": "is-terminal-0.4.10",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"is_terminal\",\n    deps = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [\n            \"@crate_index__rustix-0.38.28//:rustix\",  # cfg(not(any(windows, target_os = \"hermit\", target_os = \"unknown\")))\n        ],\n        \"//conditions:default\": [],\n    }),\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=is-terminal\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.4.10\",\n)\n"
            }
          },
          "crate_index__itertools-0.10.5": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "b0fd2260e829bddf4cb6ea802289de2f86d6a7a690192fbe91b3f46e0f2c8473",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/itertools/0.10.5/download"
              ],
              "strip_prefix": "itertools-0.10.5",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"itertools\",\n    deps = [\n        \"@crate_index__either-1.9.0//:either\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"use_alloc\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=itertools\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.10.5\",\n)\n"
            }
          },
          "crate_index__itoa-1.0.10": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "b1a46d1a171d865aa5f83f92695765caa047a9b4cbae2cbf37dbd613a793fd4c",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/itoa/1.0.10/download"
              ],
              "strip_prefix": "itoa-1.0.10",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"itoa\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=itoa\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.0.10\",\n)\n"
            }
          },
          "crate_index__js-sys-0.3.66": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "cee9c64da59eae3b50095c18d3e74f8b73c0b86d2792824ff01bbce68ba229ca",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/js-sys/0.3.66/download"
              ],
              "strip_prefix": "js-sys-0.3.66",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"js_sys\",\n    deps = [\n        \"@crate_index__wasm-bindgen-0.2.89//:wasm_bindgen\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=js-sys\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.3.66\",\n)\n"
            }
          },
          "crate_index__kqueue-1.0.8": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "7447f1ca1b7b563588a205fe93dea8df60fd981423a768bc1c0ded35ed147d0c",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/kqueue/1.0.8/download"
              ],
              "strip_prefix": "kqueue-1.0.8",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"kqueue\",\n    deps = [\n        \"@crate_index__kqueue-sys-1.0.4//:kqueue_sys\",\n        \"@crate_index__libc-0.2.152//:libc\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=kqueue\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.0.8\",\n)\n"
            }
          },
          "crate_index__kqueue-sys-1.0.4": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "ed9625ffda8729b85e45cf04090035ac368927b8cebc34898e7c120f52e4838b",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/kqueue-sys/1.0.4/download"
              ],
              "strip_prefix": "kqueue-sys-1.0.4",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"kqueue_sys\",\n    deps = [\n        \"@crate_index__bitflags-1.3.2//:bitflags\",\n        \"@crate_index__libc-0.2.152//:libc\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=kqueue-sys\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.0.4\",\n)\n"
            }
          },
          "crate_index__lazy_static-1.4.0": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "e2abad23fbc42b3700f2f279844dc832adb2b2eb069b2df918f455c4e18cc646",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/lazy_static/1.4.0/download"
              ],
              "strip_prefix": "lazy_static-1.4.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"lazy_static\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=lazy_static\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.4.0\",\n)\n"
            }
          },
          "crate_index__libc-0.2.152": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "13e3bf6590cbc649f4d1a3eefc9d5d6eb746f5200ffb04e5e142700b8faa56e7",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/libc/0.2.152/download"
              ],
              "strip_prefix": "libc-0.2.152",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"libc\",\n    deps = [\n        \"@crate_index__libc-0.2.152//:build_script_build\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=libc\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.2.152\",\n)\n\ncargo_build_script(\n    name = \"_bs\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \"**/*.rs\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"std\",\n    ],\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2015\",\n    pkg_name = \"libc\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=libc\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"0.2.152\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__linux-raw-sys-0.4.12": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "c4cd1a83af159aa67994778be9070f0ae1bd732942279cabb14f86f986a21456",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/linux-raw-sys/0.4.12/download"
              ],
              "strip_prefix": "linux-raw-sys-0.4.12",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"linux_raw_sys\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"elf\",\n        \"errno\",\n        \"general\",\n        \"ioctl\",\n        \"no_std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=linux-raw-sys\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.4.12\",\n)\n"
            }
          },
          "crate_index__lock_api-0.4.11": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "3c168f8615b12bc01f9c17e2eb0cc07dcae1940121185446edc3744920e8ef45",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/lock_api/0.4.11/download"
              ],
              "strip_prefix": "lock_api-0.4.11",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"lock_api\",\n    deps = [\n        \"@crate_index__lock_api-0.4.11//:build_script_build\",\n        \"@crate_index__scopeguard-1.2.0//:scopeguard\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"atomic_usize\",\n        \"default\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=lock_api\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.4.11\",\n)\n\ncargo_build_script(\n    name = \"_bs\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \"**/*.rs\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"atomic_usize\",\n        \"default\",\n    ],\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    deps = [\n        \"@crate_index__autocfg-1.1.0//:autocfg\",\n    ],\n    edition = \"2018\",\n    pkg_name = \"lock_api\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=lock_api\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"0.4.11\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__log-0.4.20": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "b5e6163cb8c49088c2c36f57875e58ccd8c87c7427f7fbd50ea6710b2f3f2e8f",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/log/0.4.20/download"
              ],
              "strip_prefix": "log-0.4.20",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"log\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=log\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.4.20\",\n)\n"
            }
          },
          "crate_index__mac-0.1.1": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "c41e0c4fef86961ac6d6f8a82609f55f31b05e4fce149ac5710e439df7619ba4",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/mac/0.1.1/download"
              ],
              "strip_prefix": "mac-0.1.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"mac\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=mac\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.1.1\",\n)\n"
            }
          },
          "crate_index__maplit-1.0.2": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "3e2e65a1a2e43cfcb47a895c4c8b10d1f4a61097f9f254f183aee60cad9c651d",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/maplit/1.0.2/download"
              ],
              "strip_prefix": "maplit-1.0.2",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"maplit\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=maplit\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.0.2\",\n)\n"
            }
          },
          "crate_index__markup5ever-0.11.0": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "7a2629bb1404f3d34c2e921f21fd34ba00b206124c81f65c50b43b6aaefeb016",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/markup5ever/0.11.0/download"
              ],
              "strip_prefix": "markup5ever-0.11.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"markup5ever\",\n    deps = [\n        \"@crate_index__log-0.4.20//:log\",\n        \"@crate_index__markup5ever-0.11.0//:build_script_build\",\n        \"@crate_index__phf-0.10.1//:phf\",\n        \"@crate_index__string_cache-0.8.7//:string_cache\",\n        \"@crate_index__tendril-0.4.3//:tendril\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=markup5ever\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.11.0\",\n)\n\ncargo_build_script(\n    name = \"_bs\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \"**/*.rs\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    deps = [\n        \"@crate_index__phf_codegen-0.10.0//:phf_codegen\",\n        \"@crate_index__string_cache_codegen-0.5.2//:string_cache_codegen\",\n    ],\n    edition = \"2018\",\n    pkg_name = \"markup5ever\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=markup5ever\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"0.11.0\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__mdbook-0.4.36": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "80992cb0e05f22cc052c99f8e883f1593b891014b96a8b4637fd274d7030c85e",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/mdbook/0.4.36/download"
              ],
              "strip_prefix": "mdbook-0.4.36",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\n    \"@rules_rust//rust:defs.bzl\",\n    \"rust_binary\",\n    \"rust_library\",\n)\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"mdbook\",\n    deps = [\n        \"@crate_index__ammonia-3.3.0//:ammonia\",\n        \"@crate_index__anyhow-1.0.79//:anyhow\",\n        \"@crate_index__chrono-0.4.31//:chrono\",\n        \"@crate_index__clap-4.4.16//:clap\",\n        \"@crate_index__clap_complete-4.4.6//:clap_complete\",\n        \"@crate_index__elasticlunr-rs-3.0.2//:elasticlunr\",\n        \"@crate_index__env_logger-0.10.1//:env_logger\",\n        \"@crate_index__futures-util-0.3.30//:futures_util\",\n        \"@crate_index__handlebars-4.5.0//:handlebars\",\n        \"@crate_index__ignore-0.4.22//:ignore\",\n        \"@crate_index__log-0.4.20//:log\",\n        \"@crate_index__memchr-2.7.1//:memchr\",\n        \"@crate_index__notify-6.1.1//:notify\",\n        \"@crate_index__notify-debouncer-mini-0.4.1//:notify_debouncer_mini\",\n        \"@crate_index__once_cell-1.19.0//:once_cell\",\n        \"@crate_index__opener-0.6.1//:opener\",\n        \"@crate_index__pathdiff-0.2.1//:pathdiff\",\n        \"@crate_index__pulldown-cmark-0.9.3//:pulldown_cmark\",\n        \"@crate_index__regex-1.10.2//:regex\",\n        \"@crate_index__serde-1.0.195//:serde\",\n        \"@crate_index__serde_json-1.0.111//:serde_json\",\n        \"@crate_index__shlex-1.2.0//:shlex\",\n        \"@crate_index__tempfile-3.9.0//:tempfile\",\n        \"@crate_index__tokio-1.35.1//:tokio\",\n        \"@crate_index__toml-0.5.11//:toml\",\n        \"@crate_index__topological-sort-0.2.2//:topological_sort\",\n        \"@crate_index__warp-0.3.6//:warp\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"search\",\n        \"serve\",\n        \"watch\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=mdbook\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.4.36\",\n)\n\nrust_binary(\n    name = \"mdbook__bin\",\n    deps = [\n        \":mdbook\",\n        \"@crate_index__ammonia-3.3.0//:ammonia\",\n        \"@crate_index__anyhow-1.0.79//:anyhow\",\n        \"@crate_index__chrono-0.4.31//:chrono\",\n        \"@crate_index__clap-4.4.16//:clap\",\n        \"@crate_index__clap_complete-4.4.6//:clap_complete\",\n        \"@crate_index__elasticlunr-rs-3.0.2//:elasticlunr\",\n        \"@crate_index__env_logger-0.10.1//:env_logger\",\n        \"@crate_index__futures-util-0.3.30//:futures_util\",\n        \"@crate_index__handlebars-4.5.0//:handlebars\",\n        \"@crate_index__ignore-0.4.22//:ignore\",\n        \"@crate_index__log-0.4.20//:log\",\n        \"@crate_index__memchr-2.7.1//:memchr\",\n        \"@crate_index__notify-6.1.1//:notify\",\n        \"@crate_index__notify-debouncer-mini-0.4.1//:notify_debouncer_mini\",\n        \"@crate_index__once_cell-1.19.0//:once_cell\",\n        \"@crate_index__opener-0.6.1//:opener\",\n        \"@crate_index__pathdiff-0.2.1//:pathdiff\",\n        \"@crate_index__pulldown-cmark-0.9.3//:pulldown_cmark\",\n        \"@crate_index__regex-1.10.2//:regex\",\n        \"@crate_index__serde-1.0.195//:serde\",\n        \"@crate_index__serde_json-1.0.111//:serde_json\",\n        \"@crate_index__shlex-1.2.0//:shlex\",\n        \"@crate_index__tempfile-3.9.0//:tempfile\",\n        \"@crate_index__tokio-1.35.1//:tokio\",\n        \"@crate_index__toml-0.5.11//:toml\",\n        \"@crate_index__topological-sort-0.2.2//:topological_sort\",\n        \"@crate_index__warp-0.3.6//:warp\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"search\",\n        \"serve\",\n        \"watch\",\n    ],\n    crate_root = \"src/main.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=mdbook\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.4.36\",\n)\n"
            }
          },
          "crate_index__memchr-2.7.1": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "523dc4f511e55ab87b694dc30d0f820d60906ef06413f93d4d7a1385599cc149",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/memchr/2.7.1/download"
              ],
              "strip_prefix": "memchr-2.7.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"memchr\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"alloc\",\n        \"default\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=memchr\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"2.7.1\",\n)\n"
            }
          },
          "crate_index__mime-0.3.17": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "6877bb514081ee2a7ff5ef9de3281f14a4dd4bceac4c09388074a6b5df8a139a",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/mime/0.3.17/download"
              ],
              "strip_prefix": "mime-0.3.17",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"mime\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=mime\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.3.17\",\n)\n"
            }
          },
          "crate_index__mime_guess-2.0.4": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "4192263c238a5f0d0c6bfd21f336a313a4ce1c450542449ca191bb657b4642ef",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/mime_guess/2.0.4/download"
              ],
              "strip_prefix": "mime_guess-2.0.4",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"mime_guess\",\n    deps = [\n        \"@crate_index__mime-0.3.17//:mime\",\n        \"@crate_index__mime_guess-2.0.4//:build_script_build\",\n        \"@crate_index__unicase-2.7.0//:unicase\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"rev-mappings\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=mime_guess\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"2.0.4\",\n)\n\ncargo_build_script(\n    name = \"_bs\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \"**/*.rs\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"rev-mappings\",\n    ],\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    deps = [\n        \"@crate_index__unicase-2.7.0//:unicase\",\n    ],\n    edition = \"2015\",\n    pkg_name = \"mime_guess\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=mime_guess\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"2.0.4\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__miniz_oxide-0.7.1": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "e7810e0be55b428ada41041c41f32c9f1a42817901b4ccf45fa3d4b6561e74c7",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/miniz_oxide/0.7.1/download"
              ],
              "strip_prefix": "miniz_oxide-0.7.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"miniz_oxide\",\n    deps = [\n        \"@crate_index__adler-1.0.2//:adler\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=miniz_oxide\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.7.1\",\n)\n"
            }
          },
          "crate_index__mio-0.8.10": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "8f3d0b296e374a4e6f3c7b0a1f5a51d748a0d34c85e7dc48fc3fa9a87657fe09",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/mio/0.8.10/download"
              ],
              "strip_prefix": "mio-0.8.10",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"mio\",\n    deps = [\n        \"@crate_index__log-0.4.20//:log\",\n    ] + select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [\n            \"@crate_index__libc-0.2.152//:libc\",  # cfg(unix)\n        ],\n        \"//conditions:default\": [],\n    }),\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"log\",\n        \"net\",\n        \"os-ext\",\n        \"os-poll\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=mio\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.8.10\",\n)\n"
            }
          },
          "crate_index__multimap-0.8.3": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "e5ce46fe64a9d73be07dcbe690a38ce1b293be448fd8ce1e6c1b8062c9f72c6a",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/multimap/0.8.3/download"
              ],
              "strip_prefix": "multimap-0.8.3",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"multimap\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=multimap\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.8.3\",\n)\n"
            }
          },
          "crate_index__new_debug_unreachable-1.0.4": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "e4a24736216ec316047a1fc4252e27dabb04218aa4a3f37c6e7ddbf1f9782b54",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/new_debug_unreachable/1.0.4/download"
              ],
              "strip_prefix": "new_debug_unreachable-1.0.4",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"debug_unreachable\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=new_debug_unreachable\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.0.4\",\n)\n"
            }
          },
          "crate_index__normpath-1.1.1": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "ec60c60a693226186f5d6edf073232bfb6464ed97eb22cf3b01c1e8198fd97f5",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/normpath/1.1.1/download"
              ],
              "strip_prefix": "normpath-1.1.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"normpath\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=normpath\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.1.1\",\n)\n"
            }
          },
          "crate_index__notify-6.1.1": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "6205bd8bb1e454ad2e27422015fb5e4f2bcc7e08fa8f27058670d208324a4d2d",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/notify/6.1.1/download"
              ],
              "strip_prefix": "notify-6.1.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"notify\",\n    deps = [\n        \"@crate_index__crossbeam-channel-0.5.11//:crossbeam_channel\",\n        \"@crate_index__filetime-0.2.23//:filetime\",\n        \"@crate_index__libc-0.2.152//:libc\",\n        \"@crate_index__log-0.4.20//:log\",\n        \"@crate_index__walkdir-2.4.0//:walkdir\",\n    ] + select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [\n            \"@crate_index__inotify-0.9.6//:inotify\",  # cfg(any(target_os = \"linux\", target_os = \"android\"))\n            \"@crate_index__mio-0.8.10//:mio\",  # cfg(any(target_os = \"linux\", target_os = \"android\"))\n        ],\n        \"//conditions:default\": [],\n    }),\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"crossbeam-channel\",\n        \"default\",\n        \"fsevent-sys\",\n        \"macos_fsevent\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=notify\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"6.1.1\",\n)\n"
            }
          },
          "crate_index__notify-debouncer-mini-0.4.1": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "5d40b221972a1fc5ef4d858a2f671fb34c75983eb385463dff3780eeff6a9d43",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/notify-debouncer-mini/0.4.1/download"
              ],
              "strip_prefix": "notify-debouncer-mini-0.4.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"notify_debouncer_mini\",\n    deps = [\n        \"@crate_index__crossbeam-channel-0.5.11//:crossbeam_channel\",\n        \"@crate_index__log-0.4.20//:log\",\n        \"@crate_index__notify-6.1.1//:notify\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"crossbeam\",\n        \"crossbeam-channel\",\n        \"default\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=notify-debouncer-mini\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.4.1\",\n)\n"
            }
          },
          "crate_index__num-traits-0.2.17": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "39e3200413f237f41ab11ad6d161bc7239c84dcb631773ccd7de3dfe4b5c267c",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/num-traits/0.2.17/download"
              ],
              "strip_prefix": "num-traits-0.2.17",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"num_traits\",\n    deps = [\n        \"@crate_index__num-traits-0.2.17//:build_script_build\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=num-traits\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.2.17\",\n)\n\ncargo_build_script(\n    name = \"_bs\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \"**/*.rs\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    deps = [\n        \"@crate_index__autocfg-1.1.0//:autocfg\",\n    ],\n    edition = \"2018\",\n    pkg_name = \"num-traits\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=num-traits\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"0.2.17\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__num_cpus-1.16.0": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "4161fcb6d602d4d2081af7c3a45852d875a03dd337a6bfdd6e06407b61342a43",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/num_cpus/1.16.0/download"
              ],
              "strip_prefix": "num_cpus-1.16.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"num_cpus\",\n    deps = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [\n            \"@crate_index__libc-0.2.152//:libc\",  # cfg(not(windows))\n        ],\n        \"//conditions:default\": [],\n    }),\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=num_cpus\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.16.0\",\n)\n"
            }
          },
          "crate_index__object-0.32.2": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "a6a622008b6e321afc04970976f62ee297fdbaa6f95318ca343e3eebb9648441",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/object/0.32.2/download"
              ],
              "strip_prefix": "object-0.32.2",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"object\",\n    deps = [\n        \"@crate_index__memchr-2.7.1//:memchr\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=object\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.32.2\",\n)\n"
            }
          },
          "crate_index__once_cell-1.19.0": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "3fdb12b2476b595f9358c5161aa467c2438859caa136dec86c26fdd2efe17b92",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/once_cell/1.19.0/download"
              ],
              "strip_prefix": "once_cell-1.19.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"once_cell\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"alloc\",\n        \"default\",\n        \"race\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=once_cell\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.19.0\",\n)\n"
            }
          },
          "crate_index__opener-0.6.1": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "6c62dcb6174f9cb326eac248f07e955d5d559c272730b6c03e396b443b562788",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/opener/0.6.1/download"
              ],
              "strip_prefix": "opener-0.6.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"opener\",\n    deps = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [\n            \"@crate_index__bstr-1.9.0//:bstr\",  # cfg(target_os = \"linux\")\n        ],\n        \"//conditions:default\": [],\n    }),\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=opener\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.6.1\",\n)\n"
            }
          },
          "crate_index__parking_lot-0.12.1": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "3742b2c103b9f06bc9fff0a37ff4912935851bee6d36f3c02bcc755bcfec228f",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/parking_lot/0.12.1/download"
              ],
              "strip_prefix": "parking_lot-0.12.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"parking_lot\",\n    deps = [\n        \"@crate_index__lock_api-0.4.11//:lock_api\",\n        \"@crate_index__parking_lot_core-0.9.9//:parking_lot_core\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=parking_lot\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.12.1\",\n)\n"
            }
          },
          "crate_index__parking_lot_core-0.9.9": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "4c42a9226546d68acdd9c0a280d17ce19bfe27a46bf68784e4066115788d008e",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/parking_lot_core/0.9.9/download"
              ],
              "strip_prefix": "parking_lot_core-0.9.9",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"parking_lot_core\",\n    deps = [\n        \"@crate_index__cfg-if-1.0.0//:cfg_if\",\n        \"@crate_index__parking_lot_core-0.9.9//:build_script_build\",\n        \"@crate_index__smallvec-1.11.2//:smallvec\",\n    ] + select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [\n            \"@crate_index__libc-0.2.152//:libc\",  # cfg(unix)\n        ],\n        \"//conditions:default\": [],\n    }),\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=parking_lot_core\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.9.9\",\n)\n\ncargo_build_script(\n    name = \"_bs\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \"**/*.rs\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2018\",\n    pkg_name = \"parking_lot_core\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=parking_lot_core\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"0.9.9\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__pathdiff-0.2.1": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "8835116a5c179084a830efb3adc117ab007512b535bc1a21c991d3b32a6b44dd",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/pathdiff/0.2.1/download"
              ],
              "strip_prefix": "pathdiff-0.2.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"pathdiff\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=pathdiff\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.2.1\",\n)\n"
            }
          },
          "crate_index__percent-encoding-2.3.1": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "e3148f5046208a5d56bcfc03053e3ca6334e51da8dfb19b6cdc8b306fae3283e",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/percent-encoding/2.3.1/download"
              ],
              "strip_prefix": "percent-encoding-2.3.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"percent_encoding\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"alloc\",\n        \"default\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=percent-encoding\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"2.3.1\",\n)\n"
            }
          },
          "crate_index__pest-2.7.6": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "1f200d8d83c44a45b21764d1916299752ca035d15ecd46faca3e9a2a2bf6ad06",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/pest/2.7.6/download"
              ],
              "strip_prefix": "pest-2.7.6",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"pest\",\n    deps = [\n        \"@crate_index__memchr-2.7.1//:memchr\",\n        \"@crate_index__thiserror-1.0.56//:thiserror\",\n        \"@crate_index__ucd-trie-0.1.6//:ucd_trie\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"memchr\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=pest\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"2.7.6\",\n)\n"
            }
          },
          "crate_index__pest_derive-2.7.6": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "bcd6ab1236bbdb3a49027e920e693192ebfe8913f6d60e294de57463a493cfde",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/pest_derive/2.7.6/download"
              ],
              "strip_prefix": "pest_derive-2.7.6",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_proc_macro\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_proc_macro(\n    name = \"pest_derive\",\n    deps = [\n        \"@crate_index__pest-2.7.6//:pest\",\n        \"@crate_index__pest_generator-2.7.6//:pest_generator\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=pest_derive\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"2.7.6\",\n)\n"
            }
          },
          "crate_index__pest_generator-2.7.6": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "2a31940305ffc96863a735bef7c7994a00b325a7138fdbc5bda0f1a0476d3275",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/pest_generator/2.7.6/download"
              ],
              "strip_prefix": "pest_generator-2.7.6",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"pest_generator\",\n    deps = [\n        \"@crate_index__pest-2.7.6//:pest\",\n        \"@crate_index__pest_meta-2.7.6//:pest_meta\",\n        \"@crate_index__proc-macro2-1.0.76//:proc_macro2\",\n        \"@crate_index__quote-1.0.35//:quote\",\n        \"@crate_index__syn-2.0.48//:syn\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=pest_generator\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"2.7.6\",\n)\n"
            }
          },
          "crate_index__pest_meta-2.7.6": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "a7ff62f5259e53b78d1af898941cdcdccfae7385cf7d793a6e55de5d05bb4b7d",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/pest_meta/2.7.6/download"
              ],
              "strip_prefix": "pest_meta-2.7.6",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"pest_meta\",\n    deps = [\n        \"@crate_index__once_cell-1.19.0//:once_cell\",\n        \"@crate_index__pest-2.7.6//:pest\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=pest_meta\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"2.7.6\",\n)\n"
            }
          },
          "crate_index__petgraph-0.6.4": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "e1d3afd2628e69da2be385eb6f2fd57c8ac7977ceeff6dc166ff1657b0e386a9",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/petgraph/0.6.4/download"
              ],
              "strip_prefix": "petgraph-0.6.4",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"petgraph\",\n    deps = [\n        \"@crate_index__fixedbitset-0.4.2//:fixedbitset\",\n        \"@crate_index__indexmap-2.1.0//:indexmap\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=petgraph\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.6.4\",\n)\n"
            }
          },
          "crate_index__phf-0.10.1": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "fabbf1ead8a5bcbc20f5f8b939ee3f5b0f6f281b6ad3468b84656b658b455259",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/phf/0.10.1/download"
              ],
              "strip_prefix": "phf-0.10.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"phf\",\n    deps = [\n        \"@crate_index__phf_shared-0.10.0//:phf_shared\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=phf\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.10.1\",\n)\n"
            }
          },
          "crate_index__phf_codegen-0.10.0": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "4fb1c3a8bc4dd4e5cfce29b44ffc14bedd2ee294559a294e2a4d4c9e9a6a13cd",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/phf_codegen/0.10.0/download"
              ],
              "strip_prefix": "phf_codegen-0.10.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"phf_codegen\",\n    deps = [\n        \"@crate_index__phf_generator-0.10.0//:phf_generator\",\n        \"@crate_index__phf_shared-0.10.0//:phf_shared\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=phf_codegen\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.10.0\",\n)\n"
            }
          },
          "crate_index__phf_generator-0.10.0": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "5d5285893bb5eb82e6aaf5d59ee909a06a16737a8970984dd7746ba9283498d6",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/phf_generator/0.10.0/download"
              ],
              "strip_prefix": "phf_generator-0.10.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\n    \"@rules_rust//rust:defs.bzl\",\n    \"rust_binary\",\n    \"rust_library\",\n)\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"phf_generator\",\n    deps = [\n        \"@crate_index__phf_shared-0.10.0//:phf_shared\",\n        \"@crate_index__rand-0.8.5//:rand\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=phf_generator\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.10.0\",\n)\n\nrust_binary(\n    name = \"gen_hash_test__bin\",\n    deps = [\n        \":phf_generator\",\n        \"@crate_index__phf_shared-0.10.0//:phf_shared\",\n        \"@crate_index__rand-0.8.5//:rand\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/bin/gen_hash_test.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=phf_generator\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.10.0\",\n)\n"
            }
          },
          "crate_index__phf_shared-0.10.0": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "b6796ad771acdc0123d2a88dc428b5e38ef24456743ddb1744ed628f9815c096",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/phf_shared/0.10.0/download"
              ],
              "strip_prefix": "phf_shared-0.10.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"phf_shared\",\n    deps = [\n        \"@crate_index__siphasher-0.3.11//:siphasher\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=phf_shared\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.10.0\",\n)\n"
            }
          },
          "crate_index__pin-project-1.1.3": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "fda4ed1c6c173e3fc7a83629421152e01d7b1f9b7f65fb301e490e8cfc656422",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/pin-project/1.1.3/download"
              ],
              "strip_prefix": "pin-project-1.1.3",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"pin_project\",\n    proc_macro_deps = [\n        \"@crate_index__pin-project-internal-1.1.3//:pin_project_internal\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=pin-project\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.1.3\",\n)\n"
            }
          },
          "crate_index__pin-project-internal-1.1.3": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "4359fd9c9171ec6e8c62926d6faaf553a8dc3f64e1507e76da7911b4f6a04405",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/pin-project-internal/1.1.3/download"
              ],
              "strip_prefix": "pin-project-internal-1.1.3",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_proc_macro\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_proc_macro(\n    name = \"pin_project_internal\",\n    deps = [\n        \"@crate_index__proc-macro2-1.0.76//:proc_macro2\",\n        \"@crate_index__quote-1.0.35//:quote\",\n        \"@crate_index__syn-2.0.48//:syn\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=pin-project-internal\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.1.3\",\n)\n"
            }
          },
          "crate_index__pin-project-lite-0.2.13": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "8afb450f006bf6385ca15ef45d71d2288452bc3683ce2e2cacc0d18e4be60b58",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/pin-project-lite/0.2.13/download"
              ],
              "strip_prefix": "pin-project-lite-0.2.13",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"pin_project_lite\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=pin-project-lite\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.2.13\",\n)\n"
            }
          },
          "crate_index__pin-utils-0.1.0": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "8b870d8c151b6f2fb93e84a13146138f05d02ed11c7e7c54f8826aaaf7c9f184",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/pin-utils/0.1.0/download"
              ],
              "strip_prefix": "pin-utils-0.1.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"pin_utils\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=pin-utils\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.1.0\",\n)\n"
            }
          },
          "crate_index__ppv-lite86-0.2.17": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "5b40af805b3121feab8a3c29f04d8ad262fa8e0561883e7653e024ae4479e6de",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/ppv-lite86/0.2.17/download"
              ],
              "strip_prefix": "ppv-lite86-0.2.17",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"ppv_lite86\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"simd\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=ppv-lite86\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.2.17\",\n)\n"
            }
          },
          "crate_index__precomputed-hash-0.1.1": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "925383efa346730478fb4838dbe9137d2a47675ad789c546d150a6e1dd4ab31c",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/precomputed-hash/0.1.1/download"
              ],
              "strip_prefix": "precomputed-hash-0.1.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"precomputed_hash\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=precomputed-hash\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.1.1\",\n)\n"
            }
          },
          "crate_index__proc-macro2-1.0.76": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "95fc56cda0b5c3325f5fbbd7ff9fda9e02bb00bb3dac51252d2f1bfa1cb8cc8c",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/proc-macro2/1.0.76/download"
              ],
              "strip_prefix": "proc-macro2-1.0.76",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"proc_macro2\",\n    deps = [\n        \"@crate_index__proc-macro2-1.0.76//:build_script_build\",\n        \"@crate_index__unicode-ident-1.0.12//:unicode_ident\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"proc-macro\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=proc-macro2\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.0.76\",\n)\n\ncargo_build_script(\n    name = \"_bs\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \"**/*.rs\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"proc-macro\",\n    ],\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2021\",\n    pkg_name = \"proc-macro2\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=proc-macro2\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"1.0.76\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__prost-0.11.9": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "0b82eaa1d779e9a4bc1c3217db8ffbeabaae1dca241bf70183242128d48681cd",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/prost/0.11.9/download"
              ],
              "strip_prefix": "prost-0.11.9",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"prost\",\n    deps = [\n        \"@crate_index__bytes-1.5.0//:bytes\",\n    ],\n    proc_macro_deps = [\n        \"@crate_index__prost-derive-0.11.9//:prost_derive\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"prost-derive\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=prost\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.11.9\",\n)\n"
            }
          },
          "crate_index__prost-build-0.11.9": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "119533552c9a7ffacc21e099c24a0ac8bb19c2a2a3f363de84cd9b844feab270",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/prost-build/0.11.9/download"
              ],
              "strip_prefix": "prost-build-0.11.9",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"prost_build\",\n    deps = [\n        \"@crate_index__bytes-1.5.0//:bytes\",\n        \"@crate_index__heck-0.4.1//:heck\",\n        \"@crate_index__itertools-0.10.5//:itertools\",\n        \"@crate_index__lazy_static-1.4.0//:lazy_static\",\n        \"@crate_index__log-0.4.20//:log\",\n        \"@crate_index__multimap-0.8.3//:multimap\",\n        \"@crate_index__petgraph-0.6.4//:petgraph\",\n        \"@crate_index__prost-0.11.9//:prost\",\n        \"@crate_index__prost-types-0.11.9//:prost_types\",\n        \"@crate_index__regex-1.10.2//:regex\",\n        \"@crate_index__tempfile-3.9.0//:tempfile\",\n        \"@crate_index__which-4.4.2//:which\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=prost-build\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.11.9\",\n)\n"
            }
          },
          "crate_index__prost-derive-0.11.9": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "e5d2d8d10f3c6ded6da8b05b5fb3b8a5082514344d56c9f871412d29b4e075b4",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/prost-derive/0.11.9/download"
              ],
              "strip_prefix": "prost-derive-0.11.9",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_proc_macro\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_proc_macro(\n    name = \"prost_derive\",\n    deps = [\n        \"@crate_index__anyhow-1.0.79//:anyhow\",\n        \"@crate_index__itertools-0.10.5//:itertools\",\n        \"@crate_index__proc-macro2-1.0.76//:proc_macro2\",\n        \"@crate_index__quote-1.0.35//:quote\",\n        \"@crate_index__syn-1.0.109//:syn\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=prost-derive\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.11.9\",\n)\n"
            }
          },
          "crate_index__prost-types-0.11.9": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "213622a1460818959ac1181aaeb2dc9c7f63df720db7d788b3e24eacd1983e13",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/prost-types/0.11.9/download"
              ],
              "strip_prefix": "prost-types-0.11.9",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"prost_types\",\n    deps = [\n        \"@crate_index__prost-0.11.9//:prost\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=prost-types\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.11.9\",\n)\n"
            }
          },
          "crate_index__protoc-gen-prost-0.2.3": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "10dfa031ad41fdcfb180de73ece3ed076250f1132a13ad6bba218699f612fb95",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/protoc-gen-prost/0.2.3/download"
              ],
              "strip_prefix": "protoc-gen-prost-0.2.3",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\n    \"@rules_rust//rust:defs.bzl\",\n    \"rust_binary\",\n    \"rust_library\",\n)\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"protoc_gen_prost\",\n    deps = [\n        \"@crate_index__once_cell-1.19.0//:once_cell\",\n        \"@crate_index__prost-0.11.9//:prost\",\n        \"@crate_index__prost-build-0.11.9//:prost_build\",\n        \"@crate_index__prost-types-0.11.9//:prost_types\",\n        \"@crate_index__regex-1.10.2//:regex\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=protoc-gen-prost\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.2.3\",\n)\n\nrust_binary(\n    name = \"protoc-gen-prost__bin\",\n    deps = [\n        \":protoc_gen_prost\",\n        \"@crate_index__once_cell-1.19.0//:once_cell\",\n        \"@crate_index__prost-0.11.9//:prost\",\n        \"@crate_index__prost-build-0.11.9//:prost_build\",\n        \"@crate_index__prost-types-0.11.9//:prost_types\",\n        \"@crate_index__regex-1.10.2//:regex\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/main.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=protoc-gen-prost\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.2.3\",\n)\n"
            }
          },
          "crate_index__pulldown-cmark-0.9.3": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "77a1a2f1f0a7ecff9c31abbe177637be0e97a0aef46cf8738ece09327985d998",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/pulldown-cmark/0.9.3/download"
              ],
              "strip_prefix": "pulldown-cmark-0.9.3",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\n    \"@rules_rust//rust:defs.bzl\",\n    \"rust_binary\",\n    \"rust_library\",\n)\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"pulldown_cmark\",\n    deps = [\n        \"@crate_index__bitflags-1.3.2//:bitflags\",\n        \"@crate_index__memchr-2.7.1//:memchr\",\n        \"@crate_index__pulldown-cmark-0.9.3//:build_script_build\",\n        \"@crate_index__unicase-2.7.0//:unicase\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=pulldown-cmark\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.9.3\",\n)\n\nrust_binary(\n    name = \"pulldown-cmark__bin\",\n    deps = [\n        \":pulldown_cmark\",\n        \"@crate_index__bitflags-1.3.2//:bitflags\",\n        \"@crate_index__memchr-2.7.1//:memchr\",\n        \"@crate_index__pulldown-cmark-0.9.3//:build_script_build\",\n        \"@crate_index__unicase-2.7.0//:unicase\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/main.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=pulldown-cmark\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.9.3\",\n)\n\ncargo_build_script(\n    name = \"_bs\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \"**/*.rs\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2021\",\n    pkg_name = \"pulldown-cmark\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=pulldown-cmark\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"0.9.3\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__quote-1.0.35": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "291ec9ab5efd934aaf503a6466c5d5251535d108ee747472c3977cc5acc868ef",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/quote/1.0.35/download"
              ],
              "strip_prefix": "quote-1.0.35",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"quote\",\n    deps = [\n        \"@crate_index__proc-macro2-1.0.76//:proc_macro2\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"proc-macro\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=quote\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.0.35\",\n)\n"
            }
          },
          "crate_index__rand-0.8.5": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "34af8d1a0e25924bc5b7c43c079c942339d8f0a8b57c39049bef581b46327404",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/rand/0.8.5/download"
              ],
              "strip_prefix": "rand-0.8.5",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"rand\",\n    deps = [\n        \"@crate_index__libc-0.2.152//:libc\",\n        \"@crate_index__rand_chacha-0.3.1//:rand_chacha\",\n        \"@crate_index__rand_core-0.6.4//:rand_core\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"alloc\",\n        \"default\",\n        \"getrandom\",\n        \"libc\",\n        \"rand_chacha\",\n        \"small_rng\",\n        \"std\",\n        \"std_rng\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=rand\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.8.5\",\n)\n"
            }
          },
          "crate_index__rand_chacha-0.3.1": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "e6c10a63a0fa32252be49d21e7709d4d4baf8d231c2dbce1eaa8141b9b127d88",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/rand_chacha/0.3.1/download"
              ],
              "strip_prefix": "rand_chacha-0.3.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"rand_chacha\",\n    deps = [\n        \"@crate_index__ppv-lite86-0.2.17//:ppv_lite86\",\n        \"@crate_index__rand_core-0.6.4//:rand_core\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=rand_chacha\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.3.1\",\n)\n"
            }
          },
          "crate_index__rand_core-0.6.4": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "ec0be4795e2f6a28069bec0b5ff3e2ac9bafc99e6a9a7dc3547996c5c816922c",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/rand_core/0.6.4/download"
              ],
              "strip_prefix": "rand_core-0.6.4",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"rand_core\",\n    deps = [\n        \"@crate_index__getrandom-0.2.12//:getrandom\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"alloc\",\n        \"getrandom\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=rand_core\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.6.4\",\n)\n"
            }
          },
          "crate_index__redox_syscall-0.4.1": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "4722d768eff46b75989dd134e5c353f0d6296e5aaa3132e776cbdb56be7731aa",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/redox_syscall/0.4.1/download"
              ],
              "strip_prefix": "redox_syscall-0.4.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"syscall\",\n    deps = [\n        \"@crate_index__bitflags-1.3.2//:bitflags\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=redox_syscall\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.4.1\",\n)\n"
            }
          },
          "crate_index__regex-1.10.2": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "380b951a9c5e80ddfd6136919eef32310721aa4aacd4889a8d39124b026ab343",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/regex/1.10.2/download"
              ],
              "strip_prefix": "regex-1.10.2",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"regex\",\n    deps = [\n        \"@crate_index__aho-corasick-1.1.2//:aho_corasick\",\n        \"@crate_index__memchr-2.7.1//:memchr\",\n        \"@crate_index__regex-automata-0.4.3//:regex_automata\",\n        \"@crate_index__regex-syntax-0.8.2//:regex_syntax\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"perf\",\n        \"perf-backtrack\",\n        \"perf-cache\",\n        \"perf-dfa\",\n        \"perf-inline\",\n        \"perf-literal\",\n        \"perf-onepass\",\n        \"std\",\n        \"unicode\",\n        \"unicode-age\",\n        \"unicode-bool\",\n        \"unicode-case\",\n        \"unicode-gencat\",\n        \"unicode-perl\",\n        \"unicode-script\",\n        \"unicode-segment\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=regex\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.10.2\",\n)\n"
            }
          },
          "crate_index__regex-automata-0.4.3": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "5f804c7828047e88b2d32e2d7fe5a105da8ee3264f01902f796c8e067dc2483f",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/regex-automata/0.4.3/download"
              ],
              "strip_prefix": "regex-automata-0.4.3",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"regex_automata\",\n    deps = [\n        \"@crate_index__aho-corasick-1.1.2//:aho_corasick\",\n        \"@crate_index__memchr-2.7.1//:memchr\",\n        \"@crate_index__regex-syntax-0.8.2//:regex_syntax\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"alloc\",\n        \"dfa-onepass\",\n        \"dfa-search\",\n        \"hybrid\",\n        \"meta\",\n        \"nfa\",\n        \"nfa-backtrack\",\n        \"nfa-pikevm\",\n        \"nfa-thompson\",\n        \"perf\",\n        \"perf-inline\",\n        \"perf-literal\",\n        \"perf-literal-multisubstring\",\n        \"perf-literal-substring\",\n        \"std\",\n        \"syntax\",\n        \"unicode\",\n        \"unicode-age\",\n        \"unicode-bool\",\n        \"unicode-case\",\n        \"unicode-gencat\",\n        \"unicode-perl\",\n        \"unicode-script\",\n        \"unicode-segment\",\n        \"unicode-word-boundary\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=regex-automata\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.4.3\",\n)\n"
            }
          },
          "crate_index__regex-syntax-0.8.2": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "c08c74e62047bb2de4ff487b251e4a92e24f48745648451635cec7d591162d9f",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/regex-syntax/0.8.2/download"
              ],
              "strip_prefix": "regex-syntax-0.8.2",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"regex_syntax\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"std\",\n        \"unicode\",\n        \"unicode-age\",\n        \"unicode-bool\",\n        \"unicode-case\",\n        \"unicode-gencat\",\n        \"unicode-perl\",\n        \"unicode-script\",\n        \"unicode-segment\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=regex-syntax\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.8.2\",\n)\n"
            }
          },
          "crate_index__rustc-demangle-0.1.23": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "d626bb9dae77e28219937af045c257c28bfd3f69333c512553507f5f9798cb76",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/rustc-demangle/0.1.23/download"
              ],
              "strip_prefix": "rustc-demangle-0.1.23",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"rustc_demangle\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=rustc-demangle\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.1.23\",\n)\n"
            }
          },
          "crate_index__rustix-0.38.28": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "72e572a5e8ca657d7366229cdde4bd14c4eb5499a9573d4d366fe1b599daa316",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/rustix/0.38.28/download"
              ],
              "strip_prefix": "rustix-0.38.28",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"rustix\",\n    deps = [\n        \"@crate_index__bitflags-2.4.1//:bitflags\",\n        \"@crate_index__rustix-0.38.28//:build_script_build\",\n    ] + select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [\n            \"@crate_index__linux-raw-sys-0.4.12//:linux_raw_sys\",  # cfg(all(not(rustix_use_libc), not(miri), target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"))))\n        ],\n        \"//conditions:default\": [],\n    }),\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"alloc\",\n        \"default\",\n        \"fs\",\n        \"std\",\n        \"termios\",\n        \"use-libc-auxv\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=rustix\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.38.28\",\n)\n\ncargo_build_script(\n    name = \"_bs\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \"**/*.rs\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"alloc\",\n        \"default\",\n        \"fs\",\n        \"std\",\n        \"termios\",\n        \"use-libc-auxv\",\n    ],\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2021\",\n    pkg_name = \"rustix\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=rustix\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"0.38.28\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__rustls-pemfile-1.0.4": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "1c74cae0a4cf6ccbbf5f359f08efdf8ee7e1dc532573bf0db71968cb56b1448c",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/rustls-pemfile/1.0.4/download"
              ],
              "strip_prefix": "rustls-pemfile-1.0.4",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"rustls_pemfile\",\n    deps = [\n        \"@crate_index__base64-0.21.7//:base64\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=rustls-pemfile\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.0.4\",\n)\n"
            }
          },
          "crate_index__ryu-1.0.16": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "f98d2aa92eebf49b69786be48e4477826b256916e84a57ff2a4f21923b48eb4c",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/ryu/1.0.16/download"
              ],
              "strip_prefix": "ryu-1.0.16",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"ryu\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=ryu\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.0.16\",\n)\n"
            }
          },
          "crate_index__same-file-1.0.6": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "93fc1dc3aaa9bfed95e02e6eadabb4baf7e3078b0bd1b4d7b6b0b68378900502",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/same-file/1.0.6/download"
              ],
              "strip_prefix": "same-file-1.0.6",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"same_file\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=same-file\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.0.6\",\n)\n"
            }
          },
          "crate_index__scoped-tls-1.0.1": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "e1cf6437eb19a8f4a6cc0f7dca544973b0b78843adbfeb3683d1a94a0024a294",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/scoped-tls/1.0.1/download"
              ],
              "strip_prefix": "scoped-tls-1.0.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"scoped_tls\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=scoped-tls\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.0.1\",\n)\n"
            }
          },
          "crate_index__scopeguard-1.2.0": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "94143f37725109f92c262ed2cf5e59bce7498c01bcc1502d7b9afe439a4e9f49",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/scopeguard/1.2.0/download"
              ],
              "strip_prefix": "scopeguard-1.2.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"scopeguard\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=scopeguard\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.2.0\",\n)\n"
            }
          },
          "crate_index__serde-1.0.195": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "63261df402c67811e9ac6def069e4786148c4563f4b50fd4bf30aa370d626b02",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/serde/1.0.195/download"
              ],
              "strip_prefix": "serde-1.0.195",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"serde\",\n    deps = [\n        \"@crate_index__serde-1.0.195//:build_script_build\",\n    ],\n    proc_macro_deps = [\n        \"@crate_index__serde_derive-1.0.195//:serde_derive\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"derive\",\n        \"serde_derive\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=serde\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.0.195\",\n)\n\ncargo_build_script(\n    name = \"_bs\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \"**/*.rs\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"derive\",\n        \"serde_derive\",\n        \"std\",\n    ],\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2018\",\n    pkg_name = \"serde\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=serde\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"1.0.195\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__serde_derive-1.0.195": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "46fe8f8603d81ba86327b23a2e9cdf49e1255fb94a4c5f297f6ee0547178ea2c",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/serde_derive/1.0.195/download"
              ],
              "strip_prefix": "serde_derive-1.0.195",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_proc_macro\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_proc_macro(\n    name = \"serde_derive\",\n    deps = [\n        \"@crate_index__proc-macro2-1.0.76//:proc_macro2\",\n        \"@crate_index__quote-1.0.35//:quote\",\n        \"@crate_index__syn-2.0.48//:syn\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=serde_derive\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.0.195\",\n)\n"
            }
          },
          "crate_index__serde_json-1.0.111": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "176e46fa42316f18edd598015a5166857fc835ec732f5215eac6b7bdbf0a84f4",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/serde_json/1.0.111/download"
              ],
              "strip_prefix": "serde_json-1.0.111",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"serde_json\",\n    deps = [\n        \"@crate_index__itoa-1.0.10//:itoa\",\n        \"@crate_index__ryu-1.0.16//:ryu\",\n        \"@crate_index__serde-1.0.195//:serde\",\n        \"@crate_index__serde_json-1.0.111//:build_script_build\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=serde_json\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.0.111\",\n)\n\ncargo_build_script(\n    name = \"_bs\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \"**/*.rs\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"std\",\n    ],\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2021\",\n    pkg_name = \"serde_json\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=serde_json\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"1.0.111\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__serde_urlencoded-0.7.1": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "d3491c14715ca2294c4d6a88f15e84739788c1d030eed8c110436aafdaa2f3fd",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/serde_urlencoded/0.7.1/download"
              ],
              "strip_prefix": "serde_urlencoded-0.7.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"serde_urlencoded\",\n    deps = [\n        \"@crate_index__form_urlencoded-1.2.1//:form_urlencoded\",\n        \"@crate_index__itoa-1.0.10//:itoa\",\n        \"@crate_index__ryu-1.0.16//:ryu\",\n        \"@crate_index__serde-1.0.195//:serde\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=serde_urlencoded\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.7.1\",\n)\n"
            }
          },
          "crate_index__sha1-0.10.6": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "e3bf829a2d51ab4a5ddf1352d8470c140cadc8301b2ae1789db023f01cedd6ba",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/sha1/0.10.6/download"
              ],
              "strip_prefix": "sha1-0.10.6",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"sha1\",\n    deps = [\n        \"@crate_index__cfg-if-1.0.0//:cfg_if\",\n        \"@crate_index__digest-0.10.7//:digest\",\n    ] + select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [\n            \"@crate_index__cpufeatures-0.2.12//:cpufeatures\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"x86\", target_arch = \"x86_64\"))\n        ],\n        \"//conditions:default\": [],\n    }),\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=sha1\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.10.6\",\n)\n"
            }
          },
          "crate_index__sha2-0.10.8": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "793db75ad2bcafc3ffa7c68b215fee268f537982cd901d132f89c6343f3a3dc8",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/sha2/0.10.8/download"
              ],
              "strip_prefix": "sha2-0.10.8",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"sha2\",\n    deps = [\n        \"@crate_index__cfg-if-1.0.0//:cfg_if\",\n        \"@crate_index__digest-0.10.7//:digest\",\n    ] + select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [\n            \"@crate_index__cpufeatures-0.2.12//:cpufeatures\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"x86_64\", target_arch = \"x86\"))\n        ],\n        \"//conditions:default\": [],\n    }),\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=sha2\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.10.8\",\n)\n"
            }
          },
          "crate_index__shlex-1.2.0": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "a7cee0529a6d40f580e7a5e6c495c8fbfe21b7b52795ed4bb5e62cdf92bc6380",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/shlex/1.2.0/download"
              ],
              "strip_prefix": "shlex-1.2.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"shlex\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=shlex\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.2.0\",\n)\n"
            }
          },
          "crate_index__siphasher-0.3.11": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "38b58827f4464d87d377d175e90bf58eb00fd8716ff0a62f80356b5e61555d0d",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/siphasher/0.3.11/download"
              ],
              "strip_prefix": "siphasher-0.3.11",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"siphasher\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=siphasher\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.3.11\",\n)\n"
            }
          },
          "crate_index__slab-0.4.9": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "8f92a496fb766b417c996b9c5e57daf2f7ad3b0bebe1ccfca4856390e3d3bb67",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/slab/0.4.9/download"
              ],
              "strip_prefix": "slab-0.4.9",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"slab\",\n    deps = [\n        \"@crate_index__slab-0.4.9//:build_script_build\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=slab\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.4.9\",\n)\n\ncargo_build_script(\n    name = \"_bs\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \"**/*.rs\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"std\",\n    ],\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    deps = [\n        \"@crate_index__autocfg-1.1.0//:autocfg\",\n    ],\n    edition = \"2018\",\n    pkg_name = \"slab\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=slab\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"0.4.9\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__smallvec-1.11.2": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "4dccd0940a2dcdf68d092b8cbab7dc0ad8fa938bf95787e1b916b0e3d0e8e970",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/smallvec/1.11.2/download"
              ],
              "strip_prefix": "smallvec-1.11.2",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"smallvec\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=smallvec\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.11.2\",\n)\n"
            }
          },
          "crate_index__socket2-0.5.5": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "7b5fac59a5cb5dd637972e5fca70daf0523c9067fcdc4842f053dae04a18f8e9",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/socket2/0.5.5/download"
              ],
              "strip_prefix": "socket2-0.5.5",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"socket2\",\n    deps = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [\n            \"@crate_index__libc-0.2.152//:libc\",  # cfg(unix)\n        ],\n        \"//conditions:default\": [],\n    }),\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"all\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=socket2\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.5.5\",\n)\n"
            }
          },
          "crate_index__string_cache-0.8.7": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "f91138e76242f575eb1d3b38b4f1362f10d3a43f47d182a5b359af488a02293b",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/string_cache/0.8.7/download"
              ],
              "strip_prefix": "string_cache-0.8.7",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"string_cache\",\n    deps = [\n        \"@crate_index__new_debug_unreachable-1.0.4//:debug_unreachable\",\n        \"@crate_index__once_cell-1.19.0//:once_cell\",\n        \"@crate_index__parking_lot-0.12.1//:parking_lot\",\n        \"@crate_index__phf_shared-0.10.0//:phf_shared\",\n        \"@crate_index__precomputed-hash-0.1.1//:precomputed_hash\",\n        \"@crate_index__serde-1.0.195//:serde\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"serde\",\n        \"serde_support\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=string_cache\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.8.7\",\n)\n"
            }
          },
          "crate_index__string_cache_codegen-0.5.2": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "6bb30289b722be4ff74a408c3cc27edeaad656e06cb1fe8fa9231fa59c728988",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/string_cache_codegen/0.5.2/download"
              ],
              "strip_prefix": "string_cache_codegen-0.5.2",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"string_cache_codegen\",\n    deps = [\n        \"@crate_index__phf_generator-0.10.0//:phf_generator\",\n        \"@crate_index__phf_shared-0.10.0//:phf_shared\",\n        \"@crate_index__proc-macro2-1.0.76//:proc_macro2\",\n        \"@crate_index__quote-1.0.35//:quote\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=string_cache_codegen\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.5.2\",\n)\n"
            }
          },
          "crate_index__strsim-0.10.0": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "73473c0e59e6d5812c5dfe2a064a6444949f089e20eec9a2e5506596494e4623",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/strsim/0.10.0/download"
              ],
              "strip_prefix": "strsim-0.10.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"strsim\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=strsim\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.10.0\",\n)\n"
            }
          },
          "crate_index__syn-1.0.109": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "72b64191b275b66ffe2469e8af2c1cfe3bafa67b529ead792a6d0160888b4237",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/syn/1.0.109/download"
              ],
              "strip_prefix": "syn-1.0.109",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"syn\",\n    deps = [\n        \"@crate_index__proc-macro2-1.0.76//:proc_macro2\",\n        \"@crate_index__quote-1.0.35//:quote\",\n        \"@crate_index__syn-1.0.109//:build_script_build\",\n        \"@crate_index__unicode-ident-1.0.12//:unicode_ident\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"clone-impls\",\n        \"default\",\n        \"derive\",\n        \"extra-traits\",\n        \"fold\",\n        \"full\",\n        \"parsing\",\n        \"printing\",\n        \"proc-macro\",\n        \"quote\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=syn\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.0.109\",\n)\n\ncargo_build_script(\n    name = \"_bs\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \"**/*.rs\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"clone-impls\",\n        \"default\",\n        \"derive\",\n        \"extra-traits\",\n        \"fold\",\n        \"full\",\n        \"parsing\",\n        \"printing\",\n        \"proc-macro\",\n        \"quote\",\n    ],\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2018\",\n    pkg_name = \"syn\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=syn\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"1.0.109\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__syn-2.0.48": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "0f3531638e407dfc0814761abb7c00a5b54992b849452a0646b7f65c9f770f3f",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/syn/2.0.48/download"
              ],
              "strip_prefix": "syn-2.0.48",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"syn\",\n    deps = [\n        \"@crate_index__proc-macro2-1.0.76//:proc_macro2\",\n        \"@crate_index__quote-1.0.35//:quote\",\n        \"@crate_index__unicode-ident-1.0.12//:unicode_ident\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"clone-impls\",\n        \"default\",\n        \"derive\",\n        \"full\",\n        \"parsing\",\n        \"printing\",\n        \"proc-macro\",\n        \"quote\",\n        \"visit\",\n        \"visit-mut\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=syn\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"2.0.48\",\n)\n"
            }
          },
          "crate_index__tempfile-3.9.0": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "01ce4141aa927a6d1bd34a041795abd0db1cccba5d5f24b009f694bdf3a1f3fa",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/tempfile/3.9.0/download"
              ],
              "strip_prefix": "tempfile-3.9.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"tempfile\",\n    deps = [\n        \"@crate_index__cfg-if-1.0.0//:cfg_if\",\n        \"@crate_index__fastrand-2.0.1//:fastrand\",\n    ] + select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [\n            \"@crate_index__rustix-0.38.28//:rustix\",  # cfg(any(unix, target_os = \"wasi\"))\n        ],\n        \"//conditions:default\": [],\n    }),\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=tempfile\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"3.9.0\",\n)\n"
            }
          },
          "crate_index__tendril-0.4.3": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "d24a120c5fc464a3458240ee02c299ebcb9d67b5249c8848b09d639dca8d7bb0",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/tendril/0.4.3/download"
              ],
              "strip_prefix": "tendril-0.4.3",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"tendril\",\n    deps = [\n        \"@crate_index__futf-0.1.5//:futf\",\n        \"@crate_index__mac-0.1.1//:mac\",\n        \"@crate_index__utf-8-0.7.6//:utf8\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=tendril\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.4.3\",\n)\n"
            }
          },
          "crate_index__termcolor-1.4.1": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "06794f8f6c5c898b3275aebefa6b8a1cb24cd2c6c79397ab15774837a0bc5755",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/termcolor/1.4.1/download"
              ],
              "strip_prefix": "termcolor-1.4.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"termcolor\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=termcolor\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.4.1\",\n)\n"
            }
          },
          "crate_index__terminal_size-0.3.0": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "21bebf2b7c9e0a515f6e0f8c51dc0f8e4696391e6f1ff30379559f8365fb0df7",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/terminal_size/0.3.0/download"
              ],
              "strip_prefix": "terminal_size-0.3.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"terminal_size\",\n    deps = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [\n            \"@crate_index__rustix-0.38.28//:rustix\",  # cfg(not(windows))\n        ],\n        \"//conditions:default\": [],\n    }),\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=terminal_size\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.3.0\",\n)\n"
            }
          },
          "crate_index__thiserror-1.0.56": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "d54378c645627613241d077a3a79db965db602882668f9136ac42af9ecb730ad",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/thiserror/1.0.56/download"
              ],
              "strip_prefix": "thiserror-1.0.56",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"thiserror\",\n    deps = [\n        \"@crate_index__thiserror-1.0.56//:build_script_build\",\n    ],\n    proc_macro_deps = [\n        \"@crate_index__thiserror-impl-1.0.56//:thiserror_impl\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=thiserror\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.0.56\",\n)\n\ncargo_build_script(\n    name = \"_bs\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \"**/*.rs\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2021\",\n    pkg_name = \"thiserror\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=thiserror\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"1.0.56\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__thiserror-impl-1.0.56": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "fa0faa943b50f3db30a20aa7e265dbc66076993efed8463e8de414e5d06d3471",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/thiserror-impl/1.0.56/download"
              ],
              "strip_prefix": "thiserror-impl-1.0.56",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_proc_macro\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_proc_macro(\n    name = \"thiserror_impl\",\n    deps = [\n        \"@crate_index__proc-macro2-1.0.76//:proc_macro2\",\n        \"@crate_index__quote-1.0.35//:quote\",\n        \"@crate_index__syn-2.0.48//:syn\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=thiserror-impl\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.0.56\",\n)\n"
            }
          },
          "crate_index__tinyvec-1.6.0": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "87cc5ceb3875bb20c2890005a4e226a4651264a5c75edb2421b52861a0a0cb50",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/tinyvec/1.6.0/download"
              ],
              "strip_prefix": "tinyvec-1.6.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"tinyvec\",\n    deps = [\n        \"@crate_index__tinyvec_macros-0.1.1//:tinyvec_macros\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"alloc\",\n        \"default\",\n        \"tinyvec_macros\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=tinyvec\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.6.0\",\n)\n"
            }
          },
          "crate_index__tinyvec_macros-0.1.1": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "1f3ccbac311fea05f86f61904b462b55fb3df8837a366dfc601a0161d0532f20",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/tinyvec_macros/0.1.1/download"
              ],
              "strip_prefix": "tinyvec_macros-0.1.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"tinyvec_macros\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=tinyvec_macros\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.1.1\",\n)\n"
            }
          },
          "crate_index__tokio-1.35.1": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "c89b4efa943be685f629b149f53829423f8f5531ea21249408e8e2f8671ec104",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/tokio/1.35.1/download"
              ],
              "strip_prefix": "tokio-1.35.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"tokio\",\n    deps = [\n        \"@crate_index__bytes-1.5.0//:bytes\",\n        \"@crate_index__libc-0.2.152//:libc\",\n        \"@crate_index__mio-0.8.10//:mio\",\n        \"@crate_index__num_cpus-1.16.0//:num_cpus\",\n        \"@crate_index__pin-project-lite-0.2.13//:pin_project_lite\",\n        \"@crate_index__socket2-0.5.5//:socket2\",\n    ],\n    proc_macro_deps = [\n        \"@crate_index__tokio-macros-2.2.0//:tokio_macros\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"bytes\",\n        \"default\",\n        \"fs\",\n        \"io-util\",\n        \"libc\",\n        \"macros\",\n        \"mio\",\n        \"net\",\n        \"num_cpus\",\n        \"rt\",\n        \"rt-multi-thread\",\n        \"socket2\",\n        \"sync\",\n        \"time\",\n        \"tokio-macros\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=tokio\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.35.1\",\n)\n"
            }
          },
          "crate_index__tokio-macros-2.2.0": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "5b8a1e28f2deaa14e508979454cb3a223b10b938b45af148bc0986de36f1923b",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/tokio-macros/2.2.0/download"
              ],
              "strip_prefix": "tokio-macros-2.2.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_proc_macro\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_proc_macro(\n    name = \"tokio_macros\",\n    deps = [\n        \"@crate_index__proc-macro2-1.0.76//:proc_macro2\",\n        \"@crate_index__quote-1.0.35//:quote\",\n        \"@crate_index__syn-2.0.48//:syn\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=tokio-macros\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"2.2.0\",\n)\n"
            }
          },
          "crate_index__tokio-stream-0.1.14": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "397c988d37662c7dda6d2208364a706264bf3d6138b11d436cbac0ad38832842",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/tokio-stream/0.1.14/download"
              ],
              "strip_prefix": "tokio-stream-0.1.14",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"tokio_stream\",\n    deps = [\n        \"@crate_index__futures-core-0.3.30//:futures_core\",\n        \"@crate_index__pin-project-lite-0.2.13//:pin_project_lite\",\n        \"@crate_index__tokio-1.35.1//:tokio\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"time\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=tokio-stream\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.1.14\",\n)\n"
            }
          },
          "crate_index__tokio-tungstenite-0.20.1": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "212d5dcb2a1ce06d81107c3d0ffa3121fe974b73f068c8282cb1c32328113b6c",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/tokio-tungstenite/0.20.1/download"
              ],
              "strip_prefix": "tokio-tungstenite-0.20.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"tokio_tungstenite\",\n    deps = [\n        \"@crate_index__futures-util-0.3.30//:futures_util\",\n        \"@crate_index__log-0.4.20//:log\",\n        \"@crate_index__tokio-1.35.1//:tokio\",\n        \"@crate_index__tungstenite-0.20.1//:tungstenite\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"connect\",\n        \"default\",\n        \"handshake\",\n        \"stream\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=tokio-tungstenite\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.20.1\",\n)\n"
            }
          },
          "crate_index__tokio-util-0.7.10": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "5419f34732d9eb6ee4c3578b7989078579b7f039cbbb9ca2c4da015749371e15",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/tokio-util/0.7.10/download"
              ],
              "strip_prefix": "tokio-util-0.7.10",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"tokio_util\",\n    deps = [\n        \"@crate_index__bytes-1.5.0//:bytes\",\n        \"@crate_index__futures-core-0.3.30//:futures_core\",\n        \"@crate_index__futures-sink-0.3.30//:futures_sink\",\n        \"@crate_index__pin-project-lite-0.2.13//:pin_project_lite\",\n        \"@crate_index__tokio-1.35.1//:tokio\",\n        \"@crate_index__tracing-0.1.40//:tracing\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"codec\",\n        \"default\",\n        \"io\",\n        \"tracing\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=tokio-util\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.7.10\",\n)\n"
            }
          },
          "crate_index__toml-0.5.11": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "f4f7f0dd8d50a853a531c426359045b1998f04219d88799810762cd4ad314234",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/toml/0.5.11/download"
              ],
              "strip_prefix": "toml-0.5.11",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"toml\",\n    deps = [\n        \"@crate_index__serde-1.0.195//:serde\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=toml\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.5.11\",\n)\n"
            }
          },
          "crate_index__topological-sort-0.2.2": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "ea68304e134ecd095ac6c3574494fc62b909f416c4fca77e440530221e549d3d",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/topological-sort/0.2.2/download"
              ],
              "strip_prefix": "topological-sort-0.2.2",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"topological_sort\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=topological-sort\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.2.2\",\n)\n"
            }
          },
          "crate_index__tower-service-0.3.2": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "b6bc1c9ce2b5135ac7f93c72918fc37feb872bdc6a5533a8b85eb4b86bfdae52",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/tower-service/0.3.2/download"
              ],
              "strip_prefix": "tower-service-0.3.2",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"tower_service\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=tower-service\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.3.2\",\n)\n"
            }
          },
          "crate_index__tracing-0.1.40": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "c3523ab5a71916ccf420eebdf5521fcef02141234bbc0b8a49f2fdc4544364ef",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/tracing/0.1.40/download"
              ],
              "strip_prefix": "tracing-0.1.40",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"tracing\",\n    deps = [\n        \"@crate_index__log-0.4.20//:log\",\n        \"@crate_index__pin-project-lite-0.2.13//:pin_project_lite\",\n        \"@crate_index__tracing-core-0.1.32//:tracing_core\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"log\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=tracing\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.1.40\",\n)\n"
            }
          },
          "crate_index__tracing-core-0.1.32": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "c06d3da6113f116aaee68e4d601191614c9053067f9ab7f6edbcb161237daa54",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/tracing-core/0.1.32/download"
              ],
              "strip_prefix": "tracing-core-0.1.32",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"tracing_core\",\n    deps = [\n        \"@crate_index__once_cell-1.19.0//:once_cell\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"once_cell\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=tracing-core\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.1.32\",\n)\n"
            }
          },
          "crate_index__try-lock-0.2.5": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "e421abadd41a4225275504ea4d6566923418b7f05506fbc9c0fe86ba7396114b",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/try-lock/0.2.5/download"
              ],
              "strip_prefix": "try-lock-0.2.5",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"try_lock\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=try-lock\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.2.5\",\n)\n"
            }
          },
          "crate_index__tungstenite-0.20.1": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "9e3dac10fd62eaf6617d3a904ae222845979aec67c615d1c842b4002c7666fb9",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/tungstenite/0.20.1/download"
              ],
              "strip_prefix": "tungstenite-0.20.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"tungstenite\",\n    deps = [\n        \"@crate_index__byteorder-1.5.0//:byteorder\",\n        \"@crate_index__bytes-1.5.0//:bytes\",\n        \"@crate_index__data-encoding-2.5.0//:data_encoding\",\n        \"@crate_index__http-0.2.11//:http\",\n        \"@crate_index__httparse-1.8.0//:httparse\",\n        \"@crate_index__log-0.4.20//:log\",\n        \"@crate_index__rand-0.8.5//:rand\",\n        \"@crate_index__sha1-0.10.6//:sha1\",\n        \"@crate_index__thiserror-1.0.56//:thiserror\",\n        \"@crate_index__url-2.5.0//:url\",\n        \"@crate_index__utf-8-0.7.6//:utf8\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"data-encoding\",\n        \"handshake\",\n        \"http\",\n        \"httparse\",\n        \"sha1\",\n        \"url\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=tungstenite\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.20.1\",\n)\n"
            }
          },
          "crate_index__typenum-1.17.0": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "42ff0bf0c66b8238c6f3b578df37d0b7848e55df8577b3f74f92a69acceeb825",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/typenum/1.17.0/download"
              ],
              "strip_prefix": "typenum-1.17.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"typenum\",\n    deps = [\n        \"@crate_index__typenum-1.17.0//:build_script_main\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=typenum\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.17.0\",\n)\n\ncargo_build_script(\n    name = \"_bs\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \"**/*.rs\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_name = \"build_script_main\",\n    crate_root = \"build/main.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2018\",\n    pkg_name = \"typenum\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=typenum\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"1.17.0\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_main\",\n    actual = \":_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__ucd-trie-0.1.6": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "ed646292ffc8188ef8ea4d1e0e0150fb15a5c2e12ad9b8fc191ae7a8a7f3c4b9",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/ucd-trie/0.1.6/download"
              ],
              "strip_prefix": "ucd-trie-0.1.6",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"ucd_trie\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=ucd-trie\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.1.6\",\n)\n"
            }
          },
          "crate_index__unicase-2.7.0": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "f7d2d4dafb69621809a81864c9c1b864479e1235c0dd4e199924b9742439ed89",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/unicase/2.7.0/download"
              ],
              "strip_prefix": "unicase-2.7.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"unicase\",\n    deps = [\n        \"@crate_index__unicase-2.7.0//:build_script_build\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=unicase\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"2.7.0\",\n)\n\ncargo_build_script(\n    name = \"_bs\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \"**/*.rs\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    deps = [\n        \"@crate_index__version_check-0.9.4//:version_check\",\n    ],\n    edition = \"2015\",\n    pkg_name = \"unicase\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=unicase\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"2.7.0\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__unicode-bidi-0.3.14": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "6f2528f27a9eb2b21e69c95319b30bd0efd85d09c379741b0f78ea1d86be2416",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/unicode-bidi/0.3.14/download"
              ],
              "strip_prefix": "unicode-bidi-0.3.14",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"unicode_bidi\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"hardcoded-data\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=unicode-bidi\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.3.14\",\n)\n"
            }
          },
          "crate_index__unicode-ident-1.0.12": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "3354b9ac3fae1ff6755cb6db53683adb661634f67557942dea4facebec0fee4b",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/unicode-ident/1.0.12/download"
              ],
              "strip_prefix": "unicode-ident-1.0.12",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"unicode_ident\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=unicode-ident\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.0.12\",\n)\n"
            }
          },
          "crate_index__unicode-normalization-0.1.22": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "5c5713f0fc4b5db668a2ac63cdb7bb4469d8c9fed047b1d0292cc7b0ce2ba921",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/unicode-normalization/0.1.22/download"
              ],
              "strip_prefix": "unicode-normalization-0.1.22",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"unicode_normalization\",\n    deps = [\n        \"@crate_index__tinyvec-1.6.0//:tinyvec\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=unicode-normalization\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.1.22\",\n)\n"
            }
          },
          "crate_index__url-2.5.0": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "31e6302e3bb753d46e83516cae55ae196fc0c309407cf11ab35cc51a4c2a4633",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/url/2.5.0/download"
              ],
              "strip_prefix": "url-2.5.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"url\",\n    deps = [\n        \"@crate_index__form_urlencoded-1.2.1//:form_urlencoded\",\n        \"@crate_index__idna-0.5.0//:idna\",\n        \"@crate_index__percent-encoding-2.3.1//:percent_encoding\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=url\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"2.5.0\",\n)\n"
            }
          },
          "crate_index__utf-8-0.7.6": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "09cc8ee72d2a9becf2f2febe0205bbed8fc6615b7cb429ad062dc7b7ddd036a9",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/utf-8/0.7.6/download"
              ],
              "strip_prefix": "utf-8-0.7.6",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"utf8\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=utf-8\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.7.6\",\n)\n"
            }
          },
          "crate_index__utf8parse-0.2.1": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "711b9620af191e0cdc7468a8d14e709c3dcdb115b36f838e601583af800a370a",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/utf8parse/0.2.1/download"
              ],
              "strip_prefix": "utf8parse-0.2.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"utf8parse\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=utf8parse\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.2.1\",\n)\n"
            }
          },
          "crate_index__version_check-0.9.4": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "49874b5167b65d7193b8aba1567f5c7d93d001cafc34600cee003eda787e483f",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/version_check/0.9.4/download"
              ],
              "strip_prefix": "version_check-0.9.4",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"version_check\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=version_check\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.9.4\",\n)\n"
            }
          },
          "crate_index__walkdir-2.4.0": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "d71d857dc86794ca4c280d616f7da00d2dbfd8cd788846559a6813e6aa4b54ee",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/walkdir/2.4.0/download"
              ],
              "strip_prefix": "walkdir-2.4.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"walkdir\",\n    deps = [\n        \"@crate_index__same-file-1.0.6//:same_file\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=walkdir\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"2.4.0\",\n)\n"
            }
          },
          "crate_index__want-0.3.1": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "bfa7760aed19e106de2c7c0b581b509f2f25d3dacaf737cb82ac61bc6d760b0e",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/want/0.3.1/download"
              ],
              "strip_prefix": "want-0.3.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"want\",\n    deps = [\n        \"@crate_index__try-lock-0.2.5//:try_lock\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=want\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.3.1\",\n)\n"
            }
          },
          "crate_index__warp-0.3.6": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "c1e92e22e03ff1230c03a1a8ee37d2f89cd489e2e541b7550d6afad96faed169",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/warp/0.3.6/download"
              ],
              "strip_prefix": "warp-0.3.6",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"warp\",\n    deps = [\n        \"@crate_index__bytes-1.5.0//:bytes\",\n        \"@crate_index__futures-channel-0.3.30//:futures_channel\",\n        \"@crate_index__futures-util-0.3.30//:futures_util\",\n        \"@crate_index__headers-0.3.9//:headers\",\n        \"@crate_index__http-0.2.11//:http\",\n        \"@crate_index__hyper-0.14.28//:hyper\",\n        \"@crate_index__log-0.4.20//:log\",\n        \"@crate_index__mime-0.3.17//:mime\",\n        \"@crate_index__mime_guess-2.0.4//:mime_guess\",\n        \"@crate_index__percent-encoding-2.3.1//:percent_encoding\",\n        \"@crate_index__pin-project-1.1.3//:pin_project\",\n        \"@crate_index__rustls-pemfile-1.0.4//:rustls_pemfile\",\n        \"@crate_index__scoped-tls-1.0.1//:scoped_tls\",\n        \"@crate_index__serde-1.0.195//:serde\",\n        \"@crate_index__serde_json-1.0.111//:serde_json\",\n        \"@crate_index__serde_urlencoded-0.7.1//:serde_urlencoded\",\n        \"@crate_index__tokio-1.35.1//:tokio\",\n        \"@crate_index__tokio-stream-0.1.14//:tokio_stream\",\n        \"@crate_index__tokio-tungstenite-0.20.1//:tokio_tungstenite\",\n        \"@crate_index__tokio-util-0.7.10//:tokio_util\",\n        \"@crate_index__tower-service-0.3.2//:tower_service\",\n        \"@crate_index__tracing-0.1.40//:tracing\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"tokio-tungstenite\",\n        \"websocket\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=warp\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.3.6\",\n)\n"
            }
          },
          "crate_index__wasi-0.11.0-wasi-snapshot-preview1": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "9c8d87e72b64a3b4db28d11ce29237c246188f4f51057d65a7eab63b7987e423",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/wasi/0.11.0+wasi-snapshot-preview1/download"
              ],
              "strip_prefix": "wasi-0.11.0+wasi-snapshot-preview1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"wasi\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=wasi\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.11.0+wasi-snapshot-preview1\",\n)\n"
            }
          },
          "crate_index__wasm-bindgen-0.2.89": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "0ed0d4f68a3015cc185aff4db9506a015f4b96f95303897bfa23f846db54064e",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/wasm-bindgen/0.2.89/download"
              ],
              "strip_prefix": "wasm-bindgen-0.2.89",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"wasm_bindgen\",\n    deps = [\n        \"@crate_index__cfg-if-1.0.0//:cfg_if\",\n        \"@crate_index__wasm-bindgen-0.2.89//:build_script_build\",\n    ],\n    proc_macro_deps = [\n        \"@crate_index__wasm-bindgen-macro-0.2.89//:wasm_bindgen_macro\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=wasm-bindgen\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.2.89\",\n)\n\ncargo_build_script(\n    name = \"_bs\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \"**/*.rs\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2018\",\n    pkg_name = \"wasm-bindgen\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=wasm-bindgen\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"0.2.89\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__wasm-bindgen-backend-0.2.89": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "1b56f625e64f3a1084ded111c4d5f477df9f8c92df113852fa5a374dbda78826",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/wasm-bindgen-backend/0.2.89/download"
              ],
              "strip_prefix": "wasm-bindgen-backend-0.2.89",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"wasm_bindgen_backend\",\n    deps = [\n        \"@crate_index__bumpalo-3.14.0//:bumpalo\",\n        \"@crate_index__log-0.4.20//:log\",\n        \"@crate_index__once_cell-1.19.0//:once_cell\",\n        \"@crate_index__proc-macro2-1.0.76//:proc_macro2\",\n        \"@crate_index__quote-1.0.35//:quote\",\n        \"@crate_index__syn-2.0.48//:syn\",\n        \"@crate_index__wasm-bindgen-shared-0.2.89//:wasm_bindgen_shared\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=wasm-bindgen-backend\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.2.89\",\n)\n"
            }
          },
          "crate_index__wasm-bindgen-macro-0.2.89": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "0162dbf37223cd2afce98f3d0785506dcb8d266223983e4b5b525859e6e182b2",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/wasm-bindgen-macro/0.2.89/download"
              ],
              "strip_prefix": "wasm-bindgen-macro-0.2.89",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_proc_macro\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_proc_macro(\n    name = \"wasm_bindgen_macro\",\n    deps = [\n        \"@crate_index__quote-1.0.35//:quote\",\n        \"@crate_index__wasm-bindgen-macro-support-0.2.89//:wasm_bindgen_macro_support\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=wasm-bindgen-macro\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.2.89\",\n)\n"
            }
          },
          "crate_index__wasm-bindgen-macro-support-0.2.89": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "f0eb82fcb7930ae6219a7ecfd55b217f5f0893484b7a13022ebb2b2bf20b5283",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/wasm-bindgen-macro-support/0.2.89/download"
              ],
              "strip_prefix": "wasm-bindgen-macro-support-0.2.89",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"wasm_bindgen_macro_support\",\n    deps = [\n        \"@crate_index__proc-macro2-1.0.76//:proc_macro2\",\n        \"@crate_index__quote-1.0.35//:quote\",\n        \"@crate_index__syn-2.0.48//:syn\",\n        \"@crate_index__wasm-bindgen-backend-0.2.89//:wasm_bindgen_backend\",\n        \"@crate_index__wasm-bindgen-shared-0.2.89//:wasm_bindgen_shared\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=wasm-bindgen-macro-support\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.2.89\",\n)\n"
            }
          },
          "crate_index__wasm-bindgen-shared-0.2.89": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "7ab9b36309365056cd639da3134bf87fa8f3d86008abf99e612384a6eecd459f",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/wasm-bindgen-shared/0.2.89/download"
              ],
              "strip_prefix": "wasm-bindgen-shared-0.2.89",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"wasm_bindgen_shared\",\n    deps = [\n        \"@crate_index__wasm-bindgen-shared-0.2.89//:build_script_build\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=wasm-bindgen-shared\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.2.89\",\n)\n\ncargo_build_script(\n    name = \"_bs\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \"**/*.rs\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2018\",\n    links = \"wasm_bindgen\",\n    pkg_name = \"wasm-bindgen-shared\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=wasm-bindgen-shared\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"0.2.89\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__which-4.4.2": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "87ba24419a2078cd2b0f2ede2691b6c66d8e47836da3b6db8265ebad47afbfc7",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/which/4.4.2/download"
              ],
              "strip_prefix": "which-4.4.2",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"which\",\n    deps = [\n        \"@crate_index__either-1.9.0//:either\",\n        \"@crate_index__rustix-0.38.28//:rustix\",\n    ] + select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [\n            \"@crate_index__home-0.5.9//:home\",  # cfg(any(windows, unix, target_os = \"redox\"))\n        ],\n        \"//conditions:default\": [],\n    }),\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=which\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"4.4.2\",\n)\n"
            }
          },
          "crate_index__winapi-0.3.9": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/winapi/0.3.9/download"
              ],
              "strip_prefix": "winapi-0.3.9",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"winapi\",\n    deps = [\n        \"@crate_index__winapi-0.3.9//:build_script_build\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=winapi\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.3.9\",\n)\n\ncargo_build_script(\n    name = \"_bs\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \"**/*.rs\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2015\",\n    pkg_name = \"winapi\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=winapi\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"0.3.9\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__winapi-i686-pc-windows-gnu-0.4.0": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/winapi-i686-pc-windows-gnu/0.4.0/download"
              ],
              "strip_prefix": "winapi-i686-pc-windows-gnu-0.4.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"winapi_i686_pc_windows_gnu\",\n    deps = [\n        \"@crate_index__winapi-i686-pc-windows-gnu-0.4.0//:build_script_build\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=winapi-i686-pc-windows-gnu\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.4.0\",\n)\n\ncargo_build_script(\n    name = \"_bs\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \"**/*.rs\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2015\",\n    pkg_name = \"winapi-i686-pc-windows-gnu\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=winapi-i686-pc-windows-gnu\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"0.4.0\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__winapi-util-0.1.6": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "f29e6f9198ba0d26b4c9f07dbe6f9ed633e1f3d5b8b414090084349e46a52596",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/winapi-util/0.1.6/download"
              ],
              "strip_prefix": "winapi-util-0.1.6",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"winapi_util\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=winapi-util\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.1.6\",\n)\n"
            }
          },
          "crate_index__winapi-x86_64-pc-windows-gnu-0.4.0": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/winapi-x86_64-pc-windows-gnu/0.4.0/download"
              ],
              "strip_prefix": "winapi-x86_64-pc-windows-gnu-0.4.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"winapi_x86_64_pc_windows_gnu\",\n    deps = [\n        \"@crate_index__winapi-x86_64-pc-windows-gnu-0.4.0//:build_script_build\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=winapi-x86_64-pc-windows-gnu\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.4.0\",\n)\n\ncargo_build_script(\n    name = \"_bs\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \"**/*.rs\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2015\",\n    pkg_name = \"winapi-x86_64-pc-windows-gnu\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=winapi-x86_64-pc-windows-gnu\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"0.4.0\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__windows-core-0.52.0": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "33ab640c8d7e35bf8ba19b884ba838ceb4fba93a4e8c65a9059d08afcfc683d9",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/windows-core/0.52.0/download"
              ],
              "strip_prefix": "windows-core-0.52.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"windows_core\",\n    deps = [\n        \"@crate_index__windows-targets-0.52.0//:windows_targets\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=windows-core\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.52.0\",\n)\n"
            }
          },
          "crate_index__windows-sys-0.48.0": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "677d2418bec65e3338edb076e806bc1ec15693c5d0104683f2efe857f61056a9",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/windows-sys/0.48.0/download"
              ],
              "strip_prefix": "windows-sys-0.48.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"windows_sys\",\n    deps = [\n        \"@crate_index__windows-targets-0.48.5//:windows_targets\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=windows-sys\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.48.0\",\n)\n"
            }
          },
          "crate_index__windows-sys-0.52.0": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "282be5f36a8ce781fad8c8ae18fa3f9beff57ec1b52cb3de0789201425d9a33d",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/windows-sys/0.52.0/download"
              ],
              "strip_prefix": "windows-sys-0.52.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"windows_sys\",\n    deps = [\n        \"@crate_index__windows-targets-0.52.0//:windows_targets\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=windows-sys\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.52.0\",\n)\n"
            }
          },
          "crate_index__windows-targets-0.48.5": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "9a2fa6e2155d7247be68c096456083145c183cbbbc2764150dda45a87197940c",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/windows-targets/0.48.5/download"
              ],
              "strip_prefix": "windows-targets-0.48.5",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"windows_targets\",\n    deps = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [\n            \"@crate_index__windows_x86_64_gnu-0.48.5//:windows_x86_64_gnu\",  # cfg(all(target_arch = \"x86_64\", target_env = \"gnu\", not(target_abi = \"llvm\"), not(windows_raw_dylib)))\n        ],\n        \"//conditions:default\": [],\n    }),\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=windows-targets\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.48.5\",\n)\n"
            }
          },
          "crate_index__windows-targets-0.52.0": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "8a18201040b24831fbb9e4eb208f8892e1f50a37feb53cc7ff887feb8f50e7cd",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/windows-targets/0.52.0/download"
              ],
              "strip_prefix": "windows-targets-0.52.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"windows_targets\",\n    deps = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [\n            \"@crate_index__windows_x86_64_gnu-0.52.0//:windows_x86_64_gnu\",  # cfg(all(target_arch = \"x86_64\", target_env = \"gnu\", not(target_abi = \"llvm\"), not(windows_raw_dylib)))\n        ],\n        \"//conditions:default\": [],\n    }),\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=windows-targets\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.52.0\",\n)\n"
            }
          },
          "crate_index__windows_aarch64_gnullvm-0.48.5": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "2b38e32f0abccf9987a4e3079dfb67dcd799fb61361e53e2882c3cbaf0d905d8",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/windows_aarch64_gnullvm/0.48.5/download"
              ],
              "strip_prefix": "windows_aarch64_gnullvm-0.48.5",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"windows_aarch64_gnullvm\",\n    deps = [\n        \"@crate_index__windows_aarch64_gnullvm-0.48.5//:build_script_build\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=windows_aarch64_gnullvm\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.48.5\",\n)\n\ncargo_build_script(\n    name = \"_bs\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \"**/*.rs\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2018\",\n    pkg_name = \"windows_aarch64_gnullvm\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=windows_aarch64_gnullvm\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"0.48.5\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__windows_aarch64_gnullvm-0.52.0": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "cb7764e35d4db8a7921e09562a0304bf2f93e0a51bfccee0bd0bb0b666b015ea",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/windows_aarch64_gnullvm/0.52.0/download"
              ],
              "strip_prefix": "windows_aarch64_gnullvm-0.52.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"windows_aarch64_gnullvm\",\n    deps = [\n        \"@crate_index__windows_aarch64_gnullvm-0.52.0//:build_script_build\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=windows_aarch64_gnullvm\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.52.0\",\n)\n\ncargo_build_script(\n    name = \"_bs\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \"**/*.rs\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2021\",\n    pkg_name = \"windows_aarch64_gnullvm\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=windows_aarch64_gnullvm\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"0.52.0\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__windows_aarch64_msvc-0.48.5": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "dc35310971f3b2dbbf3f0690a219f40e2d9afcf64f9ab7cc1be722937c26b4bc",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/windows_aarch64_msvc/0.48.5/download"
              ],
              "strip_prefix": "windows_aarch64_msvc-0.48.5",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"windows_aarch64_msvc\",\n    deps = [\n        \"@crate_index__windows_aarch64_msvc-0.48.5//:build_script_build\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=windows_aarch64_msvc\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.48.5\",\n)\n\ncargo_build_script(\n    name = \"_bs\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \"**/*.rs\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2018\",\n    pkg_name = \"windows_aarch64_msvc\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=windows_aarch64_msvc\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"0.48.5\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__windows_aarch64_msvc-0.52.0": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "bbaa0368d4f1d2aaefc55b6fcfee13f41544ddf36801e793edbbfd7d7df075ef",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/windows_aarch64_msvc/0.52.0/download"
              ],
              "strip_prefix": "windows_aarch64_msvc-0.52.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"windows_aarch64_msvc\",\n    deps = [\n        \"@crate_index__windows_aarch64_msvc-0.52.0//:build_script_build\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=windows_aarch64_msvc\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.52.0\",\n)\n\ncargo_build_script(\n    name = \"_bs\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \"**/*.rs\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2021\",\n    pkg_name = \"windows_aarch64_msvc\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=windows_aarch64_msvc\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"0.52.0\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__windows_i686_gnu-0.48.5": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "a75915e7def60c94dcef72200b9a8e58e5091744960da64ec734a6c6e9b3743e",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/windows_i686_gnu/0.48.5/download"
              ],
              "strip_prefix": "windows_i686_gnu-0.48.5",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"windows_i686_gnu\",\n    deps = [\n        \"@crate_index__windows_i686_gnu-0.48.5//:build_script_build\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=windows_i686_gnu\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.48.5\",\n)\n\ncargo_build_script(\n    name = \"_bs\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \"**/*.rs\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2018\",\n    pkg_name = \"windows_i686_gnu\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=windows_i686_gnu\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"0.48.5\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__windows_i686_gnu-0.52.0": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "a28637cb1fa3560a16915793afb20081aba2c92ee8af57b4d5f28e4b3e7df313",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/windows_i686_gnu/0.52.0/download"
              ],
              "strip_prefix": "windows_i686_gnu-0.52.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"windows_i686_gnu\",\n    deps = [\n        \"@crate_index__windows_i686_gnu-0.52.0//:build_script_build\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=windows_i686_gnu\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.52.0\",\n)\n\ncargo_build_script(\n    name = \"_bs\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \"**/*.rs\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2021\",\n    pkg_name = \"windows_i686_gnu\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=windows_i686_gnu\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"0.52.0\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__windows_i686_msvc-0.48.5": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "8f55c233f70c4b27f66c523580f78f1004e8b5a8b659e05a4eb49d4166cca406",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/windows_i686_msvc/0.48.5/download"
              ],
              "strip_prefix": "windows_i686_msvc-0.48.5",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"windows_i686_msvc\",\n    deps = [\n        \"@crate_index__windows_i686_msvc-0.48.5//:build_script_build\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=windows_i686_msvc\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.48.5\",\n)\n\ncargo_build_script(\n    name = \"_bs\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \"**/*.rs\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2018\",\n    pkg_name = \"windows_i686_msvc\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=windows_i686_msvc\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"0.48.5\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__windows_i686_msvc-0.52.0": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "ffe5e8e31046ce6230cc7215707b816e339ff4d4d67c65dffa206fd0f7aa7b9a",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/windows_i686_msvc/0.52.0/download"
              ],
              "strip_prefix": "windows_i686_msvc-0.52.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"windows_i686_msvc\",\n    deps = [\n        \"@crate_index__windows_i686_msvc-0.52.0//:build_script_build\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=windows_i686_msvc\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.52.0\",\n)\n\ncargo_build_script(\n    name = \"_bs\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \"**/*.rs\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2021\",\n    pkg_name = \"windows_i686_msvc\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=windows_i686_msvc\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"0.52.0\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__windows_x86_64_gnu-0.48.5": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "53d40abd2583d23e4718fddf1ebec84dbff8381c07cae67ff7768bbf19c6718e",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/windows_x86_64_gnu/0.48.5/download"
              ],
              "strip_prefix": "windows_x86_64_gnu-0.48.5",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"windows_x86_64_gnu\",\n    deps = [\n        \"@crate_index__windows_x86_64_gnu-0.48.5//:build_script_build\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=windows_x86_64_gnu\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.48.5\",\n)\n\ncargo_build_script(\n    name = \"_bs\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \"**/*.rs\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2018\",\n    pkg_name = \"windows_x86_64_gnu\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=windows_x86_64_gnu\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"0.48.5\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__windows_x86_64_gnu-0.52.0": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "3d6fa32db2bc4a2f5abeacf2b69f7992cd09dca97498da74a151a3132c26befd",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/windows_x86_64_gnu/0.52.0/download"
              ],
              "strip_prefix": "windows_x86_64_gnu-0.52.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"windows_x86_64_gnu\",\n    deps = [\n        \"@crate_index__windows_x86_64_gnu-0.52.0//:build_script_build\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=windows_x86_64_gnu\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.52.0\",\n)\n\ncargo_build_script(\n    name = \"_bs\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \"**/*.rs\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2021\",\n    pkg_name = \"windows_x86_64_gnu\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=windows_x86_64_gnu\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"0.52.0\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__windows_x86_64_gnullvm-0.48.5": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "0b7b52767868a23d5bab768e390dc5f5c55825b6d30b86c844ff2dc7414044cc",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/windows_x86_64_gnullvm/0.48.5/download"
              ],
              "strip_prefix": "windows_x86_64_gnullvm-0.48.5",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"windows_x86_64_gnullvm\",\n    deps = [\n        \"@crate_index__windows_x86_64_gnullvm-0.48.5//:build_script_build\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=windows_x86_64_gnullvm\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.48.5\",\n)\n\ncargo_build_script(\n    name = \"_bs\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \"**/*.rs\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2018\",\n    pkg_name = \"windows_x86_64_gnullvm\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=windows_x86_64_gnullvm\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"0.48.5\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__windows_x86_64_gnullvm-0.52.0": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "1a657e1e9d3f514745a572a6846d3c7aa7dbe1658c056ed9c3344c4109a6949e",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/windows_x86_64_gnullvm/0.52.0/download"
              ],
              "strip_prefix": "windows_x86_64_gnullvm-0.52.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"windows_x86_64_gnullvm\",\n    deps = [\n        \"@crate_index__windows_x86_64_gnullvm-0.52.0//:build_script_build\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=windows_x86_64_gnullvm\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.52.0\",\n)\n\ncargo_build_script(\n    name = \"_bs\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \"**/*.rs\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2021\",\n    pkg_name = \"windows_x86_64_gnullvm\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=windows_x86_64_gnullvm\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"0.52.0\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__windows_x86_64_msvc-0.48.5": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "ed94fce61571a4006852b7389a063ab983c02eb1bb37b47f8272ce92d06d9538",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/windows_x86_64_msvc/0.48.5/download"
              ],
              "strip_prefix": "windows_x86_64_msvc-0.48.5",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"windows_x86_64_msvc\",\n    deps = [\n        \"@crate_index__windows_x86_64_msvc-0.48.5//:build_script_build\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=windows_x86_64_msvc\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.48.5\",\n)\n\ncargo_build_script(\n    name = \"_bs\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \"**/*.rs\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2018\",\n    pkg_name = \"windows_x86_64_msvc\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=windows_x86_64_msvc\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"0.48.5\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__windows_x86_64_msvc-0.52.0": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "dff9641d1cd4be8d1a070daf9e3773c5f67e78b4d9d42263020c057706765c04",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/windows_x86_64_msvc/0.52.0/download"
              ],
              "strip_prefix": "windows_x86_64_msvc-0.52.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"windows_x86_64_msvc\",\n    deps = [\n        \"@crate_index__windows_x86_64_msvc-0.52.0//:build_script_build\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=windows_x86_64_msvc\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.52.0\",\n)\n\ncargo_build_script(\n    name = \"_bs\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \"**/*.rs\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2021\",\n    pkg_name = \"windows_x86_64_msvc\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=windows_x86_64_msvc\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"0.52.0\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index_efi": {
            "repoRuleId": "@@rules_rust+//crate_universe:extensions.bzl%_generate_repo",
            "attributes": {
              "contents": {
                "BUILD.bazel": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files(\n    [\n        \"cargo-bazel.json\",\n        \"crates.bzl\",\n        \"defs.bzl\",\n    ] + glob(\n        allow_empty = True,\n        include = [\"*.bazel\"],\n    ),\n)\n\nfilegroup(\n    name = \"srcs\",\n    srcs = glob(\n        allow_empty = True,\n        include = [\n            \"*.bazel\",\n            \"*.bzl\",\n        ],\n    ),\n)\n\n# Workspace Member Dependencies\nalias(\n    name = \"prost-0.12.1\",\n    actual = \"@crate_index_efi__prost-0.12.1//:prost\",\n    tags = [\"manual\"],\n)\n\nalias(\n    name = \"prost\",\n    actual = \"@crate_index_efi__prost-0.12.1//:prost\",\n    tags = [\"manual\"],\n)\n\nalias(\n    name = \"prost-types-0.12.1\",\n    actual = \"@crate_index_efi__prost-types-0.12.1//:prost_types\",\n    tags = [\"manual\"],\n)\n\nalias(\n    name = \"prost-types\",\n    actual = \"@crate_index_efi__prost-types-0.12.1//:prost_types\",\n    tags = [\"manual\"],\n)\n\nalias(\n    name = \"uefi-0.24.0\",\n    actual = \"@crate_index_efi__uefi-0.24.0//:uefi\",\n    tags = [\"manual\"],\n)\n\nalias(\n    name = \"uefi\",\n    actual = \"@crate_index_efi__uefi-0.24.0//:uefi\",\n    tags = [\"manual\"],\n)\n\nalias(\n    name = \"uefi-services-0.21.0\",\n    actual = \"@crate_index_efi__uefi-services-0.21.0//:uefi_services\",\n    tags = [\"manual\"],\n)\n\nalias(\n    name = \"uefi-services\",\n    actual = \"@crate_index_efi__uefi-services-0.21.0//:uefi_services\",\n    tags = [\"manual\"],\n)\n",
                "alias_rules.bzl": "\"\"\"Alias that transitions its target to `compilation_mode=opt`.  Use `transition_alias=\"opt\"` to enable.\"\"\"\n\nload(\"@rules_cc//cc:defs.bzl\", \"CcInfo\")\nload(\"@rules_rust//rust:rust_common.bzl\", \"COMMON_PROVIDERS\")\n\ndef _transition_alias_impl(ctx):\n    # `ctx.attr.actual` is a list of 1 item due to the transition\n    providers = [ctx.attr.actual[0][provider] for provider in COMMON_PROVIDERS]\n    if CcInfo in ctx.attr.actual[0]:\n        providers.append(ctx.attr.actual[0][CcInfo])\n    return providers\n\ndef _change_compilation_mode(compilation_mode):\n    def _change_compilation_mode_impl(_settings, _attr):\n        return {\n            \"//command_line_option:compilation_mode\": compilation_mode,\n        }\n\n    return transition(\n        implementation = _change_compilation_mode_impl,\n        inputs = [],\n        outputs = [\n            \"//command_line_option:compilation_mode\",\n        ],\n    )\n\ndef _transition_alias_rule(compilation_mode):\n    return rule(\n        implementation = _transition_alias_impl,\n        provides = COMMON_PROVIDERS,\n        attrs = {\n            \"actual\": attr.label(\n                mandatory = True,\n                doc = \"`rust_library()` target to transition to `compilation_mode=opt`.\",\n                providers = COMMON_PROVIDERS,\n                cfg = _change_compilation_mode(compilation_mode),\n            ),\n            \"_allowlist_function_transition\": attr.label(\n                default = \"@bazel_tools//tools/allowlists/function_transition_allowlist\",\n            ),\n        },\n        doc = \"Transitions a Rust library crate to the `compilation_mode=opt`.\",\n    )\n\ntransition_alias_dbg = _transition_alias_rule(\"dbg\")\ntransition_alias_fastbuild = _transition_alias_rule(\"fastbuild\")\ntransition_alias_opt = _transition_alias_rule(\"opt\")\n",
                "defs.bzl": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\"\"\"\n# `crates_repository` API\n\n- [aliases](#aliases)\n- [crate_deps](#crate_deps)\n- [all_crate_deps](#all_crate_deps)\n- [crate_repositories](#crate_repositories)\n\n\"\"\"\n\nload(\"@bazel_tools//tools/build_defs/repo:git.bzl\", \"new_git_repository\")\nload(\"@bazel_tools//tools/build_defs/repo:http.bzl\", \"http_archive\")\nload(\"@bazel_tools//tools/build_defs/repo:utils.bzl\", \"maybe\")\nload(\"@bazel_skylib//lib:selects.bzl\", \"selects\")\nload(\"@rules_rust//crate_universe/private:local_crate_mirror.bzl\", \"local_crate_mirror\")\n\n###############################################################################\n# MACROS API\n###############################################################################\n\n# An identifier that represent common dependencies (unconditional).\n_COMMON_CONDITION = \"\"\n\ndef _flatten_dependency_maps(all_dependency_maps):\n    \"\"\"Flatten a list of dependency maps into one dictionary.\n\n    Dependency maps have the following structure:\n\n    ```python\n    DEPENDENCIES_MAP = {\n        # The first key in the map is a Bazel package\n        # name of the workspace this file is defined in.\n        \"workspace_member_package\": {\n\n            # Not all dependencies are supported for all platforms.\n            # the condition key is the condition required to be true\n            # on the host platform.\n            \"condition\": {\n\n                # An alias to a crate target.     # The label of the crate target the\n                # Aliases are only crate names.   # package name refers to.\n                \"package_name\":                   \"@full//:label\",\n            }\n        }\n    }\n    ```\n\n    Args:\n        all_dependency_maps (list): A list of dicts as described above\n\n    Returns:\n        dict: A dictionary as described above\n    \"\"\"\n    dependencies = {}\n\n    for workspace_deps_map in all_dependency_maps:\n        for pkg_name, conditional_deps_map in workspace_deps_map.items():\n            if pkg_name not in dependencies:\n                non_frozen_map = dict()\n                for key, values in conditional_deps_map.items():\n                    non_frozen_map.update({key: dict(values.items())})\n                dependencies.setdefault(pkg_name, non_frozen_map)\n                continue\n\n            for condition, deps_map in conditional_deps_map.items():\n                # If the condition has not been recorded, do so and continue\n                if condition not in dependencies[pkg_name]:\n                    dependencies[pkg_name].setdefault(condition, dict(deps_map.items()))\n                    continue\n\n                # Alert on any miss-matched dependencies\n                inconsistent_entries = []\n                for crate_name, crate_label in deps_map.items():\n                    existing = dependencies[pkg_name][condition].get(crate_name)\n                    if existing and existing != crate_label:\n                        inconsistent_entries.append((crate_name, existing, crate_label))\n                    dependencies[pkg_name][condition].update({crate_name: crate_label})\n\n    return dependencies\n\ndef crate_deps(deps, package_name = None):\n    \"\"\"Finds the fully qualified label of the requested crates for the package where this macro is called.\n\n    Args:\n        deps (list): The desired list of crate targets.\n        package_name (str, optional): The package name of the set of dependencies to look up.\n            Defaults to `native.package_name()`.\n\n    Returns:\n        list: A list of labels to generated rust targets (str)\n    \"\"\"\n\n    if not deps:\n        return []\n\n    if package_name == None:\n        package_name = native.package_name()\n\n    # Join both sets of dependencies\n    dependencies = _flatten_dependency_maps([\n        _NORMAL_DEPENDENCIES,\n        _NORMAL_DEV_DEPENDENCIES,\n        _PROC_MACRO_DEPENDENCIES,\n        _PROC_MACRO_DEV_DEPENDENCIES,\n        _BUILD_DEPENDENCIES,\n        _BUILD_PROC_MACRO_DEPENDENCIES,\n    ]).pop(package_name, {})\n\n    # Combine all conditional packages so we can easily index over a flat list\n    # TODO: Perhaps this should actually return select statements and maintain\n    # the conditionals of the dependencies\n    flat_deps = {}\n    for deps_set in dependencies.values():\n        for crate_name, crate_label in deps_set.items():\n            flat_deps.update({crate_name: crate_label})\n\n    missing_crates = []\n    crate_targets = []\n    for crate_target in deps:\n        if crate_target not in flat_deps:\n            missing_crates.append(crate_target)\n        else:\n            crate_targets.append(flat_deps[crate_target])\n\n    if missing_crates:\n        fail(\"Could not find crates `{}` among dependencies of `{}`. Available dependencies were `{}`\".format(\n            missing_crates,\n            package_name,\n            dependencies,\n        ))\n\n    return crate_targets\n\ndef all_crate_deps(\n        normal = False, \n        normal_dev = False, \n        proc_macro = False, \n        proc_macro_dev = False,\n        build = False,\n        build_proc_macro = False,\n        package_name = None):\n    \"\"\"Finds the fully qualified label of all requested direct crate dependencies \\\n    for the package where this macro is called.\n\n    If no parameters are set, all normal dependencies are returned. Setting any one flag will\n    otherwise impact the contents of the returned list.\n\n    Args:\n        normal (bool, optional): If True, normal dependencies are included in the\n            output list.\n        normal_dev (bool, optional): If True, normal dev dependencies will be\n            included in the output list..\n        proc_macro (bool, optional): If True, proc_macro dependencies are included\n            in the output list.\n        proc_macro_dev (bool, optional): If True, dev proc_macro dependencies are\n            included in the output list.\n        build (bool, optional): If True, build dependencies are included\n            in the output list.\n        build_proc_macro (bool, optional): If True, build proc_macro dependencies are\n            included in the output list.\n        package_name (str, optional): The package name of the set of dependencies to look up.\n            Defaults to `native.package_name()` when unset.\n\n    Returns:\n        list: A list of labels to generated rust targets (str)\n    \"\"\"\n\n    if package_name == None:\n        package_name = native.package_name()\n\n    # Determine the relevant maps to use\n    all_dependency_maps = []\n    if normal:\n        all_dependency_maps.append(_NORMAL_DEPENDENCIES)\n    if normal_dev:\n        all_dependency_maps.append(_NORMAL_DEV_DEPENDENCIES)\n    if proc_macro:\n        all_dependency_maps.append(_PROC_MACRO_DEPENDENCIES)\n    if proc_macro_dev:\n        all_dependency_maps.append(_PROC_MACRO_DEV_DEPENDENCIES)\n    if build:\n        all_dependency_maps.append(_BUILD_DEPENDENCIES)\n    if build_proc_macro:\n        all_dependency_maps.append(_BUILD_PROC_MACRO_DEPENDENCIES)\n\n    # Default to always using normal dependencies\n    if not all_dependency_maps:\n        all_dependency_maps.append(_NORMAL_DEPENDENCIES)\n\n    dependencies = _flatten_dependency_maps(all_dependency_maps).pop(package_name, None)\n\n    if not dependencies:\n        if dependencies == None:\n            fail(\"Tried to get all_crate_deps for package \" + package_name + \" but that package had no Cargo.toml file\")\n        else:\n            return []\n\n    crate_deps = list(dependencies.pop(_COMMON_CONDITION, {}).values())\n    for condition, deps in dependencies.items():\n        crate_deps += selects.with_or({\n            tuple(_CONDITIONS[condition]): deps.values(),\n            \"//conditions:default\": [],\n        })\n\n    return crate_deps\n\ndef aliases(\n        normal = False,\n        normal_dev = False,\n        proc_macro = False,\n        proc_macro_dev = False,\n        build = False,\n        build_proc_macro = False,\n        package_name = None):\n    \"\"\"Produces a map of Crate alias names to their original label\n\n    If no dependency kinds are specified, `normal` and `proc_macro` are used by default.\n    Setting any one flag will otherwise determine the contents of the returned dict.\n\n    Args:\n        normal (bool, optional): If True, normal dependencies are included in the\n            output list.\n        normal_dev (bool, optional): If True, normal dev dependencies will be\n            included in the output list..\n        proc_macro (bool, optional): If True, proc_macro dependencies are included\n            in the output list.\n        proc_macro_dev (bool, optional): If True, dev proc_macro dependencies are\n            included in the output list.\n        build (bool, optional): If True, build dependencies are included\n            in the output list.\n        build_proc_macro (bool, optional): If True, build proc_macro dependencies are\n            included in the output list.\n        package_name (str, optional): The package name of the set of dependencies to look up.\n            Defaults to `native.package_name()` when unset.\n\n    Returns:\n        dict: The aliases of all associated packages\n    \"\"\"\n    if package_name == None:\n        package_name = native.package_name()\n\n    # Determine the relevant maps to use\n    all_aliases_maps = []\n    if normal:\n        all_aliases_maps.append(_NORMAL_ALIASES)\n    if normal_dev:\n        all_aliases_maps.append(_NORMAL_DEV_ALIASES)\n    if proc_macro:\n        all_aliases_maps.append(_PROC_MACRO_ALIASES)\n    if proc_macro_dev:\n        all_aliases_maps.append(_PROC_MACRO_DEV_ALIASES)\n    if build:\n        all_aliases_maps.append(_BUILD_ALIASES)\n    if build_proc_macro:\n        all_aliases_maps.append(_BUILD_PROC_MACRO_ALIASES)\n\n    # Default to always using normal aliases\n    if not all_aliases_maps:\n        all_aliases_maps.append(_NORMAL_ALIASES)\n        all_aliases_maps.append(_PROC_MACRO_ALIASES)\n\n    aliases = _flatten_dependency_maps(all_aliases_maps).pop(package_name, None)\n\n    if not aliases:\n        return dict()\n\n    common_items = aliases.pop(_COMMON_CONDITION, {}).items()\n\n    # If there are only common items in the dictionary, immediately return them\n    if not len(aliases.keys()) == 1:\n        return dict(common_items)\n\n    # Build a single select statement where each conditional has accounted for the\n    # common set of aliases.\n    crate_aliases = {\"//conditions:default\": dict(common_items)}\n    for condition, deps in aliases.items():\n        condition_triples = _CONDITIONS[condition]\n        for triple in condition_triples:\n            if triple in crate_aliases:\n                crate_aliases[triple].update(deps)\n            else:\n                crate_aliases.update({triple: dict(deps.items() + common_items)})\n\n    return select(crate_aliases)\n\n###############################################################################\n# WORKSPACE MEMBER DEPS AND ALIASES\n###############################################################################\n\n_NORMAL_DEPENDENCIES = {\n    \"third_party/rust_efi\": {\n        _COMMON_CONDITION: {\n            \"prost\": Label(\"@crate_index_efi//:prost-0.12.1\"),\n            \"prost-types\": Label(\"@crate_index_efi//:prost-types-0.12.1\"),\n            \"uefi\": Label(\"@crate_index_efi//:uefi-0.24.0\"),\n            \"uefi-services\": Label(\"@crate_index_efi//:uefi-services-0.21.0\"),\n        },\n    },\n}\n\n\n_NORMAL_ALIASES = {\n    \"third_party/rust_efi\": {\n        _COMMON_CONDITION: {\n        },\n    },\n}\n\n\n_NORMAL_DEV_DEPENDENCIES = {\n    \"third_party/rust_efi\": {\n    },\n}\n\n\n_NORMAL_DEV_ALIASES = {\n    \"third_party/rust_efi\": {\n    },\n}\n\n\n_PROC_MACRO_DEPENDENCIES = {\n    \"third_party/rust_efi\": {\n    },\n}\n\n\n_PROC_MACRO_ALIASES = {\n    \"third_party/rust_efi\": {\n    },\n}\n\n\n_PROC_MACRO_DEV_DEPENDENCIES = {\n    \"third_party/rust_efi\": {\n    },\n}\n\n\n_PROC_MACRO_DEV_ALIASES = {\n    \"third_party/rust_efi\": {\n    },\n}\n\n\n_BUILD_DEPENDENCIES = {\n    \"third_party/rust_efi\": {\n    },\n}\n\n\n_BUILD_ALIASES = {\n    \"third_party/rust_efi\": {\n    },\n}\n\n\n_BUILD_PROC_MACRO_DEPENDENCIES = {\n    \"third_party/rust_efi\": {\n    },\n}\n\n\n_BUILD_PROC_MACRO_ALIASES = {\n    \"third_party/rust_efi\": {\n    },\n}\n\n\n_CONDITIONS = {\n    \"aarch64-unknown-uefi\": [\"@rules_rust//rust/platform:aarch64-unknown-uefi\"],\n    \"x86_64-unknown-linux-gnu\": [\"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\"],\n    \"x86_64-unknown-uefi\": [\"@rules_rust//rust/platform:x86_64-unknown-uefi\"],\n}\n\n###############################################################################\n\ndef crate_repositories():\n    \"\"\"A macro for defining repositories for all generated crates.\n\n    Returns:\n      A list of repos visible to the module through the module extension.\n    \"\"\"\n    maybe(\n        http_archive,\n        name = \"crate_index_efi__anyhow-1.0.75\",\n        sha256 = \"a4668cab20f66d8d020e1fbc0ebe47217433c1b6c8f2040faf858554e394ace6\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/anyhow/1.0.75/download\"],\n        strip_prefix = \"anyhow-1.0.75\",\n        build_file = Label(\"@crate_index_efi//crate_index_efi:BUILD.anyhow-1.0.75.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index_efi__bit_field-0.10.2\",\n        sha256 = \"dc827186963e592360843fb5ba4b973e145841266c1357f7180c43526f2e5b61\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/bit_field/0.10.2/download\"],\n        strip_prefix = \"bit_field-0.10.2\",\n        build_file = Label(\"@crate_index_efi//crate_index_efi:BUILD.bit_field-0.10.2.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index_efi__bitflags-2.4.0\",\n        sha256 = \"b4682ae6287fcf752ecaabbfcc7b6f9b72aa33933dc23a554d853aea8eea8635\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/bitflags/2.4.0/download\"],\n        strip_prefix = \"bitflags-2.4.0\",\n        build_file = Label(\"@crate_index_efi//crate_index_efi:BUILD.bitflags-2.4.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index_efi__bytes-1.5.0\",\n        sha256 = \"a2bd12c1caf447e69cd4528f47f94d203fd2582878ecb9e9465484c4148a8223\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/bytes/1.5.0/download\"],\n        strip_prefix = \"bytes-1.5.0\",\n        build_file = Label(\"@crate_index_efi//crate_index_efi:BUILD.bytes-1.5.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index_efi__cfg-if-1.0.0\",\n        sha256 = \"baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/cfg-if/1.0.0/download\"],\n        strip_prefix = \"cfg-if-1.0.0\",\n        build_file = Label(\"@crate_index_efi//crate_index_efi:BUILD.cfg-if-1.0.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index_efi__either-1.9.0\",\n        sha256 = \"a26ae43d7bcc3b814de94796a5e736d4029efb0ee900c12e2d54c993ad1a1e07\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/either/1.9.0/download\"],\n        strip_prefix = \"either-1.9.0\",\n        build_file = Label(\"@crate_index_efi//crate_index_efi:BUILD.either-1.9.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index_efi__itertools-0.11.0\",\n        sha256 = \"b1c173a5686ce8bfa551b3563d0c2170bf24ca44da99c7ca4bfdab5418c3fe57\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/itertools/0.11.0/download\"],\n        strip_prefix = \"itertools-0.11.0\",\n        build_file = Label(\"@crate_index_efi//crate_index_efi:BUILD.itertools-0.11.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index_efi__log-0.4.20\",\n        sha256 = \"b5e6163cb8c49088c2c36f57875e58ccd8c87c7427f7fbd50ea6710b2f3f2e8f\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/log/0.4.20/download\"],\n        strip_prefix = \"log-0.4.20\",\n        build_file = Label(\"@crate_index_efi//crate_index_efi:BUILD.log-0.4.20.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index_efi__proc-macro2-1.0.67\",\n        sha256 = \"3d433d9f1a3e8c1263d9456598b16fec66f4acc9a74dacffd35c7bb09b3a1328\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/proc-macro2/1.0.67/download\"],\n        strip_prefix = \"proc-macro2-1.0.67\",\n        build_file = Label(\"@crate_index_efi//crate_index_efi:BUILD.proc-macro2-1.0.67.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index_efi__prost-0.12.1\",\n        sha256 = \"f4fdd22f3b9c31b53c060df4a0613a1c7f062d4115a2b984dd15b1858f7e340d\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/prost/0.12.1/download\"],\n        strip_prefix = \"prost-0.12.1\",\n        build_file = Label(\"@crate_index_efi//crate_index_efi:BUILD.prost-0.12.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index_efi__prost-derive-0.12.1\",\n        sha256 = \"265baba7fabd416cf5078179f7d2cbeca4ce7a9041111900675ea7c4cb8a4c32\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/prost-derive/0.12.1/download\"],\n        strip_prefix = \"prost-derive-0.12.1\",\n        build_file = Label(\"@crate_index_efi//crate_index_efi:BUILD.prost-derive-0.12.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index_efi__prost-types-0.12.1\",\n        sha256 = \"e081b29f63d83a4bc75cfc9f3fe424f9156cf92d8a4f0c9407cce9a1b67327cf\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/prost-types/0.12.1/download\"],\n        strip_prefix = \"prost-types-0.12.1\",\n        build_file = Label(\"@crate_index_efi//crate_index_efi:BUILD.prost-types-0.12.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index_efi__ptr_meta-0.2.0\",\n        sha256 = \"bcada80daa06c42ed5f48c9a043865edea5dc44cbf9ac009fda3b89526e28607\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/ptr_meta/0.2.0/download\"],\n        strip_prefix = \"ptr_meta-0.2.0\",\n        build_file = Label(\"@crate_index_efi//crate_index_efi:BUILD.ptr_meta-0.2.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index_efi__ptr_meta_derive-0.2.0\",\n        sha256 = \"bca9224df2e20e7c5548aeb5f110a0f3b77ef05f8585139b7148b59056168ed2\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/ptr_meta_derive/0.2.0/download\"],\n        strip_prefix = \"ptr_meta_derive-0.2.0\",\n        build_file = Label(\"@crate_index_efi//crate_index_efi:BUILD.ptr_meta_derive-0.2.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index_efi__quote-1.0.33\",\n        sha256 = \"5267fca4496028628a95160fc423a33e8b2e6af8a5302579e322e4b520293cae\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/quote/1.0.33/download\"],\n        strip_prefix = \"quote-1.0.33\",\n        build_file = Label(\"@crate_index_efi//crate_index_efi:BUILD.quote-1.0.33.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index_efi__syn-1.0.109\",\n        sha256 = \"72b64191b275b66ffe2469e8af2c1cfe3bafa67b529ead792a6d0160888b4237\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/syn/1.0.109/download\"],\n        strip_prefix = \"syn-1.0.109\",\n        build_file = Label(\"@crate_index_efi//crate_index_efi:BUILD.syn-1.0.109.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index_efi__syn-2.0.37\",\n        sha256 = \"7303ef2c05cd654186cb250d29049a24840ca25d2747c25c0381c8d9e2f582e8\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/syn/2.0.37/download\"],\n        strip_prefix = \"syn-2.0.37\",\n        build_file = Label(\"@crate_index_efi//crate_index_efi:BUILD.syn-2.0.37.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index_efi__ucs2-0.3.2\",\n        sha256 = \"bad643914094137d475641b6bab89462505316ec2ce70907ad20102d28a79ab8\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/ucs2/0.3.2/download\"],\n        strip_prefix = \"ucs2-0.3.2\",\n        build_file = Label(\"@crate_index_efi//crate_index_efi:BUILD.ucs2-0.3.2.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index_efi__uefi-0.24.0\",\n        sha256 = \"3b63e82686b4bdb0db74f18b2abbd60a0470354fb640aa69e115598d714d0a10\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/uefi/0.24.0/download\"],\n        strip_prefix = \"uefi-0.24.0\",\n        build_file = Label(\"@crate_index_efi//crate_index_efi:BUILD.uefi-0.24.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index_efi__uefi-macros-0.12.0\",\n        sha256 = \"023d94ef8e135d068b9a3bd94614ef2610b2b0419ade0a9d8f3501fa9cd08e95\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/uefi-macros/0.12.0/download\"],\n        strip_prefix = \"uefi-macros-0.12.0\",\n        build_file = Label(\"@crate_index_efi//crate_index_efi:BUILD.uefi-macros-0.12.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index_efi__uefi-raw-0.3.0\",\n        sha256 = \"62642516099c6441a5f41b0da8486d5fc3515a0603b0fdaea67b31600e22082e\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/uefi-raw/0.3.0/download\"],\n        strip_prefix = \"uefi-raw-0.3.0\",\n        build_file = Label(\"@crate_index_efi//crate_index_efi:BUILD.uefi-raw-0.3.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index_efi__uefi-services-0.21.0\",\n        sha256 = \"44b32954ebbb4be5ebfde0df6699c2091f04e9f9c3762c65f3435dfb1a90a668\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/uefi-services/0.21.0/download\"],\n        strip_prefix = \"uefi-services-0.21.0\",\n        build_file = Label(\"@crate_index_efi//crate_index_efi:BUILD.uefi-services-0.21.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index_efi__uguid-2.2.0\",\n        sha256 = \"ab14ea9660d240e7865ce9d54ecdbd1cd9fa5802ae6f4512f093c7907e921533\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/uguid/2.2.0/download\"],\n        strip_prefix = \"uguid-2.2.0\",\n        build_file = Label(\"@crate_index_efi//crate_index_efi:BUILD.uguid-2.2.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index_efi__unicode-ident-1.0.12\",\n        sha256 = \"3354b9ac3fae1ff6755cb6db53683adb661634f67557942dea4facebec0fee4b\",\n        type = \"tar.gz\",\n        urls = [\"https://static.crates.io/crates/unicode-ident/1.0.12/download\"],\n        strip_prefix = \"unicode-ident-1.0.12\",\n        build_file = Label(\"@crate_index_efi//crate_index_efi:BUILD.unicode-ident-1.0.12.bazel\"),\n    )\n\n    return [\n       struct(repo=\"crate_index_efi__prost-0.12.1\", is_dev_dep = False),\n       struct(repo=\"crate_index_efi__prost-types-0.12.1\", is_dev_dep = False),\n       struct(repo=\"crate_index_efi__uefi-0.24.0\", is_dev_dep = False),\n       struct(repo=\"crate_index_efi__uefi-services-0.21.0\", is_dev_dep = False),\n    ]\n"
              }
            }
          },
          "crate_index_efi__anyhow-1.0.75": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "a4668cab20f66d8d020e1fbc0ebe47217433c1b6c8f2040faf858554e394ace6",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/anyhow/1.0.75/download"
              ],
              "strip_prefix": "anyhow-1.0.75",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"anyhow\",\n    deps = [\n        \"@crate_index_efi__anyhow-1.0.75//:build_script_build\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=anyhow\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-unknown-uefi\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-uefi\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.0.75\",\n)\n\ncargo_build_script(\n    name = \"_bs\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \"**/*.rs\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"std\",\n    ],\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2018\",\n    pkg_name = \"anyhow\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=anyhow\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"1.0.75\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index_efi__bit_field-0.10.2": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "dc827186963e592360843fb5ba4b973e145841266c1357f7180c43526f2e5b61",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/bit_field/0.10.2/download"
              ],
              "strip_prefix": "bit_field-0.10.2",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"bit_field\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=bit_field\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-unknown-uefi\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-uefi\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.10.2\",\n)\n"
            }
          },
          "crate_index_efi__bitflags-2.4.0": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "b4682ae6287fcf752ecaabbfcc7b6f9b72aa33933dc23a554d853aea8eea8635",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/bitflags/2.4.0/download"
              ],
              "strip_prefix": "bitflags-2.4.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"bitflags\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=bitflags\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-unknown-uefi\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-uefi\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"2.4.0\",\n)\n"
            }
          },
          "crate_index_efi__bytes-1.5.0": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "a2bd12c1caf447e69cd4528f47f94d203fd2582878ecb9e9465484c4148a8223",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/bytes/1.5.0/download"
              ],
              "strip_prefix": "bytes-1.5.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"bytes\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=bytes\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-unknown-uefi\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-uefi\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.5.0\",\n)\n"
            }
          },
          "crate_index_efi__cfg-if-1.0.0": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/cfg-if/1.0.0/download"
              ],
              "strip_prefix": "cfg-if-1.0.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"cfg_if\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=cfg-if\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-unknown-uefi\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-uefi\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.0.0\",\n)\n"
            }
          },
          "crate_index_efi__either-1.9.0": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "a26ae43d7bcc3b814de94796a5e736d4029efb0ee900c12e2d54c993ad1a1e07",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/either/1.9.0/download"
              ],
              "strip_prefix": "either-1.9.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"either\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=either\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-unknown-uefi\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-uefi\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.9.0\",\n)\n"
            }
          },
          "crate_index_efi__itertools-0.11.0": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "b1c173a5686ce8bfa551b3563d0c2170bf24ca44da99c7ca4bfdab5418c3fe57",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/itertools/0.11.0/download"
              ],
              "strip_prefix": "itertools-0.11.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"itertools\",\n    deps = [\n        \"@crate_index_efi__either-1.9.0//:either\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"use_alloc\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=itertools\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-unknown-uefi\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-uefi\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.11.0\",\n)\n"
            }
          },
          "crate_index_efi__log-0.4.20": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "b5e6163cb8c49088c2c36f57875e58ccd8c87c7427f7fbd50ea6710b2f3f2e8f",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/log/0.4.20/download"
              ],
              "strip_prefix": "log-0.4.20",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"log\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=log\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-unknown-uefi\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-uefi\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.4.20\",\n)\n"
            }
          },
          "crate_index_efi__proc-macro2-1.0.67": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "3d433d9f1a3e8c1263d9456598b16fec66f4acc9a74dacffd35c7bb09b3a1328",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/proc-macro2/1.0.67/download"
              ],
              "strip_prefix": "proc-macro2-1.0.67",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"proc_macro2\",\n    deps = [\n        \"@crate_index_efi__proc-macro2-1.0.67//:build_script_build\",\n        \"@crate_index_efi__unicode-ident-1.0.12//:unicode_ident\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"proc-macro\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=proc-macro2\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-unknown-uefi\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-uefi\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.0.67\",\n)\n\ncargo_build_script(\n    name = \"_bs\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \"**/*.rs\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"proc-macro\",\n    ],\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2021\",\n    pkg_name = \"proc-macro2\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=proc-macro2\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"1.0.67\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index_efi__prost-0.12.1": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "f4fdd22f3b9c31b53c060df4a0613a1c7f062d4115a2b984dd15b1858f7e340d",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/prost/0.12.1/download"
              ],
              "strip_prefix": "prost-0.12.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"prost\",\n    deps = [\n        \"@crate_index_efi__bytes-1.5.0//:bytes\",\n    ],\n    proc_macro_deps = [\n        \"@crate_index_efi__prost-derive-0.12.1//:prost_derive\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"prost-derive\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=prost\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-unknown-uefi\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-uefi\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.12.1\",\n)\n"
            }
          },
          "crate_index_efi__prost-derive-0.12.1": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "265baba7fabd416cf5078179f7d2cbeca4ce7a9041111900675ea7c4cb8a4c32",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/prost-derive/0.12.1/download"
              ],
              "strip_prefix": "prost-derive-0.12.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_proc_macro\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_proc_macro(\n    name = \"prost_derive\",\n    deps = [\n        \"@crate_index_efi__anyhow-1.0.75//:anyhow\",\n        \"@crate_index_efi__itertools-0.11.0//:itertools\",\n        \"@crate_index_efi__proc-macro2-1.0.67//:proc_macro2\",\n        \"@crate_index_efi__quote-1.0.33//:quote\",\n        \"@crate_index_efi__syn-2.0.37//:syn\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=prost-derive\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-unknown-uefi\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-uefi\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.12.1\",\n)\n"
            }
          },
          "crate_index_efi__prost-types-0.12.1": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "e081b29f63d83a4bc75cfc9f3fe424f9156cf92d8a4f0c9407cce9a1b67327cf",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/prost-types/0.12.1/download"
              ],
              "strip_prefix": "prost-types-0.12.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"prost_types\",\n    deps = [\n        \"@crate_index_efi__prost-0.12.1//:prost\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=prost-types\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-unknown-uefi\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-uefi\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.12.1\",\n)\n"
            }
          },
          "crate_index_efi__ptr_meta-0.2.0": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "bcada80daa06c42ed5f48c9a043865edea5dc44cbf9ac009fda3b89526e28607",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/ptr_meta/0.2.0/download"
              ],
              "strip_prefix": "ptr_meta-0.2.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"ptr_meta\",\n    proc_macro_deps = [\n        \"@crate_index_efi__ptr_meta_derive-0.2.0//:ptr_meta_derive\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=ptr_meta\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-unknown-uefi\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-uefi\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.2.0\",\n)\n"
            }
          },
          "crate_index_efi__ptr_meta_derive-0.2.0": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "bca9224df2e20e7c5548aeb5f110a0f3b77ef05f8585139b7148b59056168ed2",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/ptr_meta_derive/0.2.0/download"
              ],
              "strip_prefix": "ptr_meta_derive-0.2.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_proc_macro\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_proc_macro(\n    name = \"ptr_meta_derive\",\n    deps = [\n        \"@crate_index_efi__proc-macro2-1.0.67//:proc_macro2\",\n        \"@crate_index_efi__quote-1.0.33//:quote\",\n        \"@crate_index_efi__syn-1.0.109//:syn\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=ptr_meta_derive\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-unknown-uefi\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-uefi\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.2.0\",\n)\n"
            }
          },
          "crate_index_efi__quote-1.0.33": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "5267fca4496028628a95160fc423a33e8b2e6af8a5302579e322e4b520293cae",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/quote/1.0.33/download"
              ],
              "strip_prefix": "quote-1.0.33",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"quote\",\n    deps = [\n        \"@crate_index_efi__proc-macro2-1.0.67//:proc_macro2\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"proc-macro\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=quote\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-unknown-uefi\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-uefi\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.0.33\",\n)\n"
            }
          },
          "crate_index_efi__syn-1.0.109": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "72b64191b275b66ffe2469e8af2c1cfe3bafa67b529ead792a6d0160888b4237",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/syn/1.0.109/download"
              ],
              "strip_prefix": "syn-1.0.109",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"syn\",\n    deps = [\n        \"@crate_index_efi__proc-macro2-1.0.67//:proc_macro2\",\n        \"@crate_index_efi__quote-1.0.33//:quote\",\n        \"@crate_index_efi__syn-1.0.109//:build_script_build\",\n        \"@crate_index_efi__unicode-ident-1.0.12//:unicode_ident\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"clone-impls\",\n        \"default\",\n        \"derive\",\n        \"full\",\n        \"parsing\",\n        \"printing\",\n        \"proc-macro\",\n        \"quote\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=syn\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-unknown-uefi\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-uefi\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.0.109\",\n)\n\ncargo_build_script(\n    name = \"_bs\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \"**/*.rs\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"clone-impls\",\n        \"default\",\n        \"derive\",\n        \"full\",\n        \"parsing\",\n        \"printing\",\n        \"proc-macro\",\n        \"quote\",\n    ],\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2018\",\n    pkg_name = \"syn\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=syn\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"1.0.109\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index_efi__syn-2.0.37": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "7303ef2c05cd654186cb250d29049a24840ca25d2747c25c0381c8d9e2f582e8",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/syn/2.0.37/download"
              ],
              "strip_prefix": "syn-2.0.37",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"syn\",\n    deps = [\n        \"@crate_index_efi__proc-macro2-1.0.67//:proc_macro2\",\n        \"@crate_index_efi__quote-1.0.33//:quote\",\n        \"@crate_index_efi__unicode-ident-1.0.12//:unicode_ident\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"clone-impls\",\n        \"default\",\n        \"derive\",\n        \"extra-traits\",\n        \"full\",\n        \"parsing\",\n        \"printing\",\n        \"proc-macro\",\n        \"quote\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=syn\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-unknown-uefi\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-uefi\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"2.0.37\",\n)\n"
            }
          },
          "crate_index_efi__ucs2-0.3.2": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "bad643914094137d475641b6bab89462505316ec2ce70907ad20102d28a79ab8",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/ucs2/0.3.2/download"
              ],
              "strip_prefix": "ucs2-0.3.2",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"ucs2\",\n    deps = [\n        \"@crate_index_efi__bit_field-0.10.2//:bit_field\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=ucs2\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-unknown-uefi\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-uefi\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.3.2\",\n)\n"
            }
          },
          "crate_index_efi__uefi-0.24.0": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "3b63e82686b4bdb0db74f18b2abbd60a0470354fb640aa69e115598d714d0a10",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/uefi/0.24.0/download"
              ],
              "strip_prefix": "uefi-0.24.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"uefi\",\n    deps = [\n        \"@crate_index_efi__bitflags-2.4.0//:bitflags\",\n        \"@crate_index_efi__log-0.4.20//:log\",\n        \"@crate_index_efi__ptr_meta-0.2.0//:ptr_meta\",\n        \"@crate_index_efi__ucs2-0.3.2//:ucs2\",\n        \"@crate_index_efi__uefi-raw-0.3.0//:uefi_raw\",\n        \"@crate_index_efi__uguid-2.2.0//:uguid\",\n    ],\n    proc_macro_deps = [\n        \"@crate_index_efi__uefi-macros-0.12.0//:uefi_macros\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"alloc\",\n        \"default\",\n        \"global_allocator\",\n        \"logger\",\n        \"panic-on-logger-errors\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=uefi\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-unknown-uefi\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-uefi\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.24.0\",\n)\n"
            }
          },
          "crate_index_efi__uefi-macros-0.12.0": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "023d94ef8e135d068b9a3bd94614ef2610b2b0419ade0a9d8f3501fa9cd08e95",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/uefi-macros/0.12.0/download"
              ],
              "strip_prefix": "uefi-macros-0.12.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_proc_macro\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_proc_macro(\n    name = \"uefi_macros\",\n    deps = [\n        \"@crate_index_efi__proc-macro2-1.0.67//:proc_macro2\",\n        \"@crate_index_efi__quote-1.0.33//:quote\",\n        \"@crate_index_efi__syn-2.0.37//:syn\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=uefi-macros\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-unknown-uefi\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-uefi\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.12.0\",\n)\n"
            }
          },
          "crate_index_efi__uefi-raw-0.3.0": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "62642516099c6441a5f41b0da8486d5fc3515a0603b0fdaea67b31600e22082e",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/uefi-raw/0.3.0/download"
              ],
              "strip_prefix": "uefi-raw-0.3.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"uefi_raw\",\n    deps = [\n        \"@crate_index_efi__bitflags-2.4.0//:bitflags\",\n        \"@crate_index_efi__ptr_meta-0.2.0//:ptr_meta\",\n        \"@crate_index_efi__uguid-2.2.0//:uguid\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=uefi-raw\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-unknown-uefi\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-uefi\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.3.0\",\n)\n"
            }
          },
          "crate_index_efi__uefi-services-0.21.0": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "44b32954ebbb4be5ebfde0df6699c2091f04e9f9c3762c65f3435dfb1a90a668",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/uefi-services/0.21.0/download"
              ],
              "strip_prefix": "uefi-services-0.21.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"uefi_services\",\n    deps = [\n        \"@crate_index_efi__cfg-if-1.0.0//:cfg_if\",\n        \"@crate_index_efi__log-0.4.20//:log\",\n        \"@crate_index_efi__uefi-0.24.0//:uefi\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"logger\",\n        \"panic_handler\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=uefi-services\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-unknown-uefi\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-uefi\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.21.0\",\n)\n"
            }
          },
          "crate_index_efi__uguid-2.2.0": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "ab14ea9660d240e7865ce9d54ecdbd1cd9fa5802ae6f4512f093c7907e921533",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/uguid/2.2.0/download"
              ],
              "strip_prefix": "uguid-2.2.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"uguid\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=uguid\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-unknown-uefi\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-uefi\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"2.2.0\",\n)\n"
            }
          },
          "crate_index_efi__unicode-ident-1.0.12": {
            "repoRuleId": "@@bazel_tools//tools/build_defs/repo:http.bzl%http_archive",
            "attributes": {
              "patch_args": [],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "3354b9ac3fae1ff6755cb6db53683adb661634f67557942dea4facebec0fee4b",
              "type": "tar.gz",
              "urls": [
                "https://static.crates.io/crates/unicode-ident/1.0.12/download"
              ],
              "strip_prefix": "unicode-ident-1.0.12",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     bazel mod show_repo ''\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"unicode_ident\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = True,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=unicode-ident\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-unknown-uefi\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-uefi\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.0.12\",\n)\n"
            }
          }
        },
        "moduleExtensionMetadata": {
          "useAllRepos": "NO",
          "reproducible": false
        },
        "recordedRepoMappingEntries": [
          [
            "bazel_features+",
            "bazel_features_globals",
            "bazel_features++version_extension+bazel_features_globals"
          ],
          [
            "bazel_features+",
            "bazel_features_version",
            "bazel_features++version_extension+bazel_features_version"
          ],
          [
            "bazel_tools",
            "rules_cc",
            "rules_cc+"
          ],
          [
            "rules_cc+",
            "bazel_tools",
            "bazel_tools"
          ],
          [
            "rules_cc+",
            "rules_cc",
            "rules_cc+"
          ],
          [
            "rules_rust+",
            "bazel_features",
            "bazel_features+"
          ],
          [
            "rules_rust+",
            "bazel_skylib",
            "bazel_skylib+"
          ],
          [
            "rules_rust+",
            "bazel_tools",
            "bazel_tools"
          ],
          [
            "rules_rust+",
            "rules_rust",
            "rules_rust+"
          ],
          [
            "rules_rust+",
            "rust_host_tools",
            "rules_rust++rust_host_tools+rust_host_tools"
          ]
        ]
      }
    },
    "@@rules_rust+//crate_universe/private:internal_extensions.bzl%cu_nr": {
      "general": {
        "bzlTransitiveDigest": "UHW1mA/1rM0+1jb487CXS5iMGyvr/KnoqrInp2qudxg=",
        "usagesDigest": "JTRjQHmqGCK2FUQYDLQD4VejKtuKKC8LrOQhFOpHPPo=",
        "recordedFileInputs": {},
        "recordedDirentsInputs": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "cargo_bazel_bootstrap": {
            "repoRuleId": "@@rules_rust+//cargo/private:cargo_bootstrap.bzl%cargo_bootstrap_repository",
            "attributes": {
              "srcs": [
                "@@rules_rust+//crate_universe:src/api.rs",
                "@@rules_rust+//crate_universe:src/api/lockfile.rs",
                "@@rules_rust+//crate_universe:src/cli.rs",
                "@@rules_rust+//crate_universe:src/cli/generate.rs",
                "@@rules_rust+//crate_universe:src/cli/query.rs",
                "@@rules_rust+//crate_universe:src/cli/render.rs",
                "@@rules_rust+//crate_universe:src/cli/splice.rs",
                "@@rules_rust+//crate_universe:src/cli/vendor.rs",
                "@@rules_rust+//crate_universe:src/config.rs",
                "@@rules_rust+//crate_universe:src/context.rs",
                "@@rules_rust+//crate_universe:src/context/crate_context.rs",
                "@@rules_rust+//crate_universe:src/context/platforms.rs",
                "@@rules_rust+//crate_universe:src/lib.rs",
                "@@rules_rust+//crate_universe:src/lockfile.rs",
                "@@rules_rust+//crate_universe:src/main.rs",
                "@@rules_rust+//crate_universe:src/metadata.rs",
                "@@rules_rust+//crate_universe:src/metadata/cargo_bin.rs",
                "@@rules_rust+//crate_universe:src/metadata/cargo_tree_resolver.rs",
                "@@rules_rust+//crate_universe:src/metadata/cargo_tree_rustc_wrapper.bat",
                "@@rules_rust+//crate_universe:src/metadata/cargo_tree_rustc_wrapper.sh",
                "@@rules_rust+//crate_universe:src/metadata/dependency.rs",
                "@@rules_rust+//crate_universe:src/metadata/metadata_annotation.rs",
                "@@rules_rust+//crate_universe:src/metadata/workspace_discoverer.rs",
                "@@rules_rust+//crate_universe:src/rendering.rs",
                "@@rules_rust+//crate_universe:src/rendering/template_engine.rs",
                "@@rules_rust+//crate_universe:src/rendering/templates/module_bzl.j2",
                "@@rules_rust+//crate_universe:src/rendering/templates/partials/header.j2",
                "@@rules_rust+//crate_universe:src/rendering/templates/partials/module/aliases_map.j2",
                "@@rules_rust+//crate_universe:src/rendering/templates/partials/module/deps_map.j2",
                "@@rules_rust+//crate_universe:src/rendering/templates/partials/module/repo_git.j2",
                "@@rules_rust+//crate_universe:src/rendering/templates/partials/module/repo_http.j2",
                "@@rules_rust+//crate_universe:src/rendering/templates/vendor_module.j2",
                "@@rules_rust+//crate_universe:src/rendering/verbatim/alias_rules.bzl",
                "@@rules_rust+//crate_universe:src/select.rs",
                "@@rules_rust+//crate_universe:src/splicing.rs",
                "@@rules_rust+//crate_universe:src/splicing/cargo_config.rs",
                "@@rules_rust+//crate_universe:src/splicing/crate_index_lookup.rs",
                "@@rules_rust+//crate_universe:src/splicing/splicer.rs",
                "@@rules_rust+//crate_universe:src/test.rs",
                "@@rules_rust+//crate_universe:src/utils.rs",
                "@@rules_rust+//crate_universe:src/utils/starlark.rs",
                "@@rules_rust+//crate_universe:src/utils/starlark/glob.rs",
                "@@rules_rust+//crate_universe:src/utils/starlark/label.rs",
                "@@rules_rust+//crate_universe:src/utils/starlark/select.rs",
                "@@rules_rust+//crate_universe:src/utils/starlark/select_dict.rs",
                "@@rules_rust+//crate_universe:src/utils/starlark/select_list.rs",
                "@@rules_rust+//crate_universe:src/utils/starlark/select_scalar.rs",
                "@@rules_rust+//crate_universe:src/utils/starlark/select_set.rs",
                "@@rules_rust+//crate_universe:src/utils/starlark/serialize.rs",
                "@@rules_rust+//crate_universe:src/utils/starlark/target_compatible_with.rs",
                "@@rules_rust+//crate_universe:src/utils/symlink.rs",
                "@@rules_rust+//crate_universe:src/utils/target_triple.rs"
              ],
              "binary": "cargo-bazel",
              "cargo_lockfile": "@@rules_rust+//crate_universe:Cargo.lock",
              "cargo_toml": "@@rules_rust+//crate_universe:Cargo.toml",
              "version": "1.84.0",
              "timeout": 900,
              "rust_toolchain_cargo_template": "@rust_host_tools//:bin/{tool}",
              "rust_toolchain_rustc_template": "@rust_host_tools//:bin/{tool}",
              "compressed_windows_toolchain_names": false
            }
          }
        },
        "moduleExtensionMetadata": {
          "explicitRootModuleDirectDeps": [
            "cargo_bazel_bootstrap"
          ],
          "explicitRootModuleDirectDevDeps": [],
          "useAllRepos": "NO",
          "reproducible": false
        },
        "recordedRepoMappingEntries": [
          [
            "bazel_features+",
            "bazel_features_globals",
            "bazel_features++version_extension+bazel_features_globals"
          ],
          [
            "bazel_features+",
            "bazel_features_version",
            "bazel_features++version_extension+bazel_features_version"
          ],
          [
            "bazel_tools",
            "rules_cc",
            "rules_cc+"
          ],
          [
            "rules_cc+",
            "bazel_tools",
            "bazel_tools"
          ],
          [
            "rules_cc+",
            "rules_cc",
            "rules_cc+"
          ],
          [
            "rules_rust+",
            "bazel_features",
            "bazel_features+"
          ],
          [
            "rules_rust+",
            "bazel_skylib",
            "bazel_skylib+"
          ],
          [
            "rules_rust+",
            "bazel_tools",
            "bazel_tools"
          ],
          [
            "rules_rust+",
            "cui",
            "rules_rust++cu+cui"
          ],
          [
            "rules_rust+",
            "rules_cc",
            "rules_cc+"
          ],
          [
            "rules_rust+",
            "rules_rust",
            "rules_rust+"
          ]
        ]
      }
    }
  }
}
