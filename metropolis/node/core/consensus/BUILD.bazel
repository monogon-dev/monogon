load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "consensus",
    srcs = [
        "configuration.go",
        "consensus.go",
        "logparser.go",
        "status.go",
        "testhelpers.go",
    ],
    importpath = "source.monogon.dev/metropolis/node/core/consensus",
    visibility = ["//:__subpackages__"],
    deps = [
        "//go/logging",
        "//metropolis/node",
        "//metropolis/node/core/consensus/client",
        "//metropolis/node/core/localstorage",
        "//osbase/event",
        "//osbase/event/memory",
        "//osbase/logbuffer",
        "//osbase/logtree",
        "//osbase/logtree/unraw",
        "//osbase/pki",
        "//osbase/supervisor",
        "@io_etcd_go_etcd_api_v3//etcdserverpb",
        "@io_etcd_go_etcd_client_v3//:client",
        "@io_etcd_go_etcd_server_v3//embed",
    ],
)

go_test(
    name = "consensus_test",
    size = "small",
    srcs = [
        "consensus_test.go",
        "logparser_test.go",
    ],
    embed = [":consensus"],
    tags = [
        # Enable network sandboxing by asking the Bazel executor to block any
        # network access. This is necessary as tests listen on static ports on
        # loopback.
        "block-network",
    ],
    deps = [
        "//go/logging",
        "//metropolis/node/core/localstorage",
        "//metropolis/node/core/localstorage/declarative",
        "//metropolis/test/util",
        "//osbase/logbuffer",
        "//osbase/logtree",
        "//osbase/supervisor",
        "@com_github_google_go_cmp//cmp",
    ],
)
