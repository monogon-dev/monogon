load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")

go_library(
    name = "core_lib",
    # keep
    srcs = [
        "main.go",
        "mounts.go",
        "nodeparams.go",
        "panichandler.go",
        "pstore.go",
        "sysctl.go",
    ] + select({
        "//metropolis/node:debug_build": [
            "debug_service_enabled.go",
            "delve_enabled.go",
        ],
        "//conditions:default": [
            "debug_service_disabled.go",
            "delve_disabled.go",
        ],
    }),
    importpath = "source.monogon.dev/metropolis/node/core",
    visibility = ["//visibility:private"],
    deps = [
        "//go/logging",
        "//metropolis/node",
        "//metropolis/node/core/cluster",
        "//metropolis/node/core/devmgr",
        "//metropolis/node/core/localstorage",
        "//metropolis/node/core/localstorage/declarative",
        "//metropolis/node/core/metrics",
        "//metropolis/node/core/mgmt",
        "//metropolis/node/core/network",
        "//metropolis/node/core/roleserve",
        "//metropolis/node/core/rpc/resolver",
        "//metropolis/node/core/tconsole",
        "//metropolis/node/core/time",
        "//metropolis/node/core/update",
        "//metropolis/proto/api",
        "//metropolis/version",
        "//osbase/logtree",
        "//osbase/net/dns",
        "//osbase/pstore",
        "//osbase/supervisor",
        "//osbase/sysctl",
        "//osbase/tpm",
        "//version",
        "@com_github_cenkalti_backoff_v4//:backoff",
        "@com_github_containerd_containerd_v2//client",
        "@com_github_containerd_containerd_v2//pkg/namespaces",
        "@com_github_opencontainers_runc//libcontainer/cgroups",
        "@org_golang_google_grpc//:grpc",
        "@org_golang_google_grpc//codes",
        "@org_golang_google_grpc//status",
        "@org_golang_google_protobuf//proto",
        "@org_golang_x_sys//unix",
    ],
)

go_binary(
    name = "core",
    embed = [":core_lib"],
    visibility = ["//metropolis/node:__pkg__"],
)
