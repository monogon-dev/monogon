load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
load("//osbase/test/ktest:ktest.bzl", "k_test")

go_library(
    name = "networkpolicy",
    srcs = ["networkpolicy.go"],
    importpath = "source.monogon.dev/metropolis/node/kubernetes/networkpolicy",
    visibility = ["//visibility:public"],
    deps = [
        "//go/logging",
        "//metropolis/node",
        "//osbase/supervisor",
        "@io_k8s_api//core/v1:core",
        "@io_k8s_client_go//informers",
        "@io_k8s_client_go//kubernetes",
        "@io_k8s_client_go//kubernetes/typed/core/v1:core",
        "@io_k8s_client_go//tools/cache",
        "@io_k8s_client_go//tools/cache/synctrack",
        "@io_k8s_client_go//tools/record",
        "@io_k8s_client_go//util/workqueue",
        "@io_k8s_kubectl//pkg/scheme",
        "@org_dolansoft_git_dolansoft_k8s_nft_npc//nftctrl",
    ],
)

go_test(
    name = "networkpolicy_test",
    srcs = ["networkpolicy_test.go"],
    deps = [
        "@com_github_mattfenwick_cyclonus//pkg/connectivity",
        "@com_github_mattfenwick_cyclonus//pkg/connectivity/probe",
        "@com_github_mattfenwick_cyclonus//pkg/generator",
        "@com_github_mattfenwick_cyclonus//pkg/kube",
        "@com_github_mattfenwick_cyclonus//pkg/matcher",
        "@com_github_vishvananda_netlink//:netlink",
        "@io_k8s_api//core/v1:core",
        "@io_k8s_api//networking/v1:networking",
        "@io_k8s_apimachinery//pkg/apis/meta/v1:meta",
        "@io_k8s_apimachinery//pkg/runtime",
        "@io_k8s_client_go//tools/cache",
        "@org_dolansoft_git_dolansoft_k8s_nft_npc//nftctrl",
        "@org_golang_x_sys//unix",
    ],
)

k_test(
    name = "ktest",
    tester = ":networkpolicy_test",
)
