load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "kubernetes",
    srcs = [
        "apiproxy.go",
        "apiserver.go",
        "controller-manager.go",
        "csi.go",
        "feature_gates.go",
        "kubelet.go",
        "labelmaker.go",
        "provisioner.go",
        "scheduler.go",
        "service_controller.go",
        "service_worker.go",
    ],
    importpath = "source.monogon.dev/metropolis/node/kubernetes",
    visibility = ["//metropolis/node:__subpackages__"],
    deps = [
        "//go/logging",
        "//go/net/tinylb",
        "//metropolis/node",
        "//metropolis/node/core/clusternet",
        "//metropolis/node/core/consensus",
        "//metropolis/node/core/curator/proto/api",
        "//metropolis/node/core/curator/watcher",
        "//metropolis/node/core/identity",
        "//metropolis/node/core/localstorage",
        "//metropolis/node/core/network",
        "//metropolis/node/kubernetes/authproxy",
        "//metropolis/node/kubernetes/clusternet",
        "//metropolis/node/kubernetes/metricsproxy",
        "//metropolis/node/kubernetes/nfproxy",
        "//metropolis/node/kubernetes/pki",
        "//metropolis/node/kubernetes/plugins/kvmdevice",
        "//metropolis/node/kubernetes/reconciler",
        "//metropolis/proto/api",
        "//osbase/event",
        "//osbase/event/memory",
        "//osbase/fileargs",
        "//osbase/fsquota",
        "//osbase/loop",
        "//osbase/net/dns/kubernetes",
        "//osbase/supervisor",
        "@com_github_container_storage_interface_spec//lib/go/csi",
        "@io_k8s_api//core/v1:core",
        "@io_k8s_api//storage/v1:storage",
        "@io_k8s_apimachinery//pkg/api/errors",
        "@io_k8s_apimachinery//pkg/apis/meta/v1:meta",
        "@io_k8s_apimachinery//pkg/runtime",
        "@io_k8s_apimachinery//pkg/runtime/schema",
        "@io_k8s_apiserver//pkg/apis/apiserver",
        "@io_k8s_client_go//applyconfigurations/core/v1:core",
        "@io_k8s_client_go//informers",
        "@io_k8s_client_go//informers/core/v1:core",
        "@io_k8s_client_go//informers/storage/v1:storage",
        "@io_k8s_client_go//kubernetes",
        "@io_k8s_client_go//kubernetes/scheme",
        "@io_k8s_client_go//kubernetes/typed/core/v1:core",
        "@io_k8s_client_go//tools/cache",
        "@io_k8s_client_go//tools/clientcmd",
        "@io_k8s_client_go//tools/record",
        "@io_k8s_client_go//tools/reference",
        "@io_k8s_client_go//util/workqueue",
        "@io_k8s_component_base//featuregate",
        "@io_k8s_kubelet//config/v1beta1",
        "@io_k8s_kubelet//pkg/apis/pluginregistration/v1:pluginregistration",
        "@io_k8s_kubernetes//pkg/features",
        "@io_k8s_kubernetes//plugin/pkg/admission/security/podsecurity",
        "@io_k8s_pod_security_admission//admission/api/v1:api",
        "@org_golang_google_grpc//:grpc",
        "@org_golang_google_grpc//codes",
        "@org_golang_google_grpc//status",
        "@org_golang_google_protobuf//types/known/wrapperspb",
        "@org_golang_x_sys//unix",
    ],
)

go_test(
    name = "kubernetes_test",
    srcs = ["feature_gates_test.go"],
    embed = [":kubernetes"],
    deps = [
        "@io_k8s_apiserver//pkg/util/feature",
        "@io_k8s_component_base//featuregate",
    ],
)
